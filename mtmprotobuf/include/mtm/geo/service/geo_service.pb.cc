// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/geo/service/geo_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mtm/geo/service/geo_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mtm {
namespace geo {
namespace service {

namespace {

const ::google::protobuf::Descriptor* GeographyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GeographyResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* VisualResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VisualResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BoolResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BoolResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddGeographyParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddGeographyParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveGeographyParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveGeographyParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveGeographiesParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveGeographiesParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* EditParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EditParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommitParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommitParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* EditResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EditResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetVisualsForUserParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetVisualsForUserParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddUserVisualParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddUserVisualParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddUserVisual2Parameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddUserVisual2Parameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveUserVisualParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveUserVisualParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetVisualParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetVisualParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddBitmapParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddBitmapParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* RollbackParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RollbackParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* Rollback2Parameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Rollback2Parameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* Rollback3Parameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Rollback3Parameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveGeographyResourceParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveGeographyResourceParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBitmapParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBitmapParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBitmapResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBitmapResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto() {
  protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mtm/geo/service/geo_service.proto");
  GOOGLE_CHECK(file != NULL);
  GeographyResponse_descriptor_ = file->message_type(0);
  static const int GeographyResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeographyResponse, geography_),
  };
  GeographyResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GeographyResponse_descriptor_,
      GeographyResponse::default_instance_,
      GeographyResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GeographyResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeographyResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeographyResponse, _is_default_instance_));
  VisualResponse_descriptor_ = file->message_type(1);
  static const int VisualResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisualResponse, visual_),
  };
  VisualResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VisualResponse_descriptor_,
      VisualResponse::default_instance_,
      VisualResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(VisualResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisualResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisualResponse, _is_default_instance_));
  BoolResponse_descriptor_ = file->message_type(2);
  static const int BoolResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolResponse, result_),
  };
  BoolResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BoolResponse_descriptor_,
      BoolResponse::default_instance_,
      BoolResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(BoolResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolResponse, _is_default_instance_));
  AddGeographyParameters_descriptor_ = file->message_type(3);
  static const int AddGeographyParameters_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGeographyParameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGeographyParameters, geography_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGeographyParameters, visual_),
  };
  AddGeographyParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddGeographyParameters_descriptor_,
      AddGeographyParameters::default_instance_,
      AddGeographyParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddGeographyParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGeographyParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGeographyParameters, _is_default_instance_));
  RemoveGeographyParameters_descriptor_ = file->message_type(4);
  static const int RemoveGeographyParameters_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographyParameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographyParameters, geography_id_),
  };
  RemoveGeographyParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoveGeographyParameters_descriptor_,
      RemoveGeographyParameters::default_instance_,
      RemoveGeographyParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoveGeographyParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographyParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographyParameters, _is_default_instance_));
  RemoveGeographiesParameters_descriptor_ = file->message_type(5);
  static const int RemoveGeographiesParameters_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographiesParameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographiesParameters, geography_ids_),
  };
  RemoveGeographiesParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoveGeographiesParameters_descriptor_,
      RemoveGeographiesParameters::default_instance_,
      RemoveGeographiesParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoveGeographiesParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographiesParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographiesParameters, _is_default_instance_));
  EditParameters_descriptor_ = file->message_type(6);
  static const int EditParameters_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditParameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditParameters, geography_id_),
  };
  EditParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EditParameters_descriptor_,
      EditParameters::default_instance_,
      EditParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(EditParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditParameters, _is_default_instance_));
  CommitParameters_descriptor_ = file->message_type(7);
  static const int CommitParameters_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitParameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitParameters, geography_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitParameters, visual_),
  };
  CommitParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommitParameters_descriptor_,
      CommitParameters::default_instance_,
      CommitParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommitParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitParameters, _is_default_instance_));
  EditResponse_descriptor_ = file->message_type(8);
  static const int EditResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditResponse, geography_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditResponse, visual_),
  };
  EditResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EditResponse_descriptor_,
      EditResponse::default_instance_,
      EditResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(EditResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditResponse, _is_default_instance_));
  GetVisualsForUserParameters_descriptor_ = file->message_type(9);
  static const int GetVisualsForUserParameters_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisualsForUserParameters, user_id_),
  };
  GetVisualsForUserParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetVisualsForUserParameters_descriptor_,
      GetVisualsForUserParameters::default_instance_,
      GetVisualsForUserParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetVisualsForUserParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisualsForUserParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisualsForUserParameters, _is_default_instance_));
  AddUserVisualParameters_descriptor_ = file->message_type(10);
  static const int AddUserVisualParameters_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserVisualParameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserVisualParameters, visual_),
  };
  AddUserVisualParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddUserVisualParameters_descriptor_,
      AddUserVisualParameters::default_instance_,
      AddUserVisualParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddUserVisualParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserVisualParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserVisualParameters, _is_default_instance_));
  AddUserVisual2Parameters_descriptor_ = file->message_type(11);
  static const int AddUserVisual2Parameters_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserVisual2Parameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserVisual2Parameters, visible_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserVisual2Parameters, geography_ids_),
  };
  AddUserVisual2Parameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddUserVisual2Parameters_descriptor_,
      AddUserVisual2Parameters::default_instance_,
      AddUserVisual2Parameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddUserVisual2Parameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserVisual2Parameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserVisual2Parameters, _is_default_instance_));
  RemoveUserVisualParameters_descriptor_ = file->message_type(12);
  static const int RemoveUserVisualParameters_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveUserVisualParameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveUserVisualParameters, visual_id_),
  };
  RemoveUserVisualParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoveUserVisualParameters_descriptor_,
      RemoveUserVisualParameters::default_instance_,
      RemoveUserVisualParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoveUserVisualParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveUserVisualParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveUserVisualParameters, _is_default_instance_));
  GetVisualParameters_descriptor_ = file->message_type(13);
  static const int GetVisualParameters_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisualParameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisualParameters, visual_id_),
  };
  GetVisualParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetVisualParameters_descriptor_,
      GetVisualParameters::default_instance_,
      GetVisualParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetVisualParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisualParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisualParameters, _is_default_instance_));
  AddBitmapParameters_descriptor_ = file->message_type(14);
  static const int AddBitmapParameters_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBitmapParameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBitmapParameters, bitmap_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBitmapParameters, bitmap_data_),
  };
  AddBitmapParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddBitmapParameters_descriptor_,
      AddBitmapParameters::default_instance_,
      AddBitmapParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddBitmapParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBitmapParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBitmapParameters, _is_default_instance_));
  RollbackParameters_descriptor_ = file->message_type(15);
  static const int RollbackParameters_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RollbackParameters, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RollbackParameters, object_id_),
  };
  RollbackParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RollbackParameters_descriptor_,
      RollbackParameters::default_instance_,
      RollbackParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(RollbackParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RollbackParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RollbackParameters, _is_default_instance_));
  Rollback2Parameters_descriptor_ = file->message_type(16);
  static const int Rollback2Parameters_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rollback2Parameters, user_id_),
  };
  Rollback2Parameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Rollback2Parameters_descriptor_,
      Rollback2Parameters::default_instance_,
      Rollback2Parameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(Rollback2Parameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rollback2Parameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rollback2Parameters, _is_default_instance_));
  Rollback3Parameters_descriptor_ = file->message_type(17);
  static const int Rollback3Parameters_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rollback3Parameters, object_id_),
  };
  Rollback3Parameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Rollback3Parameters_descriptor_,
      Rollback3Parameters::default_instance_,
      Rollback3Parameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(Rollback3Parameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rollback3Parameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rollback3Parameters, _is_default_instance_));
  RemoveGeographyResourceParameters_descriptor_ = file->message_type(18);
  static const int RemoveGeographyResourceParameters_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographyResourceParameters, geography_resource_id_),
  };
  RemoveGeographyResourceParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoveGeographyResourceParameters_descriptor_,
      RemoveGeographyResourceParameters::default_instance_,
      RemoveGeographyResourceParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoveGeographyResourceParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographyResourceParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveGeographyResourceParameters, _is_default_instance_));
  GetBitmapParameters_descriptor_ = file->message_type(19);
  static const int GetBitmapParameters_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBitmapParameters, geography_resource_id_),
  };
  GetBitmapParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBitmapParameters_descriptor_,
      GetBitmapParameters::default_instance_,
      GetBitmapParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBitmapParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBitmapParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBitmapParameters, _is_default_instance_));
  GetBitmapResponse_descriptor_ = file->message_type(20);
  static const int GetBitmapResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBitmapResponse, bitmap_data_),
  };
  GetBitmapResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBitmapResponse_descriptor_,
      GetBitmapResponse::default_instance_,
      GetBitmapResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBitmapResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBitmapResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBitmapResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GeographyResponse_descriptor_, &GeographyResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VisualResponse_descriptor_, &VisualResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BoolResponse_descriptor_, &BoolResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddGeographyParameters_descriptor_, &AddGeographyParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoveGeographyParameters_descriptor_, &RemoveGeographyParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoveGeographiesParameters_descriptor_, &RemoveGeographiesParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EditParameters_descriptor_, &EditParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommitParameters_descriptor_, &CommitParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EditResponse_descriptor_, &EditResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetVisualsForUserParameters_descriptor_, &GetVisualsForUserParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddUserVisualParameters_descriptor_, &AddUserVisualParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddUserVisual2Parameters_descriptor_, &AddUserVisual2Parameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoveUserVisualParameters_descriptor_, &RemoveUserVisualParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetVisualParameters_descriptor_, &GetVisualParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddBitmapParameters_descriptor_, &AddBitmapParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RollbackParameters_descriptor_, &RollbackParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Rollback2Parameters_descriptor_, &Rollback2Parameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Rollback3Parameters_descriptor_, &Rollback3Parameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoveGeographyResourceParameters_descriptor_, &RemoveGeographyResourceParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBitmapParameters_descriptor_, &GetBitmapParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBitmapResponse_descriptor_, &GetBitmapResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto() {
  delete GeographyResponse::default_instance_;
  delete GeographyResponse_reflection_;
  delete VisualResponse::default_instance_;
  delete VisualResponse_reflection_;
  delete BoolResponse::default_instance_;
  delete BoolResponse_reflection_;
  delete AddGeographyParameters::default_instance_;
  delete AddGeographyParameters_reflection_;
  delete RemoveGeographyParameters::default_instance_;
  delete RemoveGeographyParameters_reflection_;
  delete RemoveGeographiesParameters::default_instance_;
  delete RemoveGeographiesParameters_reflection_;
  delete EditParameters::default_instance_;
  delete EditParameters_reflection_;
  delete CommitParameters::default_instance_;
  delete CommitParameters_reflection_;
  delete EditResponse::default_instance_;
  delete EditResponse_reflection_;
  delete GetVisualsForUserParameters::default_instance_;
  delete GetVisualsForUserParameters_reflection_;
  delete AddUserVisualParameters::default_instance_;
  delete AddUserVisualParameters_reflection_;
  delete AddUserVisual2Parameters::default_instance_;
  delete AddUserVisual2Parameters_reflection_;
  delete RemoveUserVisualParameters::default_instance_;
  delete RemoveUserVisualParameters_reflection_;
  delete GetVisualParameters::default_instance_;
  delete GetVisualParameters_reflection_;
  delete AddBitmapParameters::default_instance_;
  delete AddBitmapParameters_reflection_;
  delete RollbackParameters::default_instance_;
  delete RollbackParameters_reflection_;
  delete Rollback2Parameters::default_instance_;
  delete Rollback2Parameters_reflection_;
  delete Rollback3Parameters::default_instance_;
  delete Rollback3Parameters_reflection_;
  delete RemoveGeographyResourceParameters::default_instance_;
  delete RemoveGeographyResourceParameters_reflection_;
  delete GetBitmapParameters::default_instance_;
  delete GetBitmapParameters_reflection_;
  delete GetBitmapResponse::default_instance_;
  delete GetBitmapResponse_reflection_;
}

void protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::mtm::protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto();
  ::mtm::geo::messages::protobuf_AddDesc_mtm_2fgeo_2fmessages_2fgeo_5fmessage_2eproto();
  ::mtm::geo::model::protobuf_AddDesc_mtm_2fgeo_2fmodel_2fgeography_2eproto();
  ::mtm::geo::model::protobuf_AddDesc_mtm_2fgeo_2fmodel_2fvisual_2eproto();
  ::mtm::geo::model::protobuf_AddDesc_mtm_2fgeo_2fmodel_2fgeography_5fresource_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!mtm/geo/service/geo_service.proto\022\017mtm"
    ".geo.service\032\033google/protobuf/empty.prot"
    "o\032\036google/protobuf/wrappers.proto\032\026mtm/c"
    "ommon_types.proto\032\"mtm/geo/messages/geo_"
    "message.proto\032\035mtm/geo/model/geography.p"
    "roto\032\032mtm/geo/model/visual.proto\032&mtm/ge"
    "o/model/geography_resource.proto\"@\n\021Geog"
    "raphyResponse\022+\n\tgeography\030\001 \001(\0132\030.mtm.g"
    "eo.model.Geography\"7\n\016VisualResponse\022%\n\006"
    "visual\030\001 \001(\0132\025.mtm.geo.model.Visual\"\036\n\014B"
    "oolResponse\022\016\n\006result\030\001 \001(\010\"}\n\026AddGeogra"
    "phyParameters\022\017\n\007user_id\030\001 \001(\r\022+\n\tgeogra"
    "phy\030\002 \001(\0132\030.mtm.geo.model.Geography\022%\n\006v"
    "isual\030\003 \001(\0132\025.mtm.geo.model.Visual\"M\n\031Re"
    "moveGeographyParameters\022\017\n\007user_id\030\001 \001(\r"
    "\022\037\n\014geography_id\030\002 \001(\0132\t.mtm.Uuid\"P\n\033Rem"
    "oveGeographiesParameters\022\017\n\007user_id\030\001 \001("
    "\r\022 \n\rgeography_ids\030\002 \003(\0132\t.mtm.Uuid\"B\n\016E"
    "ditParameters\022\017\n\007user_id\030\001 \001(\r\022\037\n\014geogra"
    "phy_id\030\002 \001(\0132\t.mtm.Uuid\"w\n\020CommitParamet"
    "ers\022\017\n\007user_id\030\001 \001(\r\022+\n\tgeography\030\002 \001(\0132"
    "\030.mtm.geo.model.Geography\022%\n\006visual\030\003 \001("
    "\0132\025.mtm.geo.model.Visual\"r\n\014EditResponse"
    "\022\016\n\006result\030\001 \001(\010\022+\n\tgeography\030\002 \001(\0132\030.mt"
    "m.geo.model.Geography\022%\n\006visual\030\003 \001(\0132\025."
    "mtm.geo.model.Visual\".\n\033GetVisualsForUse"
    "rParameters\022\017\n\007user_id\030\001 \001(\r\"Q\n\027AddUserV"
    "isualParameters\022\017\n\007user_id\030\001 \001(\r\022%\n\006visu"
    "al\030\002 \001(\0132\025.mtm.geo.model.Visual\"^\n\030AddUs"
    "erVisual2Parameters\022\017\n\007user_id\030\001 \001(\r\022\017\n\007"
    "visible\030\002 \001(\010\022 \n\rgeography_ids\030\003 \003(\0132\t.m"
    "tm.Uuid\"K\n\032RemoveUserVisualParameters\022\017\n"
    "\007user_id\030\001 \001(\r\022\034\n\tvisual_id\030\002 \001(\0132\t.mtm."
    "Uuid\"D\n\023GetVisualParameters\022\017\n\007user_id\030\001"
    " \001(\r\022\034\n\tvisual_id\030\002 \001(\0132\t.mtm.Uuid\"P\n\023Ad"
    "dBitmapParameters\022\017\n\007user_id\030\001 \001(\r\022\023\n\013bi"
    "tmap_name\030\002 \001(\t\022\023\n\013bitmap_data\030\003 \001(\014\"C\n\022"
    "RollbackParameters\022\017\n\007user_id\030\001 \001(\r\022\034\n\to"
    "bject_id\030\002 \001(\0132\t.mtm.Uuid\"&\n\023Rollback2Pa"
    "rameters\022\017\n\007user_id\030\001 \001(\r\"3\n\023Rollback3Pa"
    "rameters\022\034\n\tobject_id\030\001 \001(\0132\t.mtm.Uuid\"M"
    "\n!RemoveGeographyResourceParameters\022(\n\025g"
    "eography_resource_id\030\001 \001(\0132\t.mtm.Uuid\"\?\n"
    "\023GetBitmapParameters\022(\n\025geography_resour"
    "ce_id\030\001 \001(\0132\t.mtm.Uuid\"E\n\021GetBitmapRespo"
    "nse\0220\n\013bitmap_data\030\001 \001(\0132\033.google.protob"
    "uf.BytesValue2\215\016\n\nGeoService\022E\n\tSubscrib"
    "e\022\026.google.protobuf.Empty\032\034.mtm.geo.mess"
    "ages.GeoMessage\"\0000\001\022H\n\016GetGeographies\022\026."
    "google.protobuf.Empty\032\034.mtm.geo.model.Ge"
    "ographyList\"\000\022\?\n\014GetGeography\022\t.mtm.Uuid"
    "\032\".mtm.geo.service.GeographyResponse\"\000\022D"
    "\n\014AddGeography\022\'.mtm.geo.service.AddGeog"
    "raphyParameters\032\t.mtm.Uuid\"\000\022^\n\017RemoveGe"
    "ography\022*.mtm.geo.service.RemoveGeograph"
    "yParameters\032\035.mtm.geo.service.BoolRespon"
    "se\"\000\022b\n\021RemoveGeographies\022,.mtm.geo.serv"
    "ice.RemoveGeographiesParameters\032\035.mtm.ge"
    "o.service.BoolResponse\"\000\022H\n\004Edit\022\037.mtm.g"
    "eo.service.EditParameters\032\035.mtm.geo.serv"
    "ice.EditResponse\"\000\022E\n\006Commit\022!.mtm.geo.s"
    "ervice.CommitParameters\032\026.google.protobu"
    "f.Empty\"\000\022I\n\010Rollback\022#.mtm.geo.service."
    "RollbackParameters\032\026.google.protobuf.Emp"
    "ty\"\000\022K\n\tRollback2\022$.mtm.geo.service.Roll"
    "back2Parameters\032\026.google.protobuf.Empty\""
    "\000\022K\n\tRollback3\022$.mtm.geo.service.Rollbac"
    "k3Parameters\032\026.google.protobuf.Empty\"\000\022\?"
    "\n\nGetVisuals\022\026.google.protobuf.Empty\032\031.m"
    "tm.geo.model.VisualList\022^\n\021GetVisualsFor"
    "User\022,.mtm.geo.service.GetVisualsForUser"
    "Parameters\032\031.mtm.geo.model.VisualList\"\000\022"
    "Z\n\rAddUserVisual\022(.mtm.geo.service.AddUs"
    "erVisualParameters\032\035.mtm.geo.service.Boo"
    "lResponse\"\000\022\\\n\016AddUserVisual2\022).mtm.geo."
    "service.AddUserVisual2Parameters\032\035.mtm.g"
    "eo.service.BoolResponse\"\000\022`\n\020RemoveUserV"
    "isual\022+.mtm.geo.service.RemoveUserVisual"
    "Parameters\032\035.mtm.geo.service.BoolRespons"
    "e\"\000\022T\n\tGetVisual\022$.mtm.geo.service.GetVi"
    "sualParameters\032\037.mtm.geo.service.VisualR"
    "esponse\"\000\022>\n\tAddBitmap\022$.mtm.geo.service"
    ".AddBitmapParameters\032\t.mtm.Uuid\"\000\022W\n\tGet"
    "Bitmap\022$.mtm.geo.service.GetBitmapParame"
    "ters\032\".mtm.geo.service.GetBitmapResponse"
    "\"\000\022W\n\025GetGeographyResources\022\026.google.pro"
    "tobuf.Empty\032$.mtm.geo.model.GeographyRes"
    "ourceList\"\000\022n\n\027RemoveGeographyResource\0222"
    ".mtm.geo.service.RemoveGeographyResource"
    "Parameters\032\035.mtm.geo.service.BoolRespons"
    "e\"\000\0228\n\004Ping\022\026.google.protobuf.Empty\032\026.go"
    "ogle.protobuf.Empty\"\000b\006proto3", 3669);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mtm/geo/service/geo_service.proto", &protobuf_RegisterTypes);
  GeographyResponse::default_instance_ = new GeographyResponse();
  VisualResponse::default_instance_ = new VisualResponse();
  BoolResponse::default_instance_ = new BoolResponse();
  AddGeographyParameters::default_instance_ = new AddGeographyParameters();
  RemoveGeographyParameters::default_instance_ = new RemoveGeographyParameters();
  RemoveGeographiesParameters::default_instance_ = new RemoveGeographiesParameters();
  EditParameters::default_instance_ = new EditParameters();
  CommitParameters::default_instance_ = new CommitParameters();
  EditResponse::default_instance_ = new EditResponse();
  GetVisualsForUserParameters::default_instance_ = new GetVisualsForUserParameters();
  AddUserVisualParameters::default_instance_ = new AddUserVisualParameters();
  AddUserVisual2Parameters::default_instance_ = new AddUserVisual2Parameters();
  RemoveUserVisualParameters::default_instance_ = new RemoveUserVisualParameters();
  GetVisualParameters::default_instance_ = new GetVisualParameters();
  AddBitmapParameters::default_instance_ = new AddBitmapParameters();
  RollbackParameters::default_instance_ = new RollbackParameters();
  Rollback2Parameters::default_instance_ = new Rollback2Parameters();
  Rollback3Parameters::default_instance_ = new Rollback3Parameters();
  RemoveGeographyResourceParameters::default_instance_ = new RemoveGeographyResourceParameters();
  GetBitmapParameters::default_instance_ = new GetBitmapParameters();
  GetBitmapResponse::default_instance_ = new GetBitmapResponse();
  GeographyResponse::default_instance_->InitAsDefaultInstance();
  VisualResponse::default_instance_->InitAsDefaultInstance();
  BoolResponse::default_instance_->InitAsDefaultInstance();
  AddGeographyParameters::default_instance_->InitAsDefaultInstance();
  RemoveGeographyParameters::default_instance_->InitAsDefaultInstance();
  RemoveGeographiesParameters::default_instance_->InitAsDefaultInstance();
  EditParameters::default_instance_->InitAsDefaultInstance();
  CommitParameters::default_instance_->InitAsDefaultInstance();
  EditResponse::default_instance_->InitAsDefaultInstance();
  GetVisualsForUserParameters::default_instance_->InitAsDefaultInstance();
  AddUserVisualParameters::default_instance_->InitAsDefaultInstance();
  AddUserVisual2Parameters::default_instance_->InitAsDefaultInstance();
  RemoveUserVisualParameters::default_instance_->InitAsDefaultInstance();
  GetVisualParameters::default_instance_->InitAsDefaultInstance();
  AddBitmapParameters::default_instance_->InitAsDefaultInstance();
  RollbackParameters::default_instance_->InitAsDefaultInstance();
  Rollback2Parameters::default_instance_->InitAsDefaultInstance();
  Rollback3Parameters::default_instance_->InitAsDefaultInstance();
  RemoveGeographyResourceParameters::default_instance_->InitAsDefaultInstance();
  GetBitmapParameters::default_instance_->InitAsDefaultInstance();
  GetBitmapResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto {
  StaticDescriptorInitializer_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto() {
    protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  }
} static_descriptor_initializer_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GeographyResponse::kGeographyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeographyResponse::GeographyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.GeographyResponse)
}

void GeographyResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  geography_ = const_cast< ::mtm::geo::model::Geography*>(&::mtm::geo::model::Geography::default_instance());
}

GeographyResponse::GeographyResponse(const GeographyResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.GeographyResponse)
}

void GeographyResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  geography_ = NULL;
}

GeographyResponse::~GeographyResponse() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.GeographyResponse)
  SharedDtor();
}

void GeographyResponse::SharedDtor() {
  if (this != default_instance_) {
    delete geography_;
  }
}

void GeographyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GeographyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GeographyResponse_descriptor_;
}

const GeographyResponse& GeographyResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

GeographyResponse* GeographyResponse::default_instance_ = NULL;

GeographyResponse* GeographyResponse::New(::google::protobuf::Arena* arena) const {
  GeographyResponse* n = new GeographyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GeographyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.GeographyResponse)
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) delete geography_;
  geography_ = NULL;
}

bool GeographyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.GeographyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mtm.geo.model.Geography geography = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geography()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.GeographyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.GeographyResponse)
  return false;
#undef DO_
}

void GeographyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.GeographyResponse)
  // optional .mtm.geo.model.Geography geography = 1;
  if (this->has_geography()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->geography_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.GeographyResponse)
}

::google::protobuf::uint8* GeographyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.GeographyResponse)
  // optional .mtm.geo.model.Geography geography = 1;
  if (this->has_geography()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->geography_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.GeographyResponse)
  return target;
}

int GeographyResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.GeographyResponse)
  int total_size = 0;

  // optional .mtm.geo.model.Geography geography = 1;
  if (this->has_geography()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geography_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GeographyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.GeographyResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GeographyResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GeographyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.GeographyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.GeographyResponse)
    MergeFrom(*source);
  }
}

void GeographyResponse::MergeFrom(const GeographyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.GeographyResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_geography()) {
    mutable_geography()->::mtm::geo::model::Geography::MergeFrom(from.geography());
  }
}

void GeographyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.GeographyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeographyResponse::CopyFrom(const GeographyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.GeographyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeographyResponse::IsInitialized() const {

  return true;
}

void GeographyResponse::Swap(GeographyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeographyResponse::InternalSwap(GeographyResponse* other) {
  std::swap(geography_, other->geography_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GeographyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GeographyResponse_descriptor_;
  metadata.reflection = GeographyResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GeographyResponse

// optional .mtm.geo.model.Geography geography = 1;
bool GeographyResponse::has_geography() const {
  return !_is_default_instance_ && geography_ != NULL;
}
void GeographyResponse::clear_geography() {
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) delete geography_;
  geography_ = NULL;
}
const ::mtm::geo::model::Geography& GeographyResponse::geography() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.GeographyResponse.geography)
  return geography_ != NULL ? *geography_ : *default_instance_->geography_;
}
::mtm::geo::model::Geography* GeographyResponse::mutable_geography() {
  
  if (geography_ == NULL) {
    geography_ = new ::mtm::geo::model::Geography;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.GeographyResponse.geography)
  return geography_;
}
::mtm::geo::model::Geography* GeographyResponse::release_geography() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.GeographyResponse.geography)
  
  ::mtm::geo::model::Geography* temp = geography_;
  geography_ = NULL;
  return temp;
}
void GeographyResponse::set_allocated_geography(::mtm::geo::model::Geography* geography) {
  delete geography_;
  geography_ = geography;
  if (geography) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.GeographyResponse.geography)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VisualResponse::kVisualFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VisualResponse::VisualResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.VisualResponse)
}

void VisualResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  visual_ = const_cast< ::mtm::geo::model::Visual*>(&::mtm::geo::model::Visual::default_instance());
}

VisualResponse::VisualResponse(const VisualResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.VisualResponse)
}

void VisualResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  visual_ = NULL;
}

VisualResponse::~VisualResponse() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.VisualResponse)
  SharedDtor();
}

void VisualResponse::SharedDtor() {
  if (this != default_instance_) {
    delete visual_;
  }
}

void VisualResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VisualResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VisualResponse_descriptor_;
}

const VisualResponse& VisualResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

VisualResponse* VisualResponse::default_instance_ = NULL;

VisualResponse* VisualResponse::New(::google::protobuf::Arena* arena) const {
  VisualResponse* n = new VisualResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VisualResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.VisualResponse)
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) delete visual_;
  visual_ = NULL;
}

bool VisualResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.VisualResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mtm.geo.model.Visual visual = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_visual()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.VisualResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.VisualResponse)
  return false;
#undef DO_
}

void VisualResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.VisualResponse)
  // optional .mtm.geo.model.Visual visual = 1;
  if (this->has_visual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->visual_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.VisualResponse)
}

::google::protobuf::uint8* VisualResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.VisualResponse)
  // optional .mtm.geo.model.Visual visual = 1;
  if (this->has_visual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->visual_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.VisualResponse)
  return target;
}

int VisualResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.VisualResponse)
  int total_size = 0;

  // optional .mtm.geo.model.Visual visual = 1;
  if (this->has_visual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->visual_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VisualResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.VisualResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VisualResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VisualResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.VisualResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.VisualResponse)
    MergeFrom(*source);
  }
}

void VisualResponse::MergeFrom(const VisualResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.VisualResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_visual()) {
    mutable_visual()->::mtm::geo::model::Visual::MergeFrom(from.visual());
  }
}

void VisualResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.VisualResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisualResponse::CopyFrom(const VisualResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.VisualResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisualResponse::IsInitialized() const {

  return true;
}

void VisualResponse::Swap(VisualResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VisualResponse::InternalSwap(VisualResponse* other) {
  std::swap(visual_, other->visual_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VisualResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VisualResponse_descriptor_;
  metadata.reflection = VisualResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VisualResponse

// optional .mtm.geo.model.Visual visual = 1;
bool VisualResponse::has_visual() const {
  return !_is_default_instance_ && visual_ != NULL;
}
void VisualResponse::clear_visual() {
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) delete visual_;
  visual_ = NULL;
}
const ::mtm::geo::model::Visual& VisualResponse::visual() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.VisualResponse.visual)
  return visual_ != NULL ? *visual_ : *default_instance_->visual_;
}
::mtm::geo::model::Visual* VisualResponse::mutable_visual() {
  
  if (visual_ == NULL) {
    visual_ = new ::mtm::geo::model::Visual;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.VisualResponse.visual)
  return visual_;
}
::mtm::geo::model::Visual* VisualResponse::release_visual() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.VisualResponse.visual)
  
  ::mtm::geo::model::Visual* temp = visual_;
  visual_ = NULL;
  return temp;
}
void VisualResponse::set_allocated_visual(::mtm::geo::model::Visual* visual) {
  delete visual_;
  visual_ = visual;
  if (visual) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.VisualResponse.visual)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoolResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoolResponse::BoolResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.BoolResponse)
}

void BoolResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BoolResponse::BoolResponse(const BoolResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.BoolResponse)
}

void BoolResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = false;
}

BoolResponse::~BoolResponse() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.BoolResponse)
  SharedDtor();
}

void BoolResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BoolResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoolResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BoolResponse_descriptor_;
}

const BoolResponse& BoolResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

BoolResponse* BoolResponse::default_instance_ = NULL;

BoolResponse* BoolResponse::New(::google::protobuf::Arena* arena) const {
  BoolResponse* n = new BoolResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BoolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.BoolResponse)
  result_ = false;
}

bool BoolResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.BoolResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.BoolResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.BoolResponse)
  return false;
#undef DO_
}

void BoolResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.BoolResponse)
  // optional bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.BoolResponse)
}

::google::protobuf::uint8* BoolResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.BoolResponse)
  // optional bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.BoolResponse)
  return target;
}

int BoolResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.BoolResponse)
  int total_size = 0;

  // optional bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoolResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.BoolResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BoolResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BoolResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.BoolResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.BoolResponse)
    MergeFrom(*source);
  }
}

void BoolResponse::MergeFrom(const BoolResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.BoolResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void BoolResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.BoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoolResponse::CopyFrom(const BoolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.BoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoolResponse::IsInitialized() const {

  return true;
}

void BoolResponse::Swap(BoolResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoolResponse::InternalSwap(BoolResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BoolResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BoolResponse_descriptor_;
  metadata.reflection = BoolResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BoolResponse

// optional bool result = 1;
void BoolResponse::clear_result() {
  result_ = false;
}
 bool BoolResponse::result() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.BoolResponse.result)
  return result_;
}
 void BoolResponse::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.BoolResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddGeographyParameters::kUserIdFieldNumber;
const int AddGeographyParameters::kGeographyFieldNumber;
const int AddGeographyParameters::kVisualFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddGeographyParameters::AddGeographyParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.AddGeographyParameters)
}

void AddGeographyParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  geography_ = const_cast< ::mtm::geo::model::Geography*>(&::mtm::geo::model::Geography::default_instance());
  visual_ = const_cast< ::mtm::geo::model::Visual*>(&::mtm::geo::model::Visual::default_instance());
}

AddGeographyParameters::AddGeographyParameters(const AddGeographyParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.AddGeographyParameters)
}

void AddGeographyParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
  geography_ = NULL;
  visual_ = NULL;
}

AddGeographyParameters::~AddGeographyParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.AddGeographyParameters)
  SharedDtor();
}

void AddGeographyParameters::SharedDtor() {
  if (this != default_instance_) {
    delete geography_;
    delete visual_;
  }
}

void AddGeographyParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddGeographyParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddGeographyParameters_descriptor_;
}

const AddGeographyParameters& AddGeographyParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

AddGeographyParameters* AddGeographyParameters::default_instance_ = NULL;

AddGeographyParameters* AddGeographyParameters::New(::google::protobuf::Arena* arena) const {
  AddGeographyParameters* n = new AddGeographyParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddGeographyParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.AddGeographyParameters)
  user_id_ = 0u;
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) delete geography_;
  geography_ = NULL;
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) delete visual_;
  visual_ = NULL;
}

bool AddGeographyParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.AddGeographyParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_geography;
        break;
      }

      // optional .mtm.geo.model.Geography geography = 2;
      case 2: {
        if (tag == 18) {
         parse_geography:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geography()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_visual;
        break;
      }

      // optional .mtm.geo.model.Visual visual = 3;
      case 3: {
        if (tag == 26) {
         parse_visual:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_visual()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.AddGeographyParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.AddGeographyParameters)
  return false;
#undef DO_
}

void AddGeographyParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.AddGeographyParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->geography_, output);
  }

  // optional .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->visual_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.AddGeographyParameters)
}

::google::protobuf::uint8* AddGeographyParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.AddGeographyParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->geography_, false, target);
  }

  // optional .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->visual_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.AddGeographyParameters)
  return target;
}

int AddGeographyParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.AddGeographyParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // optional .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geography_);
  }

  // optional .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->visual_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddGeographyParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.AddGeographyParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddGeographyParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddGeographyParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.AddGeographyParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.AddGeographyParameters)
    MergeFrom(*source);
  }
}

void AddGeographyParameters::MergeFrom(const AddGeographyParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.AddGeographyParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.has_geography()) {
    mutable_geography()->::mtm::geo::model::Geography::MergeFrom(from.geography());
  }
  if (from.has_visual()) {
    mutable_visual()->::mtm::geo::model::Visual::MergeFrom(from.visual());
  }
}

void AddGeographyParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.AddGeographyParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGeographyParameters::CopyFrom(const AddGeographyParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.AddGeographyParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGeographyParameters::IsInitialized() const {

  return true;
}

void AddGeographyParameters::Swap(AddGeographyParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddGeographyParameters::InternalSwap(AddGeographyParameters* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(geography_, other->geography_);
  std::swap(visual_, other->visual_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddGeographyParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddGeographyParameters_descriptor_;
  metadata.reflection = AddGeographyParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddGeographyParameters

// optional uint32 user_id = 1;
void AddGeographyParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 AddGeographyParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddGeographyParameters.user_id)
  return user_id_;
}
 void AddGeographyParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.AddGeographyParameters.user_id)
}

// optional .mtm.geo.model.Geography geography = 2;
bool AddGeographyParameters::has_geography() const {
  return !_is_default_instance_ && geography_ != NULL;
}
void AddGeographyParameters::clear_geography() {
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) delete geography_;
  geography_ = NULL;
}
const ::mtm::geo::model::Geography& AddGeographyParameters::geography() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddGeographyParameters.geography)
  return geography_ != NULL ? *geography_ : *default_instance_->geography_;
}
::mtm::geo::model::Geography* AddGeographyParameters::mutable_geography() {
  
  if (geography_ == NULL) {
    geography_ = new ::mtm::geo::model::Geography;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.AddGeographyParameters.geography)
  return geography_;
}
::mtm::geo::model::Geography* AddGeographyParameters::release_geography() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.AddGeographyParameters.geography)
  
  ::mtm::geo::model::Geography* temp = geography_;
  geography_ = NULL;
  return temp;
}
void AddGeographyParameters::set_allocated_geography(::mtm::geo::model::Geography* geography) {
  delete geography_;
  geography_ = geography;
  if (geography) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.AddGeographyParameters.geography)
}

// optional .mtm.geo.model.Visual visual = 3;
bool AddGeographyParameters::has_visual() const {
  return !_is_default_instance_ && visual_ != NULL;
}
void AddGeographyParameters::clear_visual() {
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) delete visual_;
  visual_ = NULL;
}
const ::mtm::geo::model::Visual& AddGeographyParameters::visual() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddGeographyParameters.visual)
  return visual_ != NULL ? *visual_ : *default_instance_->visual_;
}
::mtm::geo::model::Visual* AddGeographyParameters::mutable_visual() {
  
  if (visual_ == NULL) {
    visual_ = new ::mtm::geo::model::Visual;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.AddGeographyParameters.visual)
  return visual_;
}
::mtm::geo::model::Visual* AddGeographyParameters::release_visual() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.AddGeographyParameters.visual)
  
  ::mtm::geo::model::Visual* temp = visual_;
  visual_ = NULL;
  return temp;
}
void AddGeographyParameters::set_allocated_visual(::mtm::geo::model::Visual* visual) {
  delete visual_;
  visual_ = visual;
  if (visual) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.AddGeographyParameters.visual)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveGeographyParameters::kUserIdFieldNumber;
const int RemoveGeographyParameters::kGeographyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveGeographyParameters::RemoveGeographyParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.RemoveGeographyParameters)
}

void RemoveGeographyParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  geography_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
}

RemoveGeographyParameters::RemoveGeographyParameters(const RemoveGeographyParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.RemoveGeographyParameters)
}

void RemoveGeographyParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
  geography_id_ = NULL;
}

RemoveGeographyParameters::~RemoveGeographyParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.RemoveGeographyParameters)
  SharedDtor();
}

void RemoveGeographyParameters::SharedDtor() {
  if (this != default_instance_) {
    delete geography_id_;
  }
}

void RemoveGeographyParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveGeographyParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveGeographyParameters_descriptor_;
}

const RemoveGeographyParameters& RemoveGeographyParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

RemoveGeographyParameters* RemoveGeographyParameters::default_instance_ = NULL;

RemoveGeographyParameters* RemoveGeographyParameters::New(::google::protobuf::Arena* arena) const {
  RemoveGeographyParameters* n = new RemoveGeographyParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveGeographyParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.RemoveGeographyParameters)
  user_id_ = 0u;
  if (GetArenaNoVirtual() == NULL && geography_id_ != NULL) delete geography_id_;
  geography_id_ = NULL;
}

bool RemoveGeographyParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.RemoveGeographyParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_geography_id;
        break;
      }

      // optional .mtm.Uuid geography_id = 2;
      case 2: {
        if (tag == 18) {
         parse_geography_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geography_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.RemoveGeographyParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.RemoveGeographyParameters)
  return false;
#undef DO_
}

void RemoveGeographyParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.RemoveGeographyParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->geography_id_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.RemoveGeographyParameters)
}

::google::protobuf::uint8* RemoveGeographyParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.RemoveGeographyParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->geography_id_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.RemoveGeographyParameters)
  return target;
}

int RemoveGeographyParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.RemoveGeographyParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // optional .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geography_id_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveGeographyParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.RemoveGeographyParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RemoveGeographyParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveGeographyParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.RemoveGeographyParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.RemoveGeographyParameters)
    MergeFrom(*source);
  }
}

void RemoveGeographyParameters::MergeFrom(const RemoveGeographyParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.RemoveGeographyParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.has_geography_id()) {
    mutable_geography_id()->::mtm::Uuid::MergeFrom(from.geography_id());
  }
}

void RemoveGeographyParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.RemoveGeographyParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGeographyParameters::CopyFrom(const RemoveGeographyParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.RemoveGeographyParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGeographyParameters::IsInitialized() const {

  return true;
}

void RemoveGeographyParameters::Swap(RemoveGeographyParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveGeographyParameters::InternalSwap(RemoveGeographyParameters* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(geography_id_, other->geography_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveGeographyParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveGeographyParameters_descriptor_;
  metadata.reflection = RemoveGeographyParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveGeographyParameters

// optional uint32 user_id = 1;
void RemoveGeographyParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 RemoveGeographyParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.RemoveGeographyParameters.user_id)
  return user_id_;
}
 void RemoveGeographyParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.RemoveGeographyParameters.user_id)
}

// optional .mtm.Uuid geography_id = 2;
bool RemoveGeographyParameters::has_geography_id() const {
  return !_is_default_instance_ && geography_id_ != NULL;
}
void RemoveGeographyParameters::clear_geography_id() {
  if (GetArenaNoVirtual() == NULL && geography_id_ != NULL) delete geography_id_;
  geography_id_ = NULL;
}
const ::mtm::Uuid& RemoveGeographyParameters::geography_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.RemoveGeographyParameters.geography_id)
  return geography_id_ != NULL ? *geography_id_ : *default_instance_->geography_id_;
}
::mtm::Uuid* RemoveGeographyParameters::mutable_geography_id() {
  
  if (geography_id_ == NULL) {
    geography_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.RemoveGeographyParameters.geography_id)
  return geography_id_;
}
::mtm::Uuid* RemoveGeographyParameters::release_geography_id() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.RemoveGeographyParameters.geography_id)
  
  ::mtm::Uuid* temp = geography_id_;
  geography_id_ = NULL;
  return temp;
}
void RemoveGeographyParameters::set_allocated_geography_id(::mtm::Uuid* geography_id) {
  delete geography_id_;
  geography_id_ = geography_id;
  if (geography_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.RemoveGeographyParameters.geography_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveGeographiesParameters::kUserIdFieldNumber;
const int RemoveGeographiesParameters::kGeographyIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveGeographiesParameters::RemoveGeographiesParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.RemoveGeographiesParameters)
}

void RemoveGeographiesParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RemoveGeographiesParameters::RemoveGeographiesParameters(const RemoveGeographiesParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.RemoveGeographiesParameters)
}

void RemoveGeographiesParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
}

RemoveGeographiesParameters::~RemoveGeographiesParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.RemoveGeographiesParameters)
  SharedDtor();
}

void RemoveGeographiesParameters::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveGeographiesParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveGeographiesParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveGeographiesParameters_descriptor_;
}

const RemoveGeographiesParameters& RemoveGeographiesParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

RemoveGeographiesParameters* RemoveGeographiesParameters::default_instance_ = NULL;

RemoveGeographiesParameters* RemoveGeographiesParameters::New(::google::protobuf::Arena* arena) const {
  RemoveGeographiesParameters* n = new RemoveGeographiesParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveGeographiesParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.RemoveGeographiesParameters)
  user_id_ = 0u;
  geography_ids_.Clear();
}

bool RemoveGeographiesParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.RemoveGeographiesParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_geography_ids;
        break;
      }

      // repeated .mtm.Uuid geography_ids = 2;
      case 2: {
        if (tag == 18) {
         parse_geography_ids:
          DO_(input->IncrementRecursionDepth());
         parse_loop_geography_ids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_geography_ids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_geography_ids;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.RemoveGeographiesParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.RemoveGeographiesParameters)
  return false;
#undef DO_
}

void RemoveGeographiesParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.RemoveGeographiesParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated .mtm.Uuid geography_ids = 2;
  for (unsigned int i = 0, n = this->geography_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->geography_ids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.RemoveGeographiesParameters)
}

::google::protobuf::uint8* RemoveGeographiesParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.RemoveGeographiesParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // repeated .mtm.Uuid geography_ids = 2;
  for (unsigned int i = 0, n = this->geography_ids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->geography_ids(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.RemoveGeographiesParameters)
  return target;
}

int RemoveGeographiesParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.RemoveGeographiesParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // repeated .mtm.Uuid geography_ids = 2;
  total_size += 1 * this->geography_ids_size();
  for (int i = 0; i < this->geography_ids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->geography_ids(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveGeographiesParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.RemoveGeographiesParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RemoveGeographiesParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveGeographiesParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.RemoveGeographiesParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.RemoveGeographiesParameters)
    MergeFrom(*source);
  }
}

void RemoveGeographiesParameters::MergeFrom(const RemoveGeographiesParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.RemoveGeographiesParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  geography_ids_.MergeFrom(from.geography_ids_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void RemoveGeographiesParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.RemoveGeographiesParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGeographiesParameters::CopyFrom(const RemoveGeographiesParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.RemoveGeographiesParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGeographiesParameters::IsInitialized() const {

  return true;
}

void RemoveGeographiesParameters::Swap(RemoveGeographiesParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveGeographiesParameters::InternalSwap(RemoveGeographiesParameters* other) {
  std::swap(user_id_, other->user_id_);
  geography_ids_.UnsafeArenaSwap(&other->geography_ids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveGeographiesParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveGeographiesParameters_descriptor_;
  metadata.reflection = RemoveGeographiesParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveGeographiesParameters

// optional uint32 user_id = 1;
void RemoveGeographiesParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 RemoveGeographiesParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.RemoveGeographiesParameters.user_id)
  return user_id_;
}
 void RemoveGeographiesParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.RemoveGeographiesParameters.user_id)
}

// repeated .mtm.Uuid geography_ids = 2;
int RemoveGeographiesParameters::geography_ids_size() const {
  return geography_ids_.size();
}
void RemoveGeographiesParameters::clear_geography_ids() {
  geography_ids_.Clear();
}
const ::mtm::Uuid& RemoveGeographiesParameters::geography_ids(int index) const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.RemoveGeographiesParameters.geography_ids)
  return geography_ids_.Get(index);
}
::mtm::Uuid* RemoveGeographiesParameters::mutable_geography_ids(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.RemoveGeographiesParameters.geography_ids)
  return geography_ids_.Mutable(index);
}
::mtm::Uuid* RemoveGeographiesParameters::add_geography_ids() {
  // @@protoc_insertion_point(field_add:mtm.geo.service.RemoveGeographiesParameters.geography_ids)
  return geography_ids_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtm::Uuid >*
RemoveGeographiesParameters::mutable_geography_ids() {
  // @@protoc_insertion_point(field_mutable_list:mtm.geo.service.RemoveGeographiesParameters.geography_ids)
  return &geography_ids_;
}
const ::google::protobuf::RepeatedPtrField< ::mtm::Uuid >&
RemoveGeographiesParameters::geography_ids() const {
  // @@protoc_insertion_point(field_list:mtm.geo.service.RemoveGeographiesParameters.geography_ids)
  return geography_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditParameters::kUserIdFieldNumber;
const int EditParameters::kGeographyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditParameters::EditParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.EditParameters)
}

void EditParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  geography_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
}

EditParameters::EditParameters(const EditParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.EditParameters)
}

void EditParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
  geography_id_ = NULL;
}

EditParameters::~EditParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.EditParameters)
  SharedDtor();
}

void EditParameters::SharedDtor() {
  if (this != default_instance_) {
    delete geography_id_;
  }
}

void EditParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EditParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EditParameters_descriptor_;
}

const EditParameters& EditParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

EditParameters* EditParameters::default_instance_ = NULL;

EditParameters* EditParameters::New(::google::protobuf::Arena* arena) const {
  EditParameters* n = new EditParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EditParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.EditParameters)
  user_id_ = 0u;
  if (GetArenaNoVirtual() == NULL && geography_id_ != NULL) delete geography_id_;
  geography_id_ = NULL;
}

bool EditParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.EditParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_geography_id;
        break;
      }

      // optional .mtm.Uuid geography_id = 2;
      case 2: {
        if (tag == 18) {
         parse_geography_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geography_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.EditParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.EditParameters)
  return false;
#undef DO_
}

void EditParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.EditParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->geography_id_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.EditParameters)
}

::google::protobuf::uint8* EditParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.EditParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->geography_id_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.EditParameters)
  return target;
}

int EditParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.EditParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // optional .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geography_id_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EditParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.EditParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EditParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EditParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.EditParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.EditParameters)
    MergeFrom(*source);
  }
}

void EditParameters::MergeFrom(const EditParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.EditParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.has_geography_id()) {
    mutable_geography_id()->::mtm::Uuid::MergeFrom(from.geography_id());
  }
}

void EditParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.EditParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditParameters::CopyFrom(const EditParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.EditParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditParameters::IsInitialized() const {

  return true;
}

void EditParameters::Swap(EditParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditParameters::InternalSwap(EditParameters* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(geography_id_, other->geography_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EditParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EditParameters_descriptor_;
  metadata.reflection = EditParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EditParameters

// optional uint32 user_id = 1;
void EditParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 EditParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.EditParameters.user_id)
  return user_id_;
}
 void EditParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.EditParameters.user_id)
}

// optional .mtm.Uuid geography_id = 2;
bool EditParameters::has_geography_id() const {
  return !_is_default_instance_ && geography_id_ != NULL;
}
void EditParameters::clear_geography_id() {
  if (GetArenaNoVirtual() == NULL && geography_id_ != NULL) delete geography_id_;
  geography_id_ = NULL;
}
const ::mtm::Uuid& EditParameters::geography_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.EditParameters.geography_id)
  return geography_id_ != NULL ? *geography_id_ : *default_instance_->geography_id_;
}
::mtm::Uuid* EditParameters::mutable_geography_id() {
  
  if (geography_id_ == NULL) {
    geography_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.EditParameters.geography_id)
  return geography_id_;
}
::mtm::Uuid* EditParameters::release_geography_id() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.EditParameters.geography_id)
  
  ::mtm::Uuid* temp = geography_id_;
  geography_id_ = NULL;
  return temp;
}
void EditParameters::set_allocated_geography_id(::mtm::Uuid* geography_id) {
  delete geography_id_;
  geography_id_ = geography_id;
  if (geography_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.EditParameters.geography_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitParameters::kUserIdFieldNumber;
const int CommitParameters::kGeographyFieldNumber;
const int CommitParameters::kVisualFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitParameters::CommitParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.CommitParameters)
}

void CommitParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  geography_ = const_cast< ::mtm::geo::model::Geography*>(&::mtm::geo::model::Geography::default_instance());
  visual_ = const_cast< ::mtm::geo::model::Visual*>(&::mtm::geo::model::Visual::default_instance());
}

CommitParameters::CommitParameters(const CommitParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.CommitParameters)
}

void CommitParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
  geography_ = NULL;
  visual_ = NULL;
}

CommitParameters::~CommitParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.CommitParameters)
  SharedDtor();
}

void CommitParameters::SharedDtor() {
  if (this != default_instance_) {
    delete geography_;
    delete visual_;
  }
}

void CommitParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommitParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommitParameters_descriptor_;
}

const CommitParameters& CommitParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

CommitParameters* CommitParameters::default_instance_ = NULL;

CommitParameters* CommitParameters::New(::google::protobuf::Arena* arena) const {
  CommitParameters* n = new CommitParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommitParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.CommitParameters)
  user_id_ = 0u;
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) delete geography_;
  geography_ = NULL;
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) delete visual_;
  visual_ = NULL;
}

bool CommitParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.CommitParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_geography;
        break;
      }

      // optional .mtm.geo.model.Geography geography = 2;
      case 2: {
        if (tag == 18) {
         parse_geography:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geography()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_visual;
        break;
      }

      // optional .mtm.geo.model.Visual visual = 3;
      case 3: {
        if (tag == 26) {
         parse_visual:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_visual()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.CommitParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.CommitParameters)
  return false;
#undef DO_
}

void CommitParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.CommitParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->geography_, output);
  }

  // optional .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->visual_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.CommitParameters)
}

::google::protobuf::uint8* CommitParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.CommitParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->geography_, false, target);
  }

  // optional .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->visual_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.CommitParameters)
  return target;
}

int CommitParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.CommitParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // optional .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geography_);
  }

  // optional .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->visual_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommitParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.CommitParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CommitParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommitParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.CommitParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.CommitParameters)
    MergeFrom(*source);
  }
}

void CommitParameters::MergeFrom(const CommitParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.CommitParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.has_geography()) {
    mutable_geography()->::mtm::geo::model::Geography::MergeFrom(from.geography());
  }
  if (from.has_visual()) {
    mutable_visual()->::mtm::geo::model::Visual::MergeFrom(from.visual());
  }
}

void CommitParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.CommitParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitParameters::CopyFrom(const CommitParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.CommitParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitParameters::IsInitialized() const {

  return true;
}

void CommitParameters::Swap(CommitParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitParameters::InternalSwap(CommitParameters* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(geography_, other->geography_);
  std::swap(visual_, other->visual_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommitParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommitParameters_descriptor_;
  metadata.reflection = CommitParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommitParameters

// optional uint32 user_id = 1;
void CommitParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 CommitParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.CommitParameters.user_id)
  return user_id_;
}
 void CommitParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.CommitParameters.user_id)
}

// optional .mtm.geo.model.Geography geography = 2;
bool CommitParameters::has_geography() const {
  return !_is_default_instance_ && geography_ != NULL;
}
void CommitParameters::clear_geography() {
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) delete geography_;
  geography_ = NULL;
}
const ::mtm::geo::model::Geography& CommitParameters::geography() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.CommitParameters.geography)
  return geography_ != NULL ? *geography_ : *default_instance_->geography_;
}
::mtm::geo::model::Geography* CommitParameters::mutable_geography() {
  
  if (geography_ == NULL) {
    geography_ = new ::mtm::geo::model::Geography;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.CommitParameters.geography)
  return geography_;
}
::mtm::geo::model::Geography* CommitParameters::release_geography() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.CommitParameters.geography)
  
  ::mtm::geo::model::Geography* temp = geography_;
  geography_ = NULL;
  return temp;
}
void CommitParameters::set_allocated_geography(::mtm::geo::model::Geography* geography) {
  delete geography_;
  geography_ = geography;
  if (geography) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.CommitParameters.geography)
}

// optional .mtm.geo.model.Visual visual = 3;
bool CommitParameters::has_visual() const {
  return !_is_default_instance_ && visual_ != NULL;
}
void CommitParameters::clear_visual() {
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) delete visual_;
  visual_ = NULL;
}
const ::mtm::geo::model::Visual& CommitParameters::visual() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.CommitParameters.visual)
  return visual_ != NULL ? *visual_ : *default_instance_->visual_;
}
::mtm::geo::model::Visual* CommitParameters::mutable_visual() {
  
  if (visual_ == NULL) {
    visual_ = new ::mtm::geo::model::Visual;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.CommitParameters.visual)
  return visual_;
}
::mtm::geo::model::Visual* CommitParameters::release_visual() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.CommitParameters.visual)
  
  ::mtm::geo::model::Visual* temp = visual_;
  visual_ = NULL;
  return temp;
}
void CommitParameters::set_allocated_visual(::mtm::geo::model::Visual* visual) {
  delete visual_;
  visual_ = visual;
  if (visual) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.CommitParameters.visual)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditResponse::kResultFieldNumber;
const int EditResponse::kGeographyFieldNumber;
const int EditResponse::kVisualFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditResponse::EditResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.EditResponse)
}

void EditResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  geography_ = const_cast< ::mtm::geo::model::Geography*>(&::mtm::geo::model::Geography::default_instance());
  visual_ = const_cast< ::mtm::geo::model::Visual*>(&::mtm::geo::model::Visual::default_instance());
}

EditResponse::EditResponse(const EditResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.EditResponse)
}

void EditResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = false;
  geography_ = NULL;
  visual_ = NULL;
}

EditResponse::~EditResponse() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.EditResponse)
  SharedDtor();
}

void EditResponse::SharedDtor() {
  if (this != default_instance_) {
    delete geography_;
    delete visual_;
  }
}

void EditResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EditResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EditResponse_descriptor_;
}

const EditResponse& EditResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

EditResponse* EditResponse::default_instance_ = NULL;

EditResponse* EditResponse::New(::google::protobuf::Arena* arena) const {
  EditResponse* n = new EditResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EditResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.EditResponse)
  result_ = false;
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) delete geography_;
  geography_ = NULL;
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) delete visual_;
  visual_ = NULL;
}

bool EditResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.EditResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_geography;
        break;
      }

      // optional .mtm.geo.model.Geography geography = 2;
      case 2: {
        if (tag == 18) {
         parse_geography:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geography()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_visual;
        break;
      }

      // optional .mtm.geo.model.Visual visual = 3;
      case 3: {
        if (tag == 26) {
         parse_visual:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_visual()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.EditResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.EditResponse)
  return false;
#undef DO_
}

void EditResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.EditResponse)
  // optional bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // optional .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->geography_, output);
  }

  // optional .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->visual_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.EditResponse)
}

::google::protobuf::uint8* EditResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.EditResponse)
  // optional bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // optional .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->geography_, false, target);
  }

  // optional .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->visual_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.EditResponse)
  return target;
}

int EditResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.EditResponse)
  int total_size = 0;

  // optional bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  // optional .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geography_);
  }

  // optional .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->visual_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EditResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.EditResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EditResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EditResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.EditResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.EditResponse)
    MergeFrom(*source);
  }
}

void EditResponse::MergeFrom(const EditResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.EditResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.has_geography()) {
    mutable_geography()->::mtm::geo::model::Geography::MergeFrom(from.geography());
  }
  if (from.has_visual()) {
    mutable_visual()->::mtm::geo::model::Visual::MergeFrom(from.visual());
  }
}

void EditResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.EditResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditResponse::CopyFrom(const EditResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.EditResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditResponse::IsInitialized() const {

  return true;
}

void EditResponse::Swap(EditResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditResponse::InternalSwap(EditResponse* other) {
  std::swap(result_, other->result_);
  std::swap(geography_, other->geography_);
  std::swap(visual_, other->visual_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EditResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EditResponse_descriptor_;
  metadata.reflection = EditResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EditResponse

// optional bool result = 1;
void EditResponse::clear_result() {
  result_ = false;
}
 bool EditResponse::result() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.EditResponse.result)
  return result_;
}
 void EditResponse::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.EditResponse.result)
}

// optional .mtm.geo.model.Geography geography = 2;
bool EditResponse::has_geography() const {
  return !_is_default_instance_ && geography_ != NULL;
}
void EditResponse::clear_geography() {
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) delete geography_;
  geography_ = NULL;
}
const ::mtm::geo::model::Geography& EditResponse::geography() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.EditResponse.geography)
  return geography_ != NULL ? *geography_ : *default_instance_->geography_;
}
::mtm::geo::model::Geography* EditResponse::mutable_geography() {
  
  if (geography_ == NULL) {
    geography_ = new ::mtm::geo::model::Geography;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.EditResponse.geography)
  return geography_;
}
::mtm::geo::model::Geography* EditResponse::release_geography() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.EditResponse.geography)
  
  ::mtm::geo::model::Geography* temp = geography_;
  geography_ = NULL;
  return temp;
}
void EditResponse::set_allocated_geography(::mtm::geo::model::Geography* geography) {
  delete geography_;
  geography_ = geography;
  if (geography) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.EditResponse.geography)
}

// optional .mtm.geo.model.Visual visual = 3;
bool EditResponse::has_visual() const {
  return !_is_default_instance_ && visual_ != NULL;
}
void EditResponse::clear_visual() {
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) delete visual_;
  visual_ = NULL;
}
const ::mtm::geo::model::Visual& EditResponse::visual() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.EditResponse.visual)
  return visual_ != NULL ? *visual_ : *default_instance_->visual_;
}
::mtm::geo::model::Visual* EditResponse::mutable_visual() {
  
  if (visual_ == NULL) {
    visual_ = new ::mtm::geo::model::Visual;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.EditResponse.visual)
  return visual_;
}
::mtm::geo::model::Visual* EditResponse::release_visual() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.EditResponse.visual)
  
  ::mtm::geo::model::Visual* temp = visual_;
  visual_ = NULL;
  return temp;
}
void EditResponse::set_allocated_visual(::mtm::geo::model::Visual* visual) {
  delete visual_;
  visual_ = visual;
  if (visual) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.EditResponse.visual)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVisualsForUserParameters::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVisualsForUserParameters::GetVisualsForUserParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.GetVisualsForUserParameters)
}

void GetVisualsForUserParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetVisualsForUserParameters::GetVisualsForUserParameters(const GetVisualsForUserParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.GetVisualsForUserParameters)
}

void GetVisualsForUserParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
}

GetVisualsForUserParameters::~GetVisualsForUserParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.GetVisualsForUserParameters)
  SharedDtor();
}

void GetVisualsForUserParameters::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetVisualsForUserParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVisualsForUserParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetVisualsForUserParameters_descriptor_;
}

const GetVisualsForUserParameters& GetVisualsForUserParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

GetVisualsForUserParameters* GetVisualsForUserParameters::default_instance_ = NULL;

GetVisualsForUserParameters* GetVisualsForUserParameters::New(::google::protobuf::Arena* arena) const {
  GetVisualsForUserParameters* n = new GetVisualsForUserParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVisualsForUserParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.GetVisualsForUserParameters)
  user_id_ = 0u;
}

bool GetVisualsForUserParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.GetVisualsForUserParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.GetVisualsForUserParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.GetVisualsForUserParameters)
  return false;
#undef DO_
}

void GetVisualsForUserParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.GetVisualsForUserParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.GetVisualsForUserParameters)
}

::google::protobuf::uint8* GetVisualsForUserParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.GetVisualsForUserParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.GetVisualsForUserParameters)
  return target;
}

int GetVisualsForUserParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.GetVisualsForUserParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVisualsForUserParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.GetVisualsForUserParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetVisualsForUserParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVisualsForUserParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.GetVisualsForUserParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.GetVisualsForUserParameters)
    MergeFrom(*source);
  }
}

void GetVisualsForUserParameters::MergeFrom(const GetVisualsForUserParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.GetVisualsForUserParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GetVisualsForUserParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.GetVisualsForUserParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVisualsForUserParameters::CopyFrom(const GetVisualsForUserParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.GetVisualsForUserParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVisualsForUserParameters::IsInitialized() const {

  return true;
}

void GetVisualsForUserParameters::Swap(GetVisualsForUserParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVisualsForUserParameters::InternalSwap(GetVisualsForUserParameters* other) {
  std::swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVisualsForUserParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetVisualsForUserParameters_descriptor_;
  metadata.reflection = GetVisualsForUserParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVisualsForUserParameters

// optional uint32 user_id = 1;
void GetVisualsForUserParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 GetVisualsForUserParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.GetVisualsForUserParameters.user_id)
  return user_id_;
}
 void GetVisualsForUserParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.GetVisualsForUserParameters.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddUserVisualParameters::kUserIdFieldNumber;
const int AddUserVisualParameters::kVisualFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUserVisualParameters::AddUserVisualParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.AddUserVisualParameters)
}

void AddUserVisualParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  visual_ = const_cast< ::mtm::geo::model::Visual*>(&::mtm::geo::model::Visual::default_instance());
}

AddUserVisualParameters::AddUserVisualParameters(const AddUserVisualParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.AddUserVisualParameters)
}

void AddUserVisualParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
  visual_ = NULL;
}

AddUserVisualParameters::~AddUserVisualParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.AddUserVisualParameters)
  SharedDtor();
}

void AddUserVisualParameters::SharedDtor() {
  if (this != default_instance_) {
    delete visual_;
  }
}

void AddUserVisualParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddUserVisualParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddUserVisualParameters_descriptor_;
}

const AddUserVisualParameters& AddUserVisualParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

AddUserVisualParameters* AddUserVisualParameters::default_instance_ = NULL;

AddUserVisualParameters* AddUserVisualParameters::New(::google::protobuf::Arena* arena) const {
  AddUserVisualParameters* n = new AddUserVisualParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddUserVisualParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.AddUserVisualParameters)
  user_id_ = 0u;
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) delete visual_;
  visual_ = NULL;
}

bool AddUserVisualParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.AddUserVisualParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_visual;
        break;
      }

      // optional .mtm.geo.model.Visual visual = 2;
      case 2: {
        if (tag == 18) {
         parse_visual:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_visual()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.AddUserVisualParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.AddUserVisualParameters)
  return false;
#undef DO_
}

void AddUserVisualParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.AddUserVisualParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional .mtm.geo.model.Visual visual = 2;
  if (this->has_visual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->visual_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.AddUserVisualParameters)
}

::google::protobuf::uint8* AddUserVisualParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.AddUserVisualParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional .mtm.geo.model.Visual visual = 2;
  if (this->has_visual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->visual_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.AddUserVisualParameters)
  return target;
}

int AddUserVisualParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.AddUserVisualParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // optional .mtm.geo.model.Visual visual = 2;
  if (this->has_visual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->visual_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddUserVisualParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.AddUserVisualParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddUserVisualParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUserVisualParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.AddUserVisualParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.AddUserVisualParameters)
    MergeFrom(*source);
  }
}

void AddUserVisualParameters::MergeFrom(const AddUserVisualParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.AddUserVisualParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.has_visual()) {
    mutable_visual()->::mtm::geo::model::Visual::MergeFrom(from.visual());
  }
}

void AddUserVisualParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.AddUserVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUserVisualParameters::CopyFrom(const AddUserVisualParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.AddUserVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUserVisualParameters::IsInitialized() const {

  return true;
}

void AddUserVisualParameters::Swap(AddUserVisualParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUserVisualParameters::InternalSwap(AddUserVisualParameters* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(visual_, other->visual_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddUserVisualParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddUserVisualParameters_descriptor_;
  metadata.reflection = AddUserVisualParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddUserVisualParameters

// optional uint32 user_id = 1;
void AddUserVisualParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 AddUserVisualParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddUserVisualParameters.user_id)
  return user_id_;
}
 void AddUserVisualParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.AddUserVisualParameters.user_id)
}

// optional .mtm.geo.model.Visual visual = 2;
bool AddUserVisualParameters::has_visual() const {
  return !_is_default_instance_ && visual_ != NULL;
}
void AddUserVisualParameters::clear_visual() {
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) delete visual_;
  visual_ = NULL;
}
const ::mtm::geo::model::Visual& AddUserVisualParameters::visual() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddUserVisualParameters.visual)
  return visual_ != NULL ? *visual_ : *default_instance_->visual_;
}
::mtm::geo::model::Visual* AddUserVisualParameters::mutable_visual() {
  
  if (visual_ == NULL) {
    visual_ = new ::mtm::geo::model::Visual;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.AddUserVisualParameters.visual)
  return visual_;
}
::mtm::geo::model::Visual* AddUserVisualParameters::release_visual() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.AddUserVisualParameters.visual)
  
  ::mtm::geo::model::Visual* temp = visual_;
  visual_ = NULL;
  return temp;
}
void AddUserVisualParameters::set_allocated_visual(::mtm::geo::model::Visual* visual) {
  delete visual_;
  visual_ = visual;
  if (visual) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.AddUserVisualParameters.visual)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddUserVisual2Parameters::kUserIdFieldNumber;
const int AddUserVisual2Parameters::kVisibleFieldNumber;
const int AddUserVisual2Parameters::kGeographyIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUserVisual2Parameters::AddUserVisual2Parameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.AddUserVisual2Parameters)
}

void AddUserVisual2Parameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AddUserVisual2Parameters::AddUserVisual2Parameters(const AddUserVisual2Parameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.AddUserVisual2Parameters)
}

void AddUserVisual2Parameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
  visible_ = false;
}

AddUserVisual2Parameters::~AddUserVisual2Parameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.AddUserVisual2Parameters)
  SharedDtor();
}

void AddUserVisual2Parameters::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddUserVisual2Parameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddUserVisual2Parameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddUserVisual2Parameters_descriptor_;
}

const AddUserVisual2Parameters& AddUserVisual2Parameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

AddUserVisual2Parameters* AddUserVisual2Parameters::default_instance_ = NULL;

AddUserVisual2Parameters* AddUserVisual2Parameters::New(::google::protobuf::Arena* arena) const {
  AddUserVisual2Parameters* n = new AddUserVisual2Parameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddUserVisual2Parameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.AddUserVisual2Parameters)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AddUserVisual2Parameters, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AddUserVisual2Parameters*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(user_id_, visible_);

#undef ZR_HELPER_
#undef ZR_

  geography_ids_.Clear();
}

bool AddUserVisual2Parameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.AddUserVisual2Parameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_visible;
        break;
      }

      // optional bool visible = 2;
      case 2: {
        if (tag == 16) {
         parse_visible:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_geography_ids;
        break;
      }

      // repeated .mtm.Uuid geography_ids = 3;
      case 3: {
        if (tag == 26) {
         parse_geography_ids:
          DO_(input->IncrementRecursionDepth());
         parse_loop_geography_ids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_geography_ids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_geography_ids;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.AddUserVisual2Parameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.AddUserVisual2Parameters)
  return false;
#undef DO_
}

void AddUserVisual2Parameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.AddUserVisual2Parameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional bool visible = 2;
  if (this->visible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->visible(), output);
  }

  // repeated .mtm.Uuid geography_ids = 3;
  for (unsigned int i = 0, n = this->geography_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->geography_ids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.AddUserVisual2Parameters)
}

::google::protobuf::uint8* AddUserVisual2Parameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.AddUserVisual2Parameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional bool visible = 2;
  if (this->visible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->visible(), target);
  }

  // repeated .mtm.Uuid geography_ids = 3;
  for (unsigned int i = 0, n = this->geography_ids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->geography_ids(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.AddUserVisual2Parameters)
  return target;
}

int AddUserVisual2Parameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.AddUserVisual2Parameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // optional bool visible = 2;
  if (this->visible() != 0) {
    total_size += 1 + 1;
  }

  // repeated .mtm.Uuid geography_ids = 3;
  total_size += 1 * this->geography_ids_size();
  for (int i = 0; i < this->geography_ids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->geography_ids(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddUserVisual2Parameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.AddUserVisual2Parameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddUserVisual2Parameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUserVisual2Parameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.AddUserVisual2Parameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.AddUserVisual2Parameters)
    MergeFrom(*source);
  }
}

void AddUserVisual2Parameters::MergeFrom(const AddUserVisual2Parameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.AddUserVisual2Parameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  geography_ids_.MergeFrom(from.geography_ids_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.visible() != 0) {
    set_visible(from.visible());
  }
}

void AddUserVisual2Parameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.AddUserVisual2Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUserVisual2Parameters::CopyFrom(const AddUserVisual2Parameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.AddUserVisual2Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUserVisual2Parameters::IsInitialized() const {

  return true;
}

void AddUserVisual2Parameters::Swap(AddUserVisual2Parameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUserVisual2Parameters::InternalSwap(AddUserVisual2Parameters* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(visible_, other->visible_);
  geography_ids_.UnsafeArenaSwap(&other->geography_ids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddUserVisual2Parameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddUserVisual2Parameters_descriptor_;
  metadata.reflection = AddUserVisual2Parameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddUserVisual2Parameters

// optional uint32 user_id = 1;
void AddUserVisual2Parameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 AddUserVisual2Parameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddUserVisual2Parameters.user_id)
  return user_id_;
}
 void AddUserVisual2Parameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.AddUserVisual2Parameters.user_id)
}

// optional bool visible = 2;
void AddUserVisual2Parameters::clear_visible() {
  visible_ = false;
}
 bool AddUserVisual2Parameters::visible() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddUserVisual2Parameters.visible)
  return visible_;
}
 void AddUserVisual2Parameters::set_visible(bool value) {
  
  visible_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.AddUserVisual2Parameters.visible)
}

// repeated .mtm.Uuid geography_ids = 3;
int AddUserVisual2Parameters::geography_ids_size() const {
  return geography_ids_.size();
}
void AddUserVisual2Parameters::clear_geography_ids() {
  geography_ids_.Clear();
}
const ::mtm::Uuid& AddUserVisual2Parameters::geography_ids(int index) const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddUserVisual2Parameters.geography_ids)
  return geography_ids_.Get(index);
}
::mtm::Uuid* AddUserVisual2Parameters::mutable_geography_ids(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.AddUserVisual2Parameters.geography_ids)
  return geography_ids_.Mutable(index);
}
::mtm::Uuid* AddUserVisual2Parameters::add_geography_ids() {
  // @@protoc_insertion_point(field_add:mtm.geo.service.AddUserVisual2Parameters.geography_ids)
  return geography_ids_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtm::Uuid >*
AddUserVisual2Parameters::mutable_geography_ids() {
  // @@protoc_insertion_point(field_mutable_list:mtm.geo.service.AddUserVisual2Parameters.geography_ids)
  return &geography_ids_;
}
const ::google::protobuf::RepeatedPtrField< ::mtm::Uuid >&
AddUserVisual2Parameters::geography_ids() const {
  // @@protoc_insertion_point(field_list:mtm.geo.service.AddUserVisual2Parameters.geography_ids)
  return geography_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveUserVisualParameters::kUserIdFieldNumber;
const int RemoveUserVisualParameters::kVisualIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveUserVisualParameters::RemoveUserVisualParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.RemoveUserVisualParameters)
}

void RemoveUserVisualParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  visual_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
}

RemoveUserVisualParameters::RemoveUserVisualParameters(const RemoveUserVisualParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.RemoveUserVisualParameters)
}

void RemoveUserVisualParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
  visual_id_ = NULL;
}

RemoveUserVisualParameters::~RemoveUserVisualParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.RemoveUserVisualParameters)
  SharedDtor();
}

void RemoveUserVisualParameters::SharedDtor() {
  if (this != default_instance_) {
    delete visual_id_;
  }
}

void RemoveUserVisualParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveUserVisualParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveUserVisualParameters_descriptor_;
}

const RemoveUserVisualParameters& RemoveUserVisualParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

RemoveUserVisualParameters* RemoveUserVisualParameters::default_instance_ = NULL;

RemoveUserVisualParameters* RemoveUserVisualParameters::New(::google::protobuf::Arena* arena) const {
  RemoveUserVisualParameters* n = new RemoveUserVisualParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveUserVisualParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.RemoveUserVisualParameters)
  user_id_ = 0u;
  if (GetArenaNoVirtual() == NULL && visual_id_ != NULL) delete visual_id_;
  visual_id_ = NULL;
}

bool RemoveUserVisualParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.RemoveUserVisualParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_visual_id;
        break;
      }

      // optional .mtm.Uuid visual_id = 2;
      case 2: {
        if (tag == 18) {
         parse_visual_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_visual_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.RemoveUserVisualParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.RemoveUserVisualParameters)
  return false;
#undef DO_
}

void RemoveUserVisualParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.RemoveUserVisualParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->visual_id_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.RemoveUserVisualParameters)
}

::google::protobuf::uint8* RemoveUserVisualParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.RemoveUserVisualParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->visual_id_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.RemoveUserVisualParameters)
  return target;
}

int RemoveUserVisualParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.RemoveUserVisualParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // optional .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->visual_id_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveUserVisualParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.RemoveUserVisualParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RemoveUserVisualParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveUserVisualParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.RemoveUserVisualParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.RemoveUserVisualParameters)
    MergeFrom(*source);
  }
}

void RemoveUserVisualParameters::MergeFrom(const RemoveUserVisualParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.RemoveUserVisualParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.has_visual_id()) {
    mutable_visual_id()->::mtm::Uuid::MergeFrom(from.visual_id());
  }
}

void RemoveUserVisualParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.RemoveUserVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveUserVisualParameters::CopyFrom(const RemoveUserVisualParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.RemoveUserVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveUserVisualParameters::IsInitialized() const {

  return true;
}

void RemoveUserVisualParameters::Swap(RemoveUserVisualParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveUserVisualParameters::InternalSwap(RemoveUserVisualParameters* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(visual_id_, other->visual_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveUserVisualParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveUserVisualParameters_descriptor_;
  metadata.reflection = RemoveUserVisualParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveUserVisualParameters

// optional uint32 user_id = 1;
void RemoveUserVisualParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 RemoveUserVisualParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.RemoveUserVisualParameters.user_id)
  return user_id_;
}
 void RemoveUserVisualParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.RemoveUserVisualParameters.user_id)
}

// optional .mtm.Uuid visual_id = 2;
bool RemoveUserVisualParameters::has_visual_id() const {
  return !_is_default_instance_ && visual_id_ != NULL;
}
void RemoveUserVisualParameters::clear_visual_id() {
  if (GetArenaNoVirtual() == NULL && visual_id_ != NULL) delete visual_id_;
  visual_id_ = NULL;
}
const ::mtm::Uuid& RemoveUserVisualParameters::visual_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.RemoveUserVisualParameters.visual_id)
  return visual_id_ != NULL ? *visual_id_ : *default_instance_->visual_id_;
}
::mtm::Uuid* RemoveUserVisualParameters::mutable_visual_id() {
  
  if (visual_id_ == NULL) {
    visual_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.RemoveUserVisualParameters.visual_id)
  return visual_id_;
}
::mtm::Uuid* RemoveUserVisualParameters::release_visual_id() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.RemoveUserVisualParameters.visual_id)
  
  ::mtm::Uuid* temp = visual_id_;
  visual_id_ = NULL;
  return temp;
}
void RemoveUserVisualParameters::set_allocated_visual_id(::mtm::Uuid* visual_id) {
  delete visual_id_;
  visual_id_ = visual_id;
  if (visual_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.RemoveUserVisualParameters.visual_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVisualParameters::kUserIdFieldNumber;
const int GetVisualParameters::kVisualIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVisualParameters::GetVisualParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.GetVisualParameters)
}

void GetVisualParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  visual_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
}

GetVisualParameters::GetVisualParameters(const GetVisualParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.GetVisualParameters)
}

void GetVisualParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
  visual_id_ = NULL;
}

GetVisualParameters::~GetVisualParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.GetVisualParameters)
  SharedDtor();
}

void GetVisualParameters::SharedDtor() {
  if (this != default_instance_) {
    delete visual_id_;
  }
}

void GetVisualParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVisualParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetVisualParameters_descriptor_;
}

const GetVisualParameters& GetVisualParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

GetVisualParameters* GetVisualParameters::default_instance_ = NULL;

GetVisualParameters* GetVisualParameters::New(::google::protobuf::Arena* arena) const {
  GetVisualParameters* n = new GetVisualParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVisualParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.GetVisualParameters)
  user_id_ = 0u;
  if (GetArenaNoVirtual() == NULL && visual_id_ != NULL) delete visual_id_;
  visual_id_ = NULL;
}

bool GetVisualParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.GetVisualParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_visual_id;
        break;
      }

      // optional .mtm.Uuid visual_id = 2;
      case 2: {
        if (tag == 18) {
         parse_visual_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_visual_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.GetVisualParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.GetVisualParameters)
  return false;
#undef DO_
}

void GetVisualParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.GetVisualParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->visual_id_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.GetVisualParameters)
}

::google::protobuf::uint8* GetVisualParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.GetVisualParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->visual_id_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.GetVisualParameters)
  return target;
}

int GetVisualParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.GetVisualParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // optional .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->visual_id_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVisualParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.GetVisualParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetVisualParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVisualParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.GetVisualParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.GetVisualParameters)
    MergeFrom(*source);
  }
}

void GetVisualParameters::MergeFrom(const GetVisualParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.GetVisualParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.has_visual_id()) {
    mutable_visual_id()->::mtm::Uuid::MergeFrom(from.visual_id());
  }
}

void GetVisualParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.GetVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVisualParameters::CopyFrom(const GetVisualParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.GetVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVisualParameters::IsInitialized() const {

  return true;
}

void GetVisualParameters::Swap(GetVisualParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVisualParameters::InternalSwap(GetVisualParameters* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(visual_id_, other->visual_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVisualParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetVisualParameters_descriptor_;
  metadata.reflection = GetVisualParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVisualParameters

// optional uint32 user_id = 1;
void GetVisualParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 GetVisualParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.GetVisualParameters.user_id)
  return user_id_;
}
 void GetVisualParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.GetVisualParameters.user_id)
}

// optional .mtm.Uuid visual_id = 2;
bool GetVisualParameters::has_visual_id() const {
  return !_is_default_instance_ && visual_id_ != NULL;
}
void GetVisualParameters::clear_visual_id() {
  if (GetArenaNoVirtual() == NULL && visual_id_ != NULL) delete visual_id_;
  visual_id_ = NULL;
}
const ::mtm::Uuid& GetVisualParameters::visual_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.GetVisualParameters.visual_id)
  return visual_id_ != NULL ? *visual_id_ : *default_instance_->visual_id_;
}
::mtm::Uuid* GetVisualParameters::mutable_visual_id() {
  
  if (visual_id_ == NULL) {
    visual_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.GetVisualParameters.visual_id)
  return visual_id_;
}
::mtm::Uuid* GetVisualParameters::release_visual_id() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.GetVisualParameters.visual_id)
  
  ::mtm::Uuid* temp = visual_id_;
  visual_id_ = NULL;
  return temp;
}
void GetVisualParameters::set_allocated_visual_id(::mtm::Uuid* visual_id) {
  delete visual_id_;
  visual_id_ = visual_id;
  if (visual_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.GetVisualParameters.visual_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddBitmapParameters::kUserIdFieldNumber;
const int AddBitmapParameters::kBitmapNameFieldNumber;
const int AddBitmapParameters::kBitmapDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddBitmapParameters::AddBitmapParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.AddBitmapParameters)
}

void AddBitmapParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AddBitmapParameters::AddBitmapParameters(const AddBitmapParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.AddBitmapParameters)
}

void AddBitmapParameters::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = 0u;
  bitmap_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bitmap_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddBitmapParameters::~AddBitmapParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.AddBitmapParameters)
  SharedDtor();
}

void AddBitmapParameters::SharedDtor() {
  bitmap_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bitmap_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AddBitmapParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddBitmapParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddBitmapParameters_descriptor_;
}

const AddBitmapParameters& AddBitmapParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

AddBitmapParameters* AddBitmapParameters::default_instance_ = NULL;

AddBitmapParameters* AddBitmapParameters::New(::google::protobuf::Arena* arena) const {
  AddBitmapParameters* n = new AddBitmapParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddBitmapParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.AddBitmapParameters)
  user_id_ = 0u;
  bitmap_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bitmap_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddBitmapParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.AddBitmapParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bitmap_name;
        break;
      }

      // optional string bitmap_name = 2;
      case 2: {
        if (tag == 18) {
         parse_bitmap_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bitmap_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bitmap_name().data(), this->bitmap_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mtm.geo.service.AddBitmapParameters.bitmap_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bitmap_data;
        break;
      }

      // optional bytes bitmap_data = 3;
      case 3: {
        if (tag == 26) {
         parse_bitmap_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bitmap_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.AddBitmapParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.AddBitmapParameters)
  return false;
#undef DO_
}

void AddBitmapParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.AddBitmapParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional string bitmap_name = 2;
  if (this->bitmap_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bitmap_name().data(), this->bitmap_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.geo.service.AddBitmapParameters.bitmap_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bitmap_name(), output);
  }

  // optional bytes bitmap_data = 3;
  if (this->bitmap_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->bitmap_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.AddBitmapParameters)
}

::google::protobuf::uint8* AddBitmapParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.AddBitmapParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional string bitmap_name = 2;
  if (this->bitmap_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bitmap_name().data(), this->bitmap_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.geo.service.AddBitmapParameters.bitmap_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bitmap_name(), target);
  }

  // optional bytes bitmap_data = 3;
  if (this->bitmap_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->bitmap_data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.AddBitmapParameters)
  return target;
}

int AddBitmapParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.AddBitmapParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // optional string bitmap_name = 2;
  if (this->bitmap_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bitmap_name());
  }

  // optional bytes bitmap_data = 3;
  if (this->bitmap_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bitmap_data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddBitmapParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.AddBitmapParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddBitmapParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddBitmapParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.AddBitmapParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.AddBitmapParameters)
    MergeFrom(*source);
  }
}

void AddBitmapParameters::MergeFrom(const AddBitmapParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.AddBitmapParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.bitmap_name().size() > 0) {

    bitmap_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitmap_name_);
  }
  if (from.bitmap_data().size() > 0) {

    bitmap_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitmap_data_);
  }
}

void AddBitmapParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.AddBitmapParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddBitmapParameters::CopyFrom(const AddBitmapParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.AddBitmapParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBitmapParameters::IsInitialized() const {

  return true;
}

void AddBitmapParameters::Swap(AddBitmapParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddBitmapParameters::InternalSwap(AddBitmapParameters* other) {
  std::swap(user_id_, other->user_id_);
  bitmap_name_.Swap(&other->bitmap_name_);
  bitmap_data_.Swap(&other->bitmap_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddBitmapParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddBitmapParameters_descriptor_;
  metadata.reflection = AddBitmapParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddBitmapParameters

// optional uint32 user_id = 1;
void AddBitmapParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 AddBitmapParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddBitmapParameters.user_id)
  return user_id_;
}
 void AddBitmapParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.AddBitmapParameters.user_id)
}

// optional string bitmap_name = 2;
void AddBitmapParameters::clear_bitmap_name() {
  bitmap_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AddBitmapParameters::bitmap_name() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddBitmapParameters.bitmap_name)
  return bitmap_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddBitmapParameters::set_bitmap_name(const ::std::string& value) {
  
  bitmap_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.geo.service.AddBitmapParameters.bitmap_name)
}
 void AddBitmapParameters::set_bitmap_name(const char* value) {
  
  bitmap_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.geo.service.AddBitmapParameters.bitmap_name)
}
 void AddBitmapParameters::set_bitmap_name(const char* value, size_t size) {
  
  bitmap_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.geo.service.AddBitmapParameters.bitmap_name)
}
 ::std::string* AddBitmapParameters::mutable_bitmap_name() {
  
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.AddBitmapParameters.bitmap_name)
  return bitmap_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AddBitmapParameters::release_bitmap_name() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.AddBitmapParameters.bitmap_name)
  
  return bitmap_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddBitmapParameters::set_allocated_bitmap_name(::std::string* bitmap_name) {
  if (bitmap_name != NULL) {
    
  } else {
    
  }
  bitmap_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bitmap_name);
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.AddBitmapParameters.bitmap_name)
}

// optional bytes bitmap_data = 3;
void AddBitmapParameters::clear_bitmap_data() {
  bitmap_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AddBitmapParameters::bitmap_data() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.AddBitmapParameters.bitmap_data)
  return bitmap_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddBitmapParameters::set_bitmap_data(const ::std::string& value) {
  
  bitmap_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.geo.service.AddBitmapParameters.bitmap_data)
}
 void AddBitmapParameters::set_bitmap_data(const char* value) {
  
  bitmap_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.geo.service.AddBitmapParameters.bitmap_data)
}
 void AddBitmapParameters::set_bitmap_data(const void* value, size_t size) {
  
  bitmap_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.geo.service.AddBitmapParameters.bitmap_data)
}
 ::std::string* AddBitmapParameters::mutable_bitmap_data() {
  
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.AddBitmapParameters.bitmap_data)
  return bitmap_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AddBitmapParameters::release_bitmap_data() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.AddBitmapParameters.bitmap_data)
  
  return bitmap_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddBitmapParameters::set_allocated_bitmap_data(::std::string* bitmap_data) {
  if (bitmap_data != NULL) {
    
  } else {
    
  }
  bitmap_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bitmap_data);
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.AddBitmapParameters.bitmap_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RollbackParameters::kUserIdFieldNumber;
const int RollbackParameters::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollbackParameters::RollbackParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.RollbackParameters)
}

void RollbackParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  object_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
}

RollbackParameters::RollbackParameters(const RollbackParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.RollbackParameters)
}

void RollbackParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
  object_id_ = NULL;
}

RollbackParameters::~RollbackParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.RollbackParameters)
  SharedDtor();
}

void RollbackParameters::SharedDtor() {
  if (this != default_instance_) {
    delete object_id_;
  }
}

void RollbackParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RollbackParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RollbackParameters_descriptor_;
}

const RollbackParameters& RollbackParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

RollbackParameters* RollbackParameters::default_instance_ = NULL;

RollbackParameters* RollbackParameters::New(::google::protobuf::Arena* arena) const {
  RollbackParameters* n = new RollbackParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RollbackParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.RollbackParameters)
  user_id_ = 0u;
  if (GetArenaNoVirtual() == NULL && object_id_ != NULL) delete object_id_;
  object_id_ = NULL;
}

bool RollbackParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.RollbackParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_object_id;
        break;
      }

      // optional .mtm.Uuid object_id = 2;
      case 2: {
        if (tag == 18) {
         parse_object_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_object_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.RollbackParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.RollbackParameters)
  return false;
#undef DO_
}

void RollbackParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.RollbackParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional .mtm.Uuid object_id = 2;
  if (this->has_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->object_id_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.RollbackParameters)
}

::google::protobuf::uint8* RollbackParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.RollbackParameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional .mtm.Uuid object_id = 2;
  if (this->has_object_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->object_id_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.RollbackParameters)
  return target;
}

int RollbackParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.RollbackParameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // optional .mtm.Uuid object_id = 2;
  if (this->has_object_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->object_id_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RollbackParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.RollbackParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RollbackParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RollbackParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.RollbackParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.RollbackParameters)
    MergeFrom(*source);
  }
}

void RollbackParameters::MergeFrom(const RollbackParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.RollbackParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.has_object_id()) {
    mutable_object_id()->::mtm::Uuid::MergeFrom(from.object_id());
  }
}

void RollbackParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.RollbackParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollbackParameters::CopyFrom(const RollbackParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.RollbackParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackParameters::IsInitialized() const {

  return true;
}

void RollbackParameters::Swap(RollbackParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollbackParameters::InternalSwap(RollbackParameters* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(object_id_, other->object_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RollbackParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RollbackParameters_descriptor_;
  metadata.reflection = RollbackParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RollbackParameters

// optional uint32 user_id = 1;
void RollbackParameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 RollbackParameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.RollbackParameters.user_id)
  return user_id_;
}
 void RollbackParameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.RollbackParameters.user_id)
}

// optional .mtm.Uuid object_id = 2;
bool RollbackParameters::has_object_id() const {
  return !_is_default_instance_ && object_id_ != NULL;
}
void RollbackParameters::clear_object_id() {
  if (GetArenaNoVirtual() == NULL && object_id_ != NULL) delete object_id_;
  object_id_ = NULL;
}
const ::mtm::Uuid& RollbackParameters::object_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.RollbackParameters.object_id)
  return object_id_ != NULL ? *object_id_ : *default_instance_->object_id_;
}
::mtm::Uuid* RollbackParameters::mutable_object_id() {
  
  if (object_id_ == NULL) {
    object_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.RollbackParameters.object_id)
  return object_id_;
}
::mtm::Uuid* RollbackParameters::release_object_id() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.RollbackParameters.object_id)
  
  ::mtm::Uuid* temp = object_id_;
  object_id_ = NULL;
  return temp;
}
void RollbackParameters::set_allocated_object_id(::mtm::Uuid* object_id) {
  delete object_id_;
  object_id_ = object_id;
  if (object_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.RollbackParameters.object_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rollback2Parameters::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rollback2Parameters::Rollback2Parameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.Rollback2Parameters)
}

void Rollback2Parameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Rollback2Parameters::Rollback2Parameters(const Rollback2Parameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.Rollback2Parameters)
}

void Rollback2Parameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_id_ = 0u;
}

Rollback2Parameters::~Rollback2Parameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.Rollback2Parameters)
  SharedDtor();
}

void Rollback2Parameters::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Rollback2Parameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rollback2Parameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Rollback2Parameters_descriptor_;
}

const Rollback2Parameters& Rollback2Parameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

Rollback2Parameters* Rollback2Parameters::default_instance_ = NULL;

Rollback2Parameters* Rollback2Parameters::New(::google::protobuf::Arena* arena) const {
  Rollback2Parameters* n = new Rollback2Parameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rollback2Parameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.Rollback2Parameters)
  user_id_ = 0u;
}

bool Rollback2Parameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.Rollback2Parameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.Rollback2Parameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.Rollback2Parameters)
  return false;
#undef DO_
}

void Rollback2Parameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.Rollback2Parameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.Rollback2Parameters)
}

::google::protobuf::uint8* Rollback2Parameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.Rollback2Parameters)
  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.Rollback2Parameters)
  return target;
}

int Rollback2Parameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.Rollback2Parameters)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rollback2Parameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.Rollback2Parameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Rollback2Parameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Rollback2Parameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.Rollback2Parameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.Rollback2Parameters)
    MergeFrom(*source);
  }
}

void Rollback2Parameters::MergeFrom(const Rollback2Parameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.Rollback2Parameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void Rollback2Parameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.Rollback2Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rollback2Parameters::CopyFrom(const Rollback2Parameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.Rollback2Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rollback2Parameters::IsInitialized() const {

  return true;
}

void Rollback2Parameters::Swap(Rollback2Parameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rollback2Parameters::InternalSwap(Rollback2Parameters* other) {
  std::swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rollback2Parameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Rollback2Parameters_descriptor_;
  metadata.reflection = Rollback2Parameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Rollback2Parameters

// optional uint32 user_id = 1;
void Rollback2Parameters::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 Rollback2Parameters::user_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.Rollback2Parameters.user_id)
  return user_id_;
}
 void Rollback2Parameters::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.service.Rollback2Parameters.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rollback3Parameters::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rollback3Parameters::Rollback3Parameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.Rollback3Parameters)
}

void Rollback3Parameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  object_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
}

Rollback3Parameters::Rollback3Parameters(const Rollback3Parameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.Rollback3Parameters)
}

void Rollback3Parameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  object_id_ = NULL;
}

Rollback3Parameters::~Rollback3Parameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.Rollback3Parameters)
  SharedDtor();
}

void Rollback3Parameters::SharedDtor() {
  if (this != default_instance_) {
    delete object_id_;
  }
}

void Rollback3Parameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rollback3Parameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Rollback3Parameters_descriptor_;
}

const Rollback3Parameters& Rollback3Parameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

Rollback3Parameters* Rollback3Parameters::default_instance_ = NULL;

Rollback3Parameters* Rollback3Parameters::New(::google::protobuf::Arena* arena) const {
  Rollback3Parameters* n = new Rollback3Parameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rollback3Parameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.Rollback3Parameters)
  if (GetArenaNoVirtual() == NULL && object_id_ != NULL) delete object_id_;
  object_id_ = NULL;
}

bool Rollback3Parameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.Rollback3Parameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mtm.Uuid object_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_object_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.Rollback3Parameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.Rollback3Parameters)
  return false;
#undef DO_
}

void Rollback3Parameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.Rollback3Parameters)
  // optional .mtm.Uuid object_id = 1;
  if (this->has_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->object_id_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.Rollback3Parameters)
}

::google::protobuf::uint8* Rollback3Parameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.Rollback3Parameters)
  // optional .mtm.Uuid object_id = 1;
  if (this->has_object_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->object_id_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.Rollback3Parameters)
  return target;
}

int Rollback3Parameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.Rollback3Parameters)
  int total_size = 0;

  // optional .mtm.Uuid object_id = 1;
  if (this->has_object_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->object_id_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rollback3Parameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.Rollback3Parameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Rollback3Parameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Rollback3Parameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.Rollback3Parameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.Rollback3Parameters)
    MergeFrom(*source);
  }
}

void Rollback3Parameters::MergeFrom(const Rollback3Parameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.Rollback3Parameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_object_id()) {
    mutable_object_id()->::mtm::Uuid::MergeFrom(from.object_id());
  }
}

void Rollback3Parameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.Rollback3Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rollback3Parameters::CopyFrom(const Rollback3Parameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.Rollback3Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rollback3Parameters::IsInitialized() const {

  return true;
}

void Rollback3Parameters::Swap(Rollback3Parameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rollback3Parameters::InternalSwap(Rollback3Parameters* other) {
  std::swap(object_id_, other->object_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rollback3Parameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Rollback3Parameters_descriptor_;
  metadata.reflection = Rollback3Parameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Rollback3Parameters

// optional .mtm.Uuid object_id = 1;
bool Rollback3Parameters::has_object_id() const {
  return !_is_default_instance_ && object_id_ != NULL;
}
void Rollback3Parameters::clear_object_id() {
  if (GetArenaNoVirtual() == NULL && object_id_ != NULL) delete object_id_;
  object_id_ = NULL;
}
const ::mtm::Uuid& Rollback3Parameters::object_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.Rollback3Parameters.object_id)
  return object_id_ != NULL ? *object_id_ : *default_instance_->object_id_;
}
::mtm::Uuid* Rollback3Parameters::mutable_object_id() {
  
  if (object_id_ == NULL) {
    object_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.Rollback3Parameters.object_id)
  return object_id_;
}
::mtm::Uuid* Rollback3Parameters::release_object_id() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.Rollback3Parameters.object_id)
  
  ::mtm::Uuid* temp = object_id_;
  object_id_ = NULL;
  return temp;
}
void Rollback3Parameters::set_allocated_object_id(::mtm::Uuid* object_id) {
  delete object_id_;
  object_id_ = object_id;
  if (object_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.Rollback3Parameters.object_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveGeographyResourceParameters::kGeographyResourceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveGeographyResourceParameters::RemoveGeographyResourceParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.RemoveGeographyResourceParameters)
}

void RemoveGeographyResourceParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  geography_resource_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
}

RemoveGeographyResourceParameters::RemoveGeographyResourceParameters(const RemoveGeographyResourceParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.RemoveGeographyResourceParameters)
}

void RemoveGeographyResourceParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  geography_resource_id_ = NULL;
}

RemoveGeographyResourceParameters::~RemoveGeographyResourceParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.RemoveGeographyResourceParameters)
  SharedDtor();
}

void RemoveGeographyResourceParameters::SharedDtor() {
  if (this != default_instance_) {
    delete geography_resource_id_;
  }
}

void RemoveGeographyResourceParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveGeographyResourceParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveGeographyResourceParameters_descriptor_;
}

const RemoveGeographyResourceParameters& RemoveGeographyResourceParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

RemoveGeographyResourceParameters* RemoveGeographyResourceParameters::default_instance_ = NULL;

RemoveGeographyResourceParameters* RemoveGeographyResourceParameters::New(::google::protobuf::Arena* arena) const {
  RemoveGeographyResourceParameters* n = new RemoveGeographyResourceParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveGeographyResourceParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.RemoveGeographyResourceParameters)
  if (GetArenaNoVirtual() == NULL && geography_resource_id_ != NULL) delete geography_resource_id_;
  geography_resource_id_ = NULL;
}

bool RemoveGeographyResourceParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.RemoveGeographyResourceParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mtm.Uuid geography_resource_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geography_resource_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.RemoveGeographyResourceParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.RemoveGeographyResourceParameters)
  return false;
#undef DO_
}

void RemoveGeographyResourceParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.RemoveGeographyResourceParameters)
  // optional .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->geography_resource_id_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.RemoveGeographyResourceParameters)
}

::google::protobuf::uint8* RemoveGeographyResourceParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.RemoveGeographyResourceParameters)
  // optional .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->geography_resource_id_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.RemoveGeographyResourceParameters)
  return target;
}

int RemoveGeographyResourceParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.RemoveGeographyResourceParameters)
  int total_size = 0;

  // optional .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geography_resource_id_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveGeographyResourceParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.RemoveGeographyResourceParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RemoveGeographyResourceParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveGeographyResourceParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.RemoveGeographyResourceParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.RemoveGeographyResourceParameters)
    MergeFrom(*source);
  }
}

void RemoveGeographyResourceParameters::MergeFrom(const RemoveGeographyResourceParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.RemoveGeographyResourceParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_geography_resource_id()) {
    mutable_geography_resource_id()->::mtm::Uuid::MergeFrom(from.geography_resource_id());
  }
}

void RemoveGeographyResourceParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.RemoveGeographyResourceParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGeographyResourceParameters::CopyFrom(const RemoveGeographyResourceParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.RemoveGeographyResourceParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGeographyResourceParameters::IsInitialized() const {

  return true;
}

void RemoveGeographyResourceParameters::Swap(RemoveGeographyResourceParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveGeographyResourceParameters::InternalSwap(RemoveGeographyResourceParameters* other) {
  std::swap(geography_resource_id_, other->geography_resource_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveGeographyResourceParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveGeographyResourceParameters_descriptor_;
  metadata.reflection = RemoveGeographyResourceParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveGeographyResourceParameters

// optional .mtm.Uuid geography_resource_id = 1;
bool RemoveGeographyResourceParameters::has_geography_resource_id() const {
  return !_is_default_instance_ && geography_resource_id_ != NULL;
}
void RemoveGeographyResourceParameters::clear_geography_resource_id() {
  if (GetArenaNoVirtual() == NULL && geography_resource_id_ != NULL) delete geography_resource_id_;
  geography_resource_id_ = NULL;
}
const ::mtm::Uuid& RemoveGeographyResourceParameters::geography_resource_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.RemoveGeographyResourceParameters.geography_resource_id)
  return geography_resource_id_ != NULL ? *geography_resource_id_ : *default_instance_->geography_resource_id_;
}
::mtm::Uuid* RemoveGeographyResourceParameters::mutable_geography_resource_id() {
  
  if (geography_resource_id_ == NULL) {
    geography_resource_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.RemoveGeographyResourceParameters.geography_resource_id)
  return geography_resource_id_;
}
::mtm::Uuid* RemoveGeographyResourceParameters::release_geography_resource_id() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.RemoveGeographyResourceParameters.geography_resource_id)
  
  ::mtm::Uuid* temp = geography_resource_id_;
  geography_resource_id_ = NULL;
  return temp;
}
void RemoveGeographyResourceParameters::set_allocated_geography_resource_id(::mtm::Uuid* geography_resource_id) {
  delete geography_resource_id_;
  geography_resource_id_ = geography_resource_id;
  if (geography_resource_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.RemoveGeographyResourceParameters.geography_resource_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBitmapParameters::kGeographyResourceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBitmapParameters::GetBitmapParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.GetBitmapParameters)
}

void GetBitmapParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  geography_resource_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
}

GetBitmapParameters::GetBitmapParameters(const GetBitmapParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.GetBitmapParameters)
}

void GetBitmapParameters::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  geography_resource_id_ = NULL;
}

GetBitmapParameters::~GetBitmapParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.GetBitmapParameters)
  SharedDtor();
}

void GetBitmapParameters::SharedDtor() {
  if (this != default_instance_) {
    delete geography_resource_id_;
  }
}

void GetBitmapParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBitmapParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBitmapParameters_descriptor_;
}

const GetBitmapParameters& GetBitmapParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

GetBitmapParameters* GetBitmapParameters::default_instance_ = NULL;

GetBitmapParameters* GetBitmapParameters::New(::google::protobuf::Arena* arena) const {
  GetBitmapParameters* n = new GetBitmapParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBitmapParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.GetBitmapParameters)
  if (GetArenaNoVirtual() == NULL && geography_resource_id_ != NULL) delete geography_resource_id_;
  geography_resource_id_ = NULL;
}

bool GetBitmapParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.GetBitmapParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mtm.Uuid geography_resource_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geography_resource_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.GetBitmapParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.GetBitmapParameters)
  return false;
#undef DO_
}

void GetBitmapParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.GetBitmapParameters)
  // optional .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->geography_resource_id_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.GetBitmapParameters)
}

::google::protobuf::uint8* GetBitmapParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.GetBitmapParameters)
  // optional .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->geography_resource_id_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.GetBitmapParameters)
  return target;
}

int GetBitmapParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.GetBitmapParameters)
  int total_size = 0;

  // optional .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geography_resource_id_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBitmapParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.GetBitmapParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBitmapParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBitmapParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.GetBitmapParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.GetBitmapParameters)
    MergeFrom(*source);
  }
}

void GetBitmapParameters::MergeFrom(const GetBitmapParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.GetBitmapParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_geography_resource_id()) {
    mutable_geography_resource_id()->::mtm::Uuid::MergeFrom(from.geography_resource_id());
  }
}

void GetBitmapParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.GetBitmapParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBitmapParameters::CopyFrom(const GetBitmapParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.GetBitmapParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBitmapParameters::IsInitialized() const {

  return true;
}

void GetBitmapParameters::Swap(GetBitmapParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBitmapParameters::InternalSwap(GetBitmapParameters* other) {
  std::swap(geography_resource_id_, other->geography_resource_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBitmapParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBitmapParameters_descriptor_;
  metadata.reflection = GetBitmapParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBitmapParameters

// optional .mtm.Uuid geography_resource_id = 1;
bool GetBitmapParameters::has_geography_resource_id() const {
  return !_is_default_instance_ && geography_resource_id_ != NULL;
}
void GetBitmapParameters::clear_geography_resource_id() {
  if (GetArenaNoVirtual() == NULL && geography_resource_id_ != NULL) delete geography_resource_id_;
  geography_resource_id_ = NULL;
}
const ::mtm::Uuid& GetBitmapParameters::geography_resource_id() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.GetBitmapParameters.geography_resource_id)
  return geography_resource_id_ != NULL ? *geography_resource_id_ : *default_instance_->geography_resource_id_;
}
::mtm::Uuid* GetBitmapParameters::mutable_geography_resource_id() {
  
  if (geography_resource_id_ == NULL) {
    geography_resource_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.GetBitmapParameters.geography_resource_id)
  return geography_resource_id_;
}
::mtm::Uuid* GetBitmapParameters::release_geography_resource_id() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.GetBitmapParameters.geography_resource_id)
  
  ::mtm::Uuid* temp = geography_resource_id_;
  geography_resource_id_ = NULL;
  return temp;
}
void GetBitmapParameters::set_allocated_geography_resource_id(::mtm::Uuid* geography_resource_id) {
  delete geography_resource_id_;
  geography_resource_id_ = geography_resource_id;
  if (geography_resource_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.GetBitmapParameters.geography_resource_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBitmapResponse::kBitmapDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBitmapResponse::GetBitmapResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.GetBitmapResponse)
}

void GetBitmapResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  bitmap_data_ = const_cast< ::google::protobuf::BytesValue*>(&::google::protobuf::BytesValue::default_instance());
}

GetBitmapResponse::GetBitmapResponse(const GetBitmapResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.GetBitmapResponse)
}

void GetBitmapResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  bitmap_data_ = NULL;
}

GetBitmapResponse::~GetBitmapResponse() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.GetBitmapResponse)
  SharedDtor();
}

void GetBitmapResponse::SharedDtor() {
  if (this != default_instance_) {
    delete bitmap_data_;
  }
}

void GetBitmapResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBitmapResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBitmapResponse_descriptor_;
}

const GetBitmapResponse& GetBitmapResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto();
  return *default_instance_;
}

GetBitmapResponse* GetBitmapResponse::default_instance_ = NULL;

GetBitmapResponse* GetBitmapResponse::New(::google::protobuf::Arena* arena) const {
  GetBitmapResponse* n = new GetBitmapResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBitmapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.GetBitmapResponse)
  if (GetArenaNoVirtual() == NULL && bitmap_data_ != NULL) delete bitmap_data_;
  bitmap_data_ = NULL;
}

bool GetBitmapResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.GetBitmapResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.BytesValue bitmap_data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bitmap_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.GetBitmapResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.GetBitmapResponse)
  return false;
#undef DO_
}

void GetBitmapResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.GetBitmapResponse)
  // optional .google.protobuf.BytesValue bitmap_data = 1;
  if (this->has_bitmap_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bitmap_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.geo.service.GetBitmapResponse)
}

::google::protobuf::uint8* GetBitmapResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.GetBitmapResponse)
  // optional .google.protobuf.BytesValue bitmap_data = 1;
  if (this->has_bitmap_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->bitmap_data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.GetBitmapResponse)
  return target;
}

int GetBitmapResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.GetBitmapResponse)
  int total_size = 0;

  // optional .google.protobuf.BytesValue bitmap_data = 1;
  if (this->has_bitmap_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bitmap_data_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBitmapResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.GetBitmapResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBitmapResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBitmapResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.GetBitmapResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.GetBitmapResponse)
    MergeFrom(*source);
  }
}

void GetBitmapResponse::MergeFrom(const GetBitmapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.GetBitmapResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_bitmap_data()) {
    mutable_bitmap_data()->::google::protobuf::BytesValue::MergeFrom(from.bitmap_data());
  }
}

void GetBitmapResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.GetBitmapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBitmapResponse::CopyFrom(const GetBitmapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.GetBitmapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBitmapResponse::IsInitialized() const {

  return true;
}

void GetBitmapResponse::Swap(GetBitmapResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBitmapResponse::InternalSwap(GetBitmapResponse* other) {
  std::swap(bitmap_data_, other->bitmap_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBitmapResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBitmapResponse_descriptor_;
  metadata.reflection = GetBitmapResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBitmapResponse

// optional .google.protobuf.BytesValue bitmap_data = 1;
bool GetBitmapResponse::has_bitmap_data() const {
  return !_is_default_instance_ && bitmap_data_ != NULL;
}
void GetBitmapResponse::clear_bitmap_data() {
  if (GetArenaNoVirtual() == NULL && bitmap_data_ != NULL) delete bitmap_data_;
  bitmap_data_ = NULL;
}
const ::google::protobuf::BytesValue& GetBitmapResponse::bitmap_data() const {
  // @@protoc_insertion_point(field_get:mtm.geo.service.GetBitmapResponse.bitmap_data)
  return bitmap_data_ != NULL ? *bitmap_data_ : *default_instance_->bitmap_data_;
}
::google::protobuf::BytesValue* GetBitmapResponse::mutable_bitmap_data() {
  
  if (bitmap_data_ == NULL) {
    bitmap_data_ = new ::google::protobuf::BytesValue;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.service.GetBitmapResponse.bitmap_data)
  return bitmap_data_;
}
::google::protobuf::BytesValue* GetBitmapResponse::release_bitmap_data() {
  // @@protoc_insertion_point(field_release:mtm.geo.service.GetBitmapResponse.bitmap_data)
  
  ::google::protobuf::BytesValue* temp = bitmap_data_;
  bitmap_data_ = NULL;
  return temp;
}
void GetBitmapResponse::set_allocated_bitmap_data(::google::protobuf::BytesValue* bitmap_data) {
  delete bitmap_data_;
  if (bitmap_data != NULL && bitmap_data->GetArena() != NULL) {
    ::google::protobuf::BytesValue* new_bitmap_data = new ::google::protobuf::BytesValue;
    new_bitmap_data->CopyFrom(*bitmap_data);
    bitmap_data = new_bitmap_data;
  }
  bitmap_data_ = bitmap_data;
  if (bitmap_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.service.GetBitmapResponse.bitmap_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace geo
}  // namespace mtm

// @@protoc_insertion_point(global_scope)
