// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/geo/service/geo_service.proto

#include "mtm/geo/service/geo_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BytesValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace protobuf_mtm_2fcommon_5ftypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mtm_2fcommon_5ftypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Uuid;
}  // namespace protobuf_mtm_2fcommon_5ftypes_2eproto
namespace protobuf_mtm_2fgeo_2fmodel_2fgeography_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mtm_2fgeo_2fmodel_2fgeography_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Geography;
}  // namespace protobuf_mtm_2fgeo_2fmodel_2fgeography_2eproto
namespace protobuf_mtm_2fgeo_2fmodel_2fvisual_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mtm_2fgeo_2fmodel_2fvisual_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Visual;
}  // namespace protobuf_mtm_2fgeo_2fmodel_2fvisual_2eproto
namespace mtm {
namespace geo {
namespace service {
class GeographyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GeographyResponse>
      _instance;
} _GeographyResponse_default_instance_;
class VisualResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VisualResponse>
      _instance;
} _VisualResponse_default_instance_;
class BoolResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoolResponse>
      _instance;
} _BoolResponse_default_instance_;
class AddGeographyParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddGeographyParameters>
      _instance;
} _AddGeographyParameters_default_instance_;
class RemoveGeographyParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveGeographyParameters>
      _instance;
} _RemoveGeographyParameters_default_instance_;
class RemoveGeographiesParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveGeographiesParameters>
      _instance;
} _RemoveGeographiesParameters_default_instance_;
class EditParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EditParameters>
      _instance;
} _EditParameters_default_instance_;
class CommitParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommitParameters>
      _instance;
} _CommitParameters_default_instance_;
class EditResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EditResponse>
      _instance;
} _EditResponse_default_instance_;
class GetVisualsForUserParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVisualsForUserParameters>
      _instance;
} _GetVisualsForUserParameters_default_instance_;
class AddUserVisualParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddUserVisualParameters>
      _instance;
} _AddUserVisualParameters_default_instance_;
class AddUserVisual2ParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddUserVisual2Parameters>
      _instance;
} _AddUserVisual2Parameters_default_instance_;
class RemoveUserVisualParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveUserVisualParameters>
      _instance;
} _RemoveUserVisualParameters_default_instance_;
class GetVisualParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVisualParameters>
      _instance;
} _GetVisualParameters_default_instance_;
class AddBitmapParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddBitmapParameters>
      _instance;
} _AddBitmapParameters_default_instance_;
class RollbackParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RollbackParameters>
      _instance;
} _RollbackParameters_default_instance_;
class Rollback2ParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rollback2Parameters>
      _instance;
} _Rollback2Parameters_default_instance_;
class Rollback3ParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rollback3Parameters>
      _instance;
} _Rollback3Parameters_default_instance_;
class RemoveGeographyResourceParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveGeographyResourceParameters>
      _instance;
} _RemoveGeographyResourceParameters_default_instance_;
class GetBitmapParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBitmapParameters>
      _instance;
} _GetBitmapParameters_default_instance_;
class GetBitmapResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBitmapResponse>
      _instance;
} _GetBitmapResponse_default_instance_;
}  // namespace service
}  // namespace geo
}  // namespace mtm
namespace protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto {
static void InitDefaultsGeographyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_GeographyResponse_default_instance_;
    new (ptr) ::mtm::geo::service::GeographyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::GeographyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GeographyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGeographyResponse}, {
      &protobuf_mtm_2fgeo_2fmodel_2fgeography_2eproto::scc_info_Geography.base,}};

static void InitDefaultsVisualResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_VisualResponse_default_instance_;
    new (ptr) ::mtm::geo::service::VisualResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::VisualResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VisualResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVisualResponse}, {
      &protobuf_mtm_2fgeo_2fmodel_2fvisual_2eproto::scc_info_Visual.base,}};

static void InitDefaultsBoolResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_BoolResponse_default_instance_;
    new (ptr) ::mtm::geo::service::BoolResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::BoolResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BoolResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBoolResponse}, {}};

static void InitDefaultsAddGeographyParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_AddGeographyParameters_default_instance_;
    new (ptr) ::mtm::geo::service::AddGeographyParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::AddGeographyParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AddGeographyParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAddGeographyParameters}, {
      &protobuf_mtm_2fgeo_2fmodel_2fgeography_2eproto::scc_info_Geography.base,
      &protobuf_mtm_2fgeo_2fmodel_2fvisual_2eproto::scc_info_Visual.base,}};

static void InitDefaultsRemoveGeographyParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_RemoveGeographyParameters_default_instance_;
    new (ptr) ::mtm::geo::service::RemoveGeographyParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::RemoveGeographyParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RemoveGeographyParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRemoveGeographyParameters}, {
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsRemoveGeographiesParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_RemoveGeographiesParameters_default_instance_;
    new (ptr) ::mtm::geo::service::RemoveGeographiesParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::RemoveGeographiesParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RemoveGeographiesParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRemoveGeographiesParameters}, {
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsEditParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_EditParameters_default_instance_;
    new (ptr) ::mtm::geo::service::EditParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::EditParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EditParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEditParameters}, {
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsCommitParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_CommitParameters_default_instance_;
    new (ptr) ::mtm::geo::service::CommitParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::CommitParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CommitParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCommitParameters}, {
      &protobuf_mtm_2fgeo_2fmodel_2fgeography_2eproto::scc_info_Geography.base,
      &protobuf_mtm_2fgeo_2fmodel_2fvisual_2eproto::scc_info_Visual.base,}};

static void InitDefaultsEditResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_EditResponse_default_instance_;
    new (ptr) ::mtm::geo::service::EditResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::EditResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EditResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEditResponse}, {
      &protobuf_mtm_2fgeo_2fmodel_2fgeography_2eproto::scc_info_Geography.base,
      &protobuf_mtm_2fgeo_2fmodel_2fvisual_2eproto::scc_info_Visual.base,}};

static void InitDefaultsGetVisualsForUserParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_GetVisualsForUserParameters_default_instance_;
    new (ptr) ::mtm::geo::service::GetVisualsForUserParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::GetVisualsForUserParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetVisualsForUserParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetVisualsForUserParameters}, {}};

static void InitDefaultsAddUserVisualParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_AddUserVisualParameters_default_instance_;
    new (ptr) ::mtm::geo::service::AddUserVisualParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::AddUserVisualParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddUserVisualParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddUserVisualParameters}, {
      &protobuf_mtm_2fgeo_2fmodel_2fvisual_2eproto::scc_info_Visual.base,}};

static void InitDefaultsAddUserVisual2Parameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_AddUserVisual2Parameters_default_instance_;
    new (ptr) ::mtm::geo::service::AddUserVisual2Parameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::AddUserVisual2Parameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddUserVisual2Parameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddUserVisual2Parameters}, {
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsRemoveUserVisualParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_RemoveUserVisualParameters_default_instance_;
    new (ptr) ::mtm::geo::service::RemoveUserVisualParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::RemoveUserVisualParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RemoveUserVisualParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRemoveUserVisualParameters}, {
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsGetVisualParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_GetVisualParameters_default_instance_;
    new (ptr) ::mtm::geo::service::GetVisualParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::GetVisualParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetVisualParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetVisualParameters}, {
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsAddBitmapParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_AddBitmapParameters_default_instance_;
    new (ptr) ::mtm::geo::service::AddBitmapParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::AddBitmapParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddBitmapParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddBitmapParameters}, {}};

static void InitDefaultsRollbackParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_RollbackParameters_default_instance_;
    new (ptr) ::mtm::geo::service::RollbackParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::RollbackParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RollbackParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRollbackParameters}, {
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsRollback2Parameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_Rollback2Parameters_default_instance_;
    new (ptr) ::mtm::geo::service::Rollback2Parameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::Rollback2Parameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rollback2Parameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRollback2Parameters}, {}};

static void InitDefaultsRollback3Parameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_Rollback3Parameters_default_instance_;
    new (ptr) ::mtm::geo::service::Rollback3Parameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::Rollback3Parameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Rollback3Parameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRollback3Parameters}, {
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsRemoveGeographyResourceParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_RemoveGeographyResourceParameters_default_instance_;
    new (ptr) ::mtm::geo::service::RemoveGeographyResourceParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::RemoveGeographyResourceParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RemoveGeographyResourceParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRemoveGeographyResourceParameters}, {
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsGetBitmapParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_GetBitmapParameters_default_instance_;
    new (ptr) ::mtm::geo::service::GetBitmapParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::GetBitmapParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetBitmapParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetBitmapParameters}, {
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsGetBitmapResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::geo::service::_GetBitmapResponse_default_instance_;
    new (ptr) ::mtm::geo::service::GetBitmapResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::geo::service::GetBitmapResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetBitmapResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetBitmapResponse}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BytesValue.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GeographyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VisualResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BoolResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddGeographyParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveGeographyParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveGeographiesParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EditParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommitParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EditResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVisualsForUserParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddUserVisualParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddUserVisual2Parameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveUserVisualParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVisualParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddBitmapParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RollbackParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rollback2Parameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rollback3Parameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveGeographyResourceParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBitmapParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBitmapResponse.base);
}

::google::protobuf::Metadata file_level_metadata[21];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GeographyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GeographyResponse, geography_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::VisualResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::VisualResponse, visual_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::BoolResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::BoolResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddGeographyParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddGeographyParameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddGeographyParameters, geography_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddGeographyParameters, visual_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveGeographyParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveGeographyParameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveGeographyParameters, geography_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveGeographiesParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveGeographiesParameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveGeographiesParameters, geography_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::EditParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::EditParameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::EditParameters, geography_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::CommitParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::CommitParameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::CommitParameters, geography_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::CommitParameters, visual_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::EditResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::EditResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::EditResponse, geography_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::EditResponse, visual_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GetVisualsForUserParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GetVisualsForUserParameters, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddUserVisualParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddUserVisualParameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddUserVisualParameters, visual_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddUserVisual2Parameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddUserVisual2Parameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddUserVisual2Parameters, visible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddUserVisual2Parameters, geography_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveUserVisualParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveUserVisualParameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveUserVisualParameters, visual_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GetVisualParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GetVisualParameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GetVisualParameters, visual_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddBitmapParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddBitmapParameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddBitmapParameters, bitmap_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::AddBitmapParameters, bitmap_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RollbackParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RollbackParameters, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RollbackParameters, object_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::Rollback2Parameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::Rollback2Parameters, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::Rollback3Parameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::Rollback3Parameters, object_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveGeographyResourceParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::RemoveGeographyResourceParameters, geography_resource_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GetBitmapParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GetBitmapParameters, geography_resource_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GetBitmapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::geo::service::GetBitmapResponse, bitmap_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mtm::geo::service::GeographyResponse)},
  { 6, -1, sizeof(::mtm::geo::service::VisualResponse)},
  { 12, -1, sizeof(::mtm::geo::service::BoolResponse)},
  { 18, -1, sizeof(::mtm::geo::service::AddGeographyParameters)},
  { 26, -1, sizeof(::mtm::geo::service::RemoveGeographyParameters)},
  { 33, -1, sizeof(::mtm::geo::service::RemoveGeographiesParameters)},
  { 40, -1, sizeof(::mtm::geo::service::EditParameters)},
  { 47, -1, sizeof(::mtm::geo::service::CommitParameters)},
  { 55, -1, sizeof(::mtm::geo::service::EditResponse)},
  { 63, -1, sizeof(::mtm::geo::service::GetVisualsForUserParameters)},
  { 69, -1, sizeof(::mtm::geo::service::AddUserVisualParameters)},
  { 76, -1, sizeof(::mtm::geo::service::AddUserVisual2Parameters)},
  { 84, -1, sizeof(::mtm::geo::service::RemoveUserVisualParameters)},
  { 91, -1, sizeof(::mtm::geo::service::GetVisualParameters)},
  { 98, -1, sizeof(::mtm::geo::service::AddBitmapParameters)},
  { 106, -1, sizeof(::mtm::geo::service::RollbackParameters)},
  { 113, -1, sizeof(::mtm::geo::service::Rollback2Parameters)},
  { 119, -1, sizeof(::mtm::geo::service::Rollback3Parameters)},
  { 125, -1, sizeof(::mtm::geo::service::RemoveGeographyResourceParameters)},
  { 131, -1, sizeof(::mtm::geo::service::GetBitmapParameters)},
  { 137, -1, sizeof(::mtm::geo::service::GetBitmapResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_GeographyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_VisualResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_BoolResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_AddGeographyParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_RemoveGeographyParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_RemoveGeographiesParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_EditParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_CommitParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_EditResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_GetVisualsForUserParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_AddUserVisualParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_AddUserVisual2Parameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_RemoveUserVisualParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_GetVisualParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_AddBitmapParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_RollbackParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_Rollback2Parameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_Rollback3Parameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_RemoveGeographyResourceParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_GetBitmapParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::geo::service::_GetBitmapResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mtm/geo/service/geo_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!mtm/geo/service/geo_service.proto\022\017mtm"
      ".geo.service\032\033google/protobuf/empty.prot"
      "o\032\036google/protobuf/wrappers.proto\032\026mtm/c"
      "ommon_types.proto\032\"mtm/geo/messages/geo_"
      "message.proto\032\035mtm/geo/model/geography.p"
      "roto\032\032mtm/geo/model/visual.proto\032&mtm/ge"
      "o/model/geography_resource.proto\"@\n\021Geog"
      "raphyResponse\022+\n\tgeography\030\001 \001(\0132\030.mtm.g"
      "eo.model.Geography\"7\n\016VisualResponse\022%\n\006"
      "visual\030\001 \001(\0132\025.mtm.geo.model.Visual\"\036\n\014B"
      "oolResponse\022\016\n\006result\030\001 \001(\010\"}\n\026AddGeogra"
      "phyParameters\022\017\n\007user_id\030\001 \001(\r\022+\n\tgeogra"
      "phy\030\002 \001(\0132\030.mtm.geo.model.Geography\022%\n\006v"
      "isual\030\003 \001(\0132\025.mtm.geo.model.Visual\"M\n\031Re"
      "moveGeographyParameters\022\017\n\007user_id\030\001 \001(\r"
      "\022\037\n\014geography_id\030\002 \001(\0132\t.mtm.Uuid\"P\n\033Rem"
      "oveGeographiesParameters\022\017\n\007user_id\030\001 \001("
      "\r\022 \n\rgeography_ids\030\002 \003(\0132\t.mtm.Uuid\"B\n\016E"
      "ditParameters\022\017\n\007user_id\030\001 \001(\r\022\037\n\014geogra"
      "phy_id\030\002 \001(\0132\t.mtm.Uuid\"w\n\020CommitParamet"
      "ers\022\017\n\007user_id\030\001 \001(\r\022+\n\tgeography\030\002 \001(\0132"
      "\030.mtm.geo.model.Geography\022%\n\006visual\030\003 \001("
      "\0132\025.mtm.geo.model.Visual\"r\n\014EditResponse"
      "\022\016\n\006result\030\001 \001(\010\022+\n\tgeography\030\002 \001(\0132\030.mt"
      "m.geo.model.Geography\022%\n\006visual\030\003 \001(\0132\025."
      "mtm.geo.model.Visual\".\n\033GetVisualsForUse"
      "rParameters\022\017\n\007user_id\030\001 \001(\r\"Q\n\027AddUserV"
      "isualParameters\022\017\n\007user_id\030\001 \001(\r\022%\n\006visu"
      "al\030\002 \001(\0132\025.mtm.geo.model.Visual\"^\n\030AddUs"
      "erVisual2Parameters\022\017\n\007user_id\030\001 \001(\r\022\017\n\007"
      "visible\030\002 \001(\010\022 \n\rgeography_ids\030\003 \003(\0132\t.m"
      "tm.Uuid\"K\n\032RemoveUserVisualParameters\022\017\n"
      "\007user_id\030\001 \001(\r\022\034\n\tvisual_id\030\002 \001(\0132\t.mtm."
      "Uuid\"D\n\023GetVisualParameters\022\017\n\007user_id\030\001"
      " \001(\r\022\034\n\tvisual_id\030\002 \001(\0132\t.mtm.Uuid\"P\n\023Ad"
      "dBitmapParameters\022\017\n\007user_id\030\001 \001(\r\022\023\n\013bi"
      "tmap_name\030\002 \001(\t\022\023\n\013bitmap_data\030\003 \001(\014\"C\n\022"
      "RollbackParameters\022\017\n\007user_id\030\001 \001(\r\022\034\n\to"
      "bject_id\030\002 \001(\0132\t.mtm.Uuid\"&\n\023Rollback2Pa"
      "rameters\022\017\n\007user_id\030\001 \001(\r\"3\n\023Rollback3Pa"
      "rameters\022\034\n\tobject_id\030\001 \001(\0132\t.mtm.Uuid\"M"
      "\n!RemoveGeographyResourceParameters\022(\n\025g"
      "eography_resource_id\030\001 \001(\0132\t.mtm.Uuid\"\?\n"
      "\023GetBitmapParameters\022(\n\025geography_resour"
      "ce_id\030\001 \001(\0132\t.mtm.Uuid\"E\n\021GetBitmapRespo"
      "nse\0220\n\013bitmap_data\030\001 \001(\0132\033.google.protob"
      "uf.BytesValue2\215\016\n\nGeoService\022E\n\tSubscrib"
      "e\022\026.google.protobuf.Empty\032\034.mtm.geo.mess"
      "ages.GeoMessage\"\0000\001\022H\n\016GetGeographies\022\026."
      "google.protobuf.Empty\032\034.mtm.geo.model.Ge"
      "ographyList\"\000\022\?\n\014GetGeography\022\t.mtm.Uuid"
      "\032\".mtm.geo.service.GeographyResponse\"\000\022D"
      "\n\014AddGeography\022\'.mtm.geo.service.AddGeog"
      "raphyParameters\032\t.mtm.Uuid\"\000\022^\n\017RemoveGe"
      "ography\022*.mtm.geo.service.RemoveGeograph"
      "yParameters\032\035.mtm.geo.service.BoolRespon"
      "se\"\000\022b\n\021RemoveGeographies\022,.mtm.geo.serv"
      "ice.RemoveGeographiesParameters\032\035.mtm.ge"
      "o.service.BoolResponse\"\000\022H\n\004Edit\022\037.mtm.g"
      "eo.service.EditParameters\032\035.mtm.geo.serv"
      "ice.EditResponse\"\000\022E\n\006Commit\022!.mtm.geo.s"
      "ervice.CommitParameters\032\026.google.protobu"
      "f.Empty\"\000\022I\n\010Rollback\022#.mtm.geo.service."
      "RollbackParameters\032\026.google.protobuf.Emp"
      "ty\"\000\022K\n\tRollback2\022$.mtm.geo.service.Roll"
      "back2Parameters\032\026.google.protobuf.Empty\""
      "\000\022K\n\tRollback3\022$.mtm.geo.service.Rollbac"
      "k3Parameters\032\026.google.protobuf.Empty\"\000\022\?"
      "\n\nGetVisuals\022\026.google.protobuf.Empty\032\031.m"
      "tm.geo.model.VisualList\022^\n\021GetVisualsFor"
      "User\022,.mtm.geo.service.GetVisualsForUser"
      "Parameters\032\031.mtm.geo.model.VisualList\"\000\022"
      "Z\n\rAddUserVisual\022(.mtm.geo.service.AddUs"
      "erVisualParameters\032\035.mtm.geo.service.Boo"
      "lResponse\"\000\022\\\n\016AddUserVisual2\022).mtm.geo."
      "service.AddUserVisual2Parameters\032\035.mtm.g"
      "eo.service.BoolResponse\"\000\022`\n\020RemoveUserV"
      "isual\022+.mtm.geo.service.RemoveUserVisual"
      "Parameters\032\035.mtm.geo.service.BoolRespons"
      "e\"\000\022T\n\tGetVisual\022$.mtm.geo.service.GetVi"
      "sualParameters\032\037.mtm.geo.service.VisualR"
      "esponse\"\000\022>\n\tAddBitmap\022$.mtm.geo.service"
      ".AddBitmapParameters\032\t.mtm.Uuid\"\000\022W\n\tGet"
      "Bitmap\022$.mtm.geo.service.GetBitmapParame"
      "ters\032\".mtm.geo.service.GetBitmapResponse"
      "\"\000\022W\n\025GetGeographyResources\022\026.google.pro"
      "tobuf.Empty\032$.mtm.geo.model.GeographyRes"
      "ourceList\"\000\022n\n\027RemoveGeographyResource\0222"
      ".mtm.geo.service.RemoveGeographyResource"
      "Parameters\032\035.mtm.geo.service.BoolRespons"
      "e\"\000\0228\n\004Ping\022\026.google.protobuf.Empty\032\026.go"
      "ogle.protobuf.Empty\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3669);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mtm/geo/service/geo_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::protobuf_mtm_2fcommon_5ftypes_2eproto::AddDescriptors();
  ::protobuf_mtm_2fgeo_2fmessages_2fgeo_5fmessage_2eproto::AddDescriptors();
  ::protobuf_mtm_2fgeo_2fmodel_2fgeography_2eproto::AddDescriptors();
  ::protobuf_mtm_2fgeo_2fmodel_2fvisual_2eproto::AddDescriptors();
  ::protobuf_mtm_2fgeo_2fmodel_2fgeography_5fresource_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto
namespace mtm {
namespace geo {
namespace service {

// ===================================================================

void GeographyResponse::InitAsDefaultInstance() {
  ::mtm::geo::service::_GeographyResponse_default_instance_._instance.get_mutable()->geography_ = const_cast< ::mtm::geo::model::Geography*>(
      ::mtm::geo::model::Geography::internal_default_instance());
}
void GeographyResponse::clear_geography() {
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) {
    delete geography_;
  }
  geography_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GeographyResponse::kGeographyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeographyResponse::GeographyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_GeographyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.GeographyResponse)
}
GeographyResponse::GeographyResponse(const GeographyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geography()) {
    geography_ = new ::mtm::geo::model::Geography(*from.geography_);
  } else {
    geography_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.GeographyResponse)
}

void GeographyResponse::SharedCtor() {
  geography_ = NULL;
}

GeographyResponse::~GeographyResponse() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.GeographyResponse)
  SharedDtor();
}

void GeographyResponse::SharedDtor() {
  if (this != internal_default_instance()) delete geography_;
}

void GeographyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GeographyResponse::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GeographyResponse& GeographyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_GeographyResponse.base);
  return *internal_default_instance();
}


void GeographyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.GeographyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && geography_ != NULL) {
    delete geography_;
  }
  geography_ = NULL;
  _internal_metadata_.Clear();
}

bool GeographyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.GeographyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mtm.geo.model.Geography geography = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geography()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.GeographyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.GeographyResponse)
  return false;
#undef DO_
}

void GeographyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.GeographyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mtm.geo.model.Geography geography = 1;
  if (this->has_geography()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_geography(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.GeographyResponse)
}

::google::protobuf::uint8* GeographyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.GeographyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mtm.geo.model.Geography geography = 1;
  if (this->has_geography()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_geography(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.GeographyResponse)
  return target;
}

size_t GeographyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.GeographyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.geo.model.Geography geography = 1;
  if (this->has_geography()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geography_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GeographyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.GeographyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GeographyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GeographyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.GeographyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.GeographyResponse)
    MergeFrom(*source);
  }
}

void GeographyResponse::MergeFrom(const GeographyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.GeographyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geography()) {
    mutable_geography()->::mtm::geo::model::Geography::MergeFrom(from.geography());
  }
}

void GeographyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.GeographyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeographyResponse::CopyFrom(const GeographyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.GeographyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeographyResponse::IsInitialized() const {
  return true;
}

void GeographyResponse::Swap(GeographyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeographyResponse::InternalSwap(GeographyResponse* other) {
  using std::swap;
  swap(geography_, other->geography_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GeographyResponse::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VisualResponse::InitAsDefaultInstance() {
  ::mtm::geo::service::_VisualResponse_default_instance_._instance.get_mutable()->visual_ = const_cast< ::mtm::geo::model::Visual*>(
      ::mtm::geo::model::Visual::internal_default_instance());
}
void VisualResponse::clear_visual() {
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) {
    delete visual_;
  }
  visual_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VisualResponse::kVisualFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VisualResponse::VisualResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_VisualResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.VisualResponse)
}
VisualResponse::VisualResponse(const VisualResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_visual()) {
    visual_ = new ::mtm::geo::model::Visual(*from.visual_);
  } else {
    visual_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.VisualResponse)
}

void VisualResponse::SharedCtor() {
  visual_ = NULL;
}

VisualResponse::~VisualResponse() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.VisualResponse)
  SharedDtor();
}

void VisualResponse::SharedDtor() {
  if (this != internal_default_instance()) delete visual_;
}

void VisualResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VisualResponse::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VisualResponse& VisualResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_VisualResponse.base);
  return *internal_default_instance();
}


void VisualResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.VisualResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && visual_ != NULL) {
    delete visual_;
  }
  visual_ = NULL;
  _internal_metadata_.Clear();
}

bool VisualResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.VisualResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mtm.geo.model.Visual visual = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_visual()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.VisualResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.VisualResponse)
  return false;
#undef DO_
}

void VisualResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.VisualResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mtm.geo.model.Visual visual = 1;
  if (this->has_visual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_visual(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.VisualResponse)
}

::google::protobuf::uint8* VisualResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.VisualResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mtm.geo.model.Visual visual = 1;
  if (this->has_visual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_visual(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.VisualResponse)
  return target;
}

size_t VisualResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.VisualResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.geo.model.Visual visual = 1;
  if (this->has_visual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *visual_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VisualResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.VisualResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VisualResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VisualResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.VisualResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.VisualResponse)
    MergeFrom(*source);
  }
}

void VisualResponse::MergeFrom(const VisualResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.VisualResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_visual()) {
    mutable_visual()->::mtm::geo::model::Visual::MergeFrom(from.visual());
  }
}

void VisualResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.VisualResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisualResponse::CopyFrom(const VisualResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.VisualResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisualResponse::IsInitialized() const {
  return true;
}

void VisualResponse::Swap(VisualResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VisualResponse::InternalSwap(VisualResponse* other) {
  using std::swap;
  swap(visual_, other->visual_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VisualResponse::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoolResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoolResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoolResponse::BoolResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_BoolResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.BoolResponse)
}
BoolResponse::BoolResponse(const BoolResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.BoolResponse)
}

void BoolResponse::SharedCtor() {
  result_ = false;
}

BoolResponse::~BoolResponse() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.BoolResponse)
  SharedDtor();
}

void BoolResponse::SharedDtor() {
}

void BoolResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BoolResponse::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoolResponse& BoolResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_BoolResponse.base);
  return *internal_default_instance();
}


void BoolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.BoolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear();
}

bool BoolResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.BoolResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.BoolResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.BoolResponse)
  return false;
#undef DO_
}

void BoolResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.BoolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.BoolResponse)
}

::google::protobuf::uint8* BoolResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.BoolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.BoolResponse)
  return target;
}

size_t BoolResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.BoolResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoolResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.BoolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BoolResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoolResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.BoolResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.BoolResponse)
    MergeFrom(*source);
  }
}

void BoolResponse::MergeFrom(const BoolResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.BoolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void BoolResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.BoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoolResponse::CopyFrom(const BoolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.BoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoolResponse::IsInitialized() const {
  return true;
}

void BoolResponse::Swap(BoolResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoolResponse::InternalSwap(BoolResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BoolResponse::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddGeographyParameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_AddGeographyParameters_default_instance_._instance.get_mutable()->geography_ = const_cast< ::mtm::geo::model::Geography*>(
      ::mtm::geo::model::Geography::internal_default_instance());
  ::mtm::geo::service::_AddGeographyParameters_default_instance_._instance.get_mutable()->visual_ = const_cast< ::mtm::geo::model::Visual*>(
      ::mtm::geo::model::Visual::internal_default_instance());
}
void AddGeographyParameters::clear_geography() {
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) {
    delete geography_;
  }
  geography_ = NULL;
}
void AddGeographyParameters::clear_visual() {
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) {
    delete visual_;
  }
  visual_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddGeographyParameters::kUserIdFieldNumber;
const int AddGeographyParameters::kGeographyFieldNumber;
const int AddGeographyParameters::kVisualFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddGeographyParameters::AddGeographyParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_AddGeographyParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.AddGeographyParameters)
}
AddGeographyParameters::AddGeographyParameters(const AddGeographyParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geography()) {
    geography_ = new ::mtm::geo::model::Geography(*from.geography_);
  } else {
    geography_ = NULL;
  }
  if (from.has_visual()) {
    visual_ = new ::mtm::geo::model::Visual(*from.visual_);
  } else {
    visual_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.AddGeographyParameters)
}

void AddGeographyParameters::SharedCtor() {
  ::memset(&geography_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&geography_)) + sizeof(user_id_));
}

AddGeographyParameters::~AddGeographyParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.AddGeographyParameters)
  SharedDtor();
}

void AddGeographyParameters::SharedDtor() {
  if (this != internal_default_instance()) delete geography_;
  if (this != internal_default_instance()) delete visual_;
}

void AddGeographyParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddGeographyParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddGeographyParameters& AddGeographyParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_AddGeographyParameters.base);
  return *internal_default_instance();
}


void AddGeographyParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.AddGeographyParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && geography_ != NULL) {
    delete geography_;
  }
  geography_ = NULL;
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) {
    delete visual_;
  }
  visual_ = NULL;
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AddGeographyParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.AddGeographyParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.geo.model.Geography geography = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geography()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.geo.model.Visual visual = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_visual()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.AddGeographyParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.AddGeographyParameters)
  return false;
#undef DO_
}

void AddGeographyParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.AddGeographyParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_geography(), output);
  }

  // .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_visual(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.AddGeographyParameters)
}

::google::protobuf::uint8* AddGeographyParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.AddGeographyParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_geography(), deterministic, target);
  }

  // .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_visual(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.AddGeographyParameters)
  return target;
}

size_t AddGeographyParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.AddGeographyParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geography_);
  }

  // .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *visual_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGeographyParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.AddGeographyParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGeographyParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddGeographyParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.AddGeographyParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.AddGeographyParameters)
    MergeFrom(*source);
  }
}

void AddGeographyParameters::MergeFrom(const AddGeographyParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.AddGeographyParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geography()) {
    mutable_geography()->::mtm::geo::model::Geography::MergeFrom(from.geography());
  }
  if (from.has_visual()) {
    mutable_visual()->::mtm::geo::model::Visual::MergeFrom(from.visual());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void AddGeographyParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.AddGeographyParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGeographyParameters::CopyFrom(const AddGeographyParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.AddGeographyParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGeographyParameters::IsInitialized() const {
  return true;
}

void AddGeographyParameters::Swap(AddGeographyParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddGeographyParameters::InternalSwap(AddGeographyParameters* other) {
  using std::swap;
  swap(geography_, other->geography_);
  swap(visual_, other->visual_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddGeographyParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveGeographyParameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_RemoveGeographyParameters_default_instance_._instance.get_mutable()->geography_id_ = const_cast< ::mtm::Uuid*>(
      ::mtm::Uuid::internal_default_instance());
}
void RemoveGeographyParameters::clear_geography_id() {
  if (GetArenaNoVirtual() == NULL && geography_id_ != NULL) {
    delete geography_id_;
  }
  geography_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveGeographyParameters::kUserIdFieldNumber;
const int RemoveGeographyParameters::kGeographyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveGeographyParameters::RemoveGeographyParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_RemoveGeographyParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.RemoveGeographyParameters)
}
RemoveGeographyParameters::RemoveGeographyParameters(const RemoveGeographyParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geography_id()) {
    geography_id_ = new ::mtm::Uuid(*from.geography_id_);
  } else {
    geography_id_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.RemoveGeographyParameters)
}

void RemoveGeographyParameters::SharedCtor() {
  ::memset(&geography_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&geography_id_)) + sizeof(user_id_));
}

RemoveGeographyParameters::~RemoveGeographyParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.RemoveGeographyParameters)
  SharedDtor();
}

void RemoveGeographyParameters::SharedDtor() {
  if (this != internal_default_instance()) delete geography_id_;
}

void RemoveGeographyParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveGeographyParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveGeographyParameters& RemoveGeographyParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_RemoveGeographyParameters.base);
  return *internal_default_instance();
}


void RemoveGeographyParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.RemoveGeographyParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && geography_id_ != NULL) {
    delete geography_id_;
  }
  geography_id_ = NULL;
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool RemoveGeographyParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.RemoveGeographyParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.Uuid geography_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geography_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.RemoveGeographyParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.RemoveGeographyParameters)
  return false;
#undef DO_
}

void RemoveGeographyParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.RemoveGeographyParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_geography_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.RemoveGeographyParameters)
}

::google::protobuf::uint8* RemoveGeographyParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.RemoveGeographyParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_geography_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.RemoveGeographyParameters)
  return target;
}

size_t RemoveGeographyParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.RemoveGeographyParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geography_id_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGeographyParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.RemoveGeographyParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGeographyParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveGeographyParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.RemoveGeographyParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.RemoveGeographyParameters)
    MergeFrom(*source);
  }
}

void RemoveGeographyParameters::MergeFrom(const RemoveGeographyParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.RemoveGeographyParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geography_id()) {
    mutable_geography_id()->::mtm::Uuid::MergeFrom(from.geography_id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void RemoveGeographyParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.RemoveGeographyParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGeographyParameters::CopyFrom(const RemoveGeographyParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.RemoveGeographyParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGeographyParameters::IsInitialized() const {
  return true;
}

void RemoveGeographyParameters::Swap(RemoveGeographyParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveGeographyParameters::InternalSwap(RemoveGeographyParameters* other) {
  using std::swap;
  swap(geography_id_, other->geography_id_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveGeographyParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveGeographiesParameters::InitAsDefaultInstance() {
}
void RemoveGeographiesParameters::clear_geography_ids() {
  geography_ids_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveGeographiesParameters::kUserIdFieldNumber;
const int RemoveGeographiesParameters::kGeographyIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveGeographiesParameters::RemoveGeographiesParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_RemoveGeographiesParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.RemoveGeographiesParameters)
}
RemoveGeographiesParameters::RemoveGeographiesParameters(const RemoveGeographiesParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      geography_ids_(from.geography_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.RemoveGeographiesParameters)
}

void RemoveGeographiesParameters::SharedCtor() {
  user_id_ = 0u;
}

RemoveGeographiesParameters::~RemoveGeographiesParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.RemoveGeographiesParameters)
  SharedDtor();
}

void RemoveGeographiesParameters::SharedDtor() {
}

void RemoveGeographiesParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveGeographiesParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveGeographiesParameters& RemoveGeographiesParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_RemoveGeographiesParameters.base);
  return *internal_default_instance();
}


void RemoveGeographiesParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.RemoveGeographiesParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  geography_ids_.Clear();
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool RemoveGeographiesParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.RemoveGeographiesParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mtm.Uuid geography_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_geography_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.RemoveGeographiesParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.RemoveGeographiesParameters)
  return false;
#undef DO_
}

void RemoveGeographiesParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.RemoveGeographiesParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated .mtm.Uuid geography_ids = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->geography_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->geography_ids(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.RemoveGeographiesParameters)
}

::google::protobuf::uint8* RemoveGeographiesParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.RemoveGeographiesParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // repeated .mtm.Uuid geography_ids = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->geography_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->geography_ids(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.RemoveGeographiesParameters)
  return target;
}

size_t RemoveGeographiesParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.RemoveGeographiesParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mtm.Uuid geography_ids = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->geography_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->geography_ids(static_cast<int>(i)));
    }
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGeographiesParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.RemoveGeographiesParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGeographiesParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveGeographiesParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.RemoveGeographiesParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.RemoveGeographiesParameters)
    MergeFrom(*source);
  }
}

void RemoveGeographiesParameters::MergeFrom(const RemoveGeographiesParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.RemoveGeographiesParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  geography_ids_.MergeFrom(from.geography_ids_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void RemoveGeographiesParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.RemoveGeographiesParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGeographiesParameters::CopyFrom(const RemoveGeographiesParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.RemoveGeographiesParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGeographiesParameters::IsInitialized() const {
  return true;
}

void RemoveGeographiesParameters::Swap(RemoveGeographiesParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveGeographiesParameters::InternalSwap(RemoveGeographiesParameters* other) {
  using std::swap;
  CastToBase(&geography_ids_)->InternalSwap(CastToBase(&other->geography_ids_));
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveGeographiesParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EditParameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_EditParameters_default_instance_._instance.get_mutable()->geography_id_ = const_cast< ::mtm::Uuid*>(
      ::mtm::Uuid::internal_default_instance());
}
void EditParameters::clear_geography_id() {
  if (GetArenaNoVirtual() == NULL && geography_id_ != NULL) {
    delete geography_id_;
  }
  geography_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditParameters::kUserIdFieldNumber;
const int EditParameters::kGeographyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditParameters::EditParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_EditParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.EditParameters)
}
EditParameters::EditParameters(const EditParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geography_id()) {
    geography_id_ = new ::mtm::Uuid(*from.geography_id_);
  } else {
    geography_id_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.EditParameters)
}

void EditParameters::SharedCtor() {
  ::memset(&geography_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&geography_id_)) + sizeof(user_id_));
}

EditParameters::~EditParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.EditParameters)
  SharedDtor();
}

void EditParameters::SharedDtor() {
  if (this != internal_default_instance()) delete geography_id_;
}

void EditParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EditParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EditParameters& EditParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_EditParameters.base);
  return *internal_default_instance();
}


void EditParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.EditParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && geography_id_ != NULL) {
    delete geography_id_;
  }
  geography_id_ = NULL;
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool EditParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.EditParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.Uuid geography_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geography_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.EditParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.EditParameters)
  return false;
#undef DO_
}

void EditParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.EditParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_geography_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.EditParameters)
}

::google::protobuf::uint8* EditParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.EditParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_geography_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.EditParameters)
  return target;
}

size_t EditParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.EditParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.Uuid geography_id = 2;
  if (this->has_geography_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geography_id_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EditParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.EditParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const EditParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EditParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.EditParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.EditParameters)
    MergeFrom(*source);
  }
}

void EditParameters::MergeFrom(const EditParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.EditParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geography_id()) {
    mutable_geography_id()->::mtm::Uuid::MergeFrom(from.geography_id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void EditParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.EditParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditParameters::CopyFrom(const EditParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.EditParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditParameters::IsInitialized() const {
  return true;
}

void EditParameters::Swap(EditParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditParameters::InternalSwap(EditParameters* other) {
  using std::swap;
  swap(geography_id_, other->geography_id_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EditParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommitParameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_CommitParameters_default_instance_._instance.get_mutable()->geography_ = const_cast< ::mtm::geo::model::Geography*>(
      ::mtm::geo::model::Geography::internal_default_instance());
  ::mtm::geo::service::_CommitParameters_default_instance_._instance.get_mutable()->visual_ = const_cast< ::mtm::geo::model::Visual*>(
      ::mtm::geo::model::Visual::internal_default_instance());
}
void CommitParameters::clear_geography() {
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) {
    delete geography_;
  }
  geography_ = NULL;
}
void CommitParameters::clear_visual() {
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) {
    delete visual_;
  }
  visual_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitParameters::kUserIdFieldNumber;
const int CommitParameters::kGeographyFieldNumber;
const int CommitParameters::kVisualFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitParameters::CommitParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_CommitParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.CommitParameters)
}
CommitParameters::CommitParameters(const CommitParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geography()) {
    geography_ = new ::mtm::geo::model::Geography(*from.geography_);
  } else {
    geography_ = NULL;
  }
  if (from.has_visual()) {
    visual_ = new ::mtm::geo::model::Visual(*from.visual_);
  } else {
    visual_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.CommitParameters)
}

void CommitParameters::SharedCtor() {
  ::memset(&geography_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&geography_)) + sizeof(user_id_));
}

CommitParameters::~CommitParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.CommitParameters)
  SharedDtor();
}

void CommitParameters::SharedDtor() {
  if (this != internal_default_instance()) delete geography_;
  if (this != internal_default_instance()) delete visual_;
}

void CommitParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommitParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommitParameters& CommitParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_CommitParameters.base);
  return *internal_default_instance();
}


void CommitParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.CommitParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && geography_ != NULL) {
    delete geography_;
  }
  geography_ = NULL;
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) {
    delete visual_;
  }
  visual_ = NULL;
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool CommitParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.CommitParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.geo.model.Geography geography = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geography()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.geo.model.Visual visual = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_visual()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.CommitParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.CommitParameters)
  return false;
#undef DO_
}

void CommitParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.CommitParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_geography(), output);
  }

  // .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_visual(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.CommitParameters)
}

::google::protobuf::uint8* CommitParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.CommitParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_geography(), deterministic, target);
  }

  // .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_visual(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.CommitParameters)
  return target;
}

size_t CommitParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.CommitParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geography_);
  }

  // .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *visual_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommitParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.CommitParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const CommitParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommitParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.CommitParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.CommitParameters)
    MergeFrom(*source);
  }
}

void CommitParameters::MergeFrom(const CommitParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.CommitParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geography()) {
    mutable_geography()->::mtm::geo::model::Geography::MergeFrom(from.geography());
  }
  if (from.has_visual()) {
    mutable_visual()->::mtm::geo::model::Visual::MergeFrom(from.visual());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void CommitParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.CommitParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitParameters::CopyFrom(const CommitParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.CommitParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitParameters::IsInitialized() const {
  return true;
}

void CommitParameters::Swap(CommitParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitParameters::InternalSwap(CommitParameters* other) {
  using std::swap;
  swap(geography_, other->geography_);
  swap(visual_, other->visual_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommitParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EditResponse::InitAsDefaultInstance() {
  ::mtm::geo::service::_EditResponse_default_instance_._instance.get_mutable()->geography_ = const_cast< ::mtm::geo::model::Geography*>(
      ::mtm::geo::model::Geography::internal_default_instance());
  ::mtm::geo::service::_EditResponse_default_instance_._instance.get_mutable()->visual_ = const_cast< ::mtm::geo::model::Visual*>(
      ::mtm::geo::model::Visual::internal_default_instance());
}
void EditResponse::clear_geography() {
  if (GetArenaNoVirtual() == NULL && geography_ != NULL) {
    delete geography_;
  }
  geography_ = NULL;
}
void EditResponse::clear_visual() {
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) {
    delete visual_;
  }
  visual_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditResponse::kResultFieldNumber;
const int EditResponse::kGeographyFieldNumber;
const int EditResponse::kVisualFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditResponse::EditResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_EditResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.EditResponse)
}
EditResponse::EditResponse(const EditResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geography()) {
    geography_ = new ::mtm::geo::model::Geography(*from.geography_);
  } else {
    geography_ = NULL;
  }
  if (from.has_visual()) {
    visual_ = new ::mtm::geo::model::Visual(*from.visual_);
  } else {
    visual_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.EditResponse)
}

void EditResponse::SharedCtor() {
  ::memset(&geography_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&geography_)) + sizeof(result_));
}

EditResponse::~EditResponse() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.EditResponse)
  SharedDtor();
}

void EditResponse::SharedDtor() {
  if (this != internal_default_instance()) delete geography_;
  if (this != internal_default_instance()) delete visual_;
}

void EditResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EditResponse::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EditResponse& EditResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_EditResponse.base);
  return *internal_default_instance();
}


void EditResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.EditResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && geography_ != NULL) {
    delete geography_;
  }
  geography_ = NULL;
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) {
    delete visual_;
  }
  visual_ = NULL;
  result_ = false;
  _internal_metadata_.Clear();
}

bool EditResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.EditResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.geo.model.Geography geography = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geography()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.geo.model.Visual visual = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_visual()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.EditResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.EditResponse)
  return false;
#undef DO_
}

void EditResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.EditResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_geography(), output);
  }

  // .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_visual(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.EditResponse)
}

::google::protobuf::uint8* EditResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.EditResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_geography(), deterministic, target);
  }

  // .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_visual(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.EditResponse)
  return target;
}

size_t EditResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.EditResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.geo.model.Geography geography = 2;
  if (this->has_geography()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geography_);
  }

  // .mtm.geo.model.Visual visual = 3;
  if (this->has_visual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *visual_);
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EditResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.EditResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EditResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EditResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.EditResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.EditResponse)
    MergeFrom(*source);
  }
}

void EditResponse::MergeFrom(const EditResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.EditResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geography()) {
    mutable_geography()->::mtm::geo::model::Geography::MergeFrom(from.geography());
  }
  if (from.has_visual()) {
    mutable_visual()->::mtm::geo::model::Visual::MergeFrom(from.visual());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void EditResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.EditResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditResponse::CopyFrom(const EditResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.EditResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditResponse::IsInitialized() const {
  return true;
}

void EditResponse::Swap(EditResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditResponse::InternalSwap(EditResponse* other) {
  using std::swap;
  swap(geography_, other->geography_);
  swap(visual_, other->visual_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EditResponse::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVisualsForUserParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVisualsForUserParameters::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVisualsForUserParameters::GetVisualsForUserParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_GetVisualsForUserParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.GetVisualsForUserParameters)
}
GetVisualsForUserParameters::GetVisualsForUserParameters(const GetVisualsForUserParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.GetVisualsForUserParameters)
}

void GetVisualsForUserParameters::SharedCtor() {
  user_id_ = 0u;
}

GetVisualsForUserParameters::~GetVisualsForUserParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.GetVisualsForUserParameters)
  SharedDtor();
}

void GetVisualsForUserParameters::SharedDtor() {
}

void GetVisualsForUserParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVisualsForUserParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVisualsForUserParameters& GetVisualsForUserParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_GetVisualsForUserParameters.base);
  return *internal_default_instance();
}


void GetVisualsForUserParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.GetVisualsForUserParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetVisualsForUserParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.GetVisualsForUserParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.GetVisualsForUserParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.GetVisualsForUserParameters)
  return false;
#undef DO_
}

void GetVisualsForUserParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.GetVisualsForUserParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.GetVisualsForUserParameters)
}

::google::protobuf::uint8* GetVisualsForUserParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.GetVisualsForUserParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.GetVisualsForUserParameters)
  return target;
}

size_t GetVisualsForUserParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.GetVisualsForUserParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVisualsForUserParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.GetVisualsForUserParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVisualsForUserParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVisualsForUserParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.GetVisualsForUserParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.GetVisualsForUserParameters)
    MergeFrom(*source);
  }
}

void GetVisualsForUserParameters::MergeFrom(const GetVisualsForUserParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.GetVisualsForUserParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GetVisualsForUserParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.GetVisualsForUserParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVisualsForUserParameters::CopyFrom(const GetVisualsForUserParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.GetVisualsForUserParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVisualsForUserParameters::IsInitialized() const {
  return true;
}

void GetVisualsForUserParameters::Swap(GetVisualsForUserParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVisualsForUserParameters::InternalSwap(GetVisualsForUserParameters* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVisualsForUserParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddUserVisualParameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_AddUserVisualParameters_default_instance_._instance.get_mutable()->visual_ = const_cast< ::mtm::geo::model::Visual*>(
      ::mtm::geo::model::Visual::internal_default_instance());
}
void AddUserVisualParameters::clear_visual() {
  if (GetArenaNoVirtual() == NULL && visual_ != NULL) {
    delete visual_;
  }
  visual_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddUserVisualParameters::kUserIdFieldNumber;
const int AddUserVisualParameters::kVisualFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUserVisualParameters::AddUserVisualParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_AddUserVisualParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.AddUserVisualParameters)
}
AddUserVisualParameters::AddUserVisualParameters(const AddUserVisualParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_visual()) {
    visual_ = new ::mtm::geo::model::Visual(*from.visual_);
  } else {
    visual_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.AddUserVisualParameters)
}

void AddUserVisualParameters::SharedCtor() {
  ::memset(&visual_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&visual_)) + sizeof(user_id_));
}

AddUserVisualParameters::~AddUserVisualParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.AddUserVisualParameters)
  SharedDtor();
}

void AddUserVisualParameters::SharedDtor() {
  if (this != internal_default_instance()) delete visual_;
}

void AddUserVisualParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddUserVisualParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddUserVisualParameters& AddUserVisualParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_AddUserVisualParameters.base);
  return *internal_default_instance();
}


void AddUserVisualParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.AddUserVisualParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && visual_ != NULL) {
    delete visual_;
  }
  visual_ = NULL;
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AddUserVisualParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.AddUserVisualParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.geo.model.Visual visual = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_visual()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.AddUserVisualParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.AddUserVisualParameters)
  return false;
#undef DO_
}

void AddUserVisualParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.AddUserVisualParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .mtm.geo.model.Visual visual = 2;
  if (this->has_visual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_visual(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.AddUserVisualParameters)
}

::google::protobuf::uint8* AddUserVisualParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.AddUserVisualParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .mtm.geo.model.Visual visual = 2;
  if (this->has_visual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_visual(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.AddUserVisualParameters)
  return target;
}

size_t AddUserVisualParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.AddUserVisualParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.geo.model.Visual visual = 2;
  if (this->has_visual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *visual_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddUserVisualParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.AddUserVisualParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AddUserVisualParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUserVisualParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.AddUserVisualParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.AddUserVisualParameters)
    MergeFrom(*source);
  }
}

void AddUserVisualParameters::MergeFrom(const AddUserVisualParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.AddUserVisualParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_visual()) {
    mutable_visual()->::mtm::geo::model::Visual::MergeFrom(from.visual());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void AddUserVisualParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.AddUserVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUserVisualParameters::CopyFrom(const AddUserVisualParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.AddUserVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUserVisualParameters::IsInitialized() const {
  return true;
}

void AddUserVisualParameters::Swap(AddUserVisualParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUserVisualParameters::InternalSwap(AddUserVisualParameters* other) {
  using std::swap;
  swap(visual_, other->visual_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddUserVisualParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddUserVisual2Parameters::InitAsDefaultInstance() {
}
void AddUserVisual2Parameters::clear_geography_ids() {
  geography_ids_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddUserVisual2Parameters::kUserIdFieldNumber;
const int AddUserVisual2Parameters::kVisibleFieldNumber;
const int AddUserVisual2Parameters::kGeographyIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUserVisual2Parameters::AddUserVisual2Parameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_AddUserVisual2Parameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.AddUserVisual2Parameters)
}
AddUserVisual2Parameters::AddUserVisual2Parameters(const AddUserVisual2Parameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      geography_ids_(from.geography_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&visible_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(visible_));
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.AddUserVisual2Parameters)
}

void AddUserVisual2Parameters::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(visible_));
}

AddUserVisual2Parameters::~AddUserVisual2Parameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.AddUserVisual2Parameters)
  SharedDtor();
}

void AddUserVisual2Parameters::SharedDtor() {
}

void AddUserVisual2Parameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddUserVisual2Parameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddUserVisual2Parameters& AddUserVisual2Parameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_AddUserVisual2Parameters.base);
  return *internal_default_instance();
}


void AddUserVisual2Parameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.AddUserVisual2Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  geography_ids_.Clear();
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(visible_));
  _internal_metadata_.Clear();
}

bool AddUserVisual2Parameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.AddUserVisual2Parameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool visible = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mtm.Uuid geography_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_geography_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.AddUserVisual2Parameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.AddUserVisual2Parameters)
  return false;
#undef DO_
}

void AddUserVisual2Parameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.AddUserVisual2Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // bool visible = 2;
  if (this->visible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->visible(), output);
  }

  // repeated .mtm.Uuid geography_ids = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->geography_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->geography_ids(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.AddUserVisual2Parameters)
}

::google::protobuf::uint8* AddUserVisual2Parameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.AddUserVisual2Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // bool visible = 2;
  if (this->visible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->visible(), target);
  }

  // repeated .mtm.Uuid geography_ids = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->geography_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->geography_ids(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.AddUserVisual2Parameters)
  return target;
}

size_t AddUserVisual2Parameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.AddUserVisual2Parameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mtm.Uuid geography_ids = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->geography_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->geography_ids(static_cast<int>(i)));
    }
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // bool visible = 2;
  if (this->visible() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddUserVisual2Parameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.AddUserVisual2Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AddUserVisual2Parameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUserVisual2Parameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.AddUserVisual2Parameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.AddUserVisual2Parameters)
    MergeFrom(*source);
  }
}

void AddUserVisual2Parameters::MergeFrom(const AddUserVisual2Parameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.AddUserVisual2Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  geography_ids_.MergeFrom(from.geography_ids_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.visible() != 0) {
    set_visible(from.visible());
  }
}

void AddUserVisual2Parameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.AddUserVisual2Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUserVisual2Parameters::CopyFrom(const AddUserVisual2Parameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.AddUserVisual2Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUserVisual2Parameters::IsInitialized() const {
  return true;
}

void AddUserVisual2Parameters::Swap(AddUserVisual2Parameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUserVisual2Parameters::InternalSwap(AddUserVisual2Parameters* other) {
  using std::swap;
  CastToBase(&geography_ids_)->InternalSwap(CastToBase(&other->geography_ids_));
  swap(user_id_, other->user_id_);
  swap(visible_, other->visible_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddUserVisual2Parameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveUserVisualParameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_RemoveUserVisualParameters_default_instance_._instance.get_mutable()->visual_id_ = const_cast< ::mtm::Uuid*>(
      ::mtm::Uuid::internal_default_instance());
}
void RemoveUserVisualParameters::clear_visual_id() {
  if (GetArenaNoVirtual() == NULL && visual_id_ != NULL) {
    delete visual_id_;
  }
  visual_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveUserVisualParameters::kUserIdFieldNumber;
const int RemoveUserVisualParameters::kVisualIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveUserVisualParameters::RemoveUserVisualParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_RemoveUserVisualParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.RemoveUserVisualParameters)
}
RemoveUserVisualParameters::RemoveUserVisualParameters(const RemoveUserVisualParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_visual_id()) {
    visual_id_ = new ::mtm::Uuid(*from.visual_id_);
  } else {
    visual_id_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.RemoveUserVisualParameters)
}

void RemoveUserVisualParameters::SharedCtor() {
  ::memset(&visual_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&visual_id_)) + sizeof(user_id_));
}

RemoveUserVisualParameters::~RemoveUserVisualParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.RemoveUserVisualParameters)
  SharedDtor();
}

void RemoveUserVisualParameters::SharedDtor() {
  if (this != internal_default_instance()) delete visual_id_;
}

void RemoveUserVisualParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveUserVisualParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveUserVisualParameters& RemoveUserVisualParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_RemoveUserVisualParameters.base);
  return *internal_default_instance();
}


void RemoveUserVisualParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.RemoveUserVisualParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && visual_id_ != NULL) {
    delete visual_id_;
  }
  visual_id_ = NULL;
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool RemoveUserVisualParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.RemoveUserVisualParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.Uuid visual_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_visual_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.RemoveUserVisualParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.RemoveUserVisualParameters)
  return false;
#undef DO_
}

void RemoveUserVisualParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.RemoveUserVisualParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_visual_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.RemoveUserVisualParameters)
}

::google::protobuf::uint8* RemoveUserVisualParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.RemoveUserVisualParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_visual_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.RemoveUserVisualParameters)
  return target;
}

size_t RemoveUserVisualParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.RemoveUserVisualParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *visual_id_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveUserVisualParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.RemoveUserVisualParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveUserVisualParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveUserVisualParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.RemoveUserVisualParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.RemoveUserVisualParameters)
    MergeFrom(*source);
  }
}

void RemoveUserVisualParameters::MergeFrom(const RemoveUserVisualParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.RemoveUserVisualParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_visual_id()) {
    mutable_visual_id()->::mtm::Uuid::MergeFrom(from.visual_id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void RemoveUserVisualParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.RemoveUserVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveUserVisualParameters::CopyFrom(const RemoveUserVisualParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.RemoveUserVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveUserVisualParameters::IsInitialized() const {
  return true;
}

void RemoveUserVisualParameters::Swap(RemoveUserVisualParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveUserVisualParameters::InternalSwap(RemoveUserVisualParameters* other) {
  using std::swap;
  swap(visual_id_, other->visual_id_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveUserVisualParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVisualParameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_GetVisualParameters_default_instance_._instance.get_mutable()->visual_id_ = const_cast< ::mtm::Uuid*>(
      ::mtm::Uuid::internal_default_instance());
}
void GetVisualParameters::clear_visual_id() {
  if (GetArenaNoVirtual() == NULL && visual_id_ != NULL) {
    delete visual_id_;
  }
  visual_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVisualParameters::kUserIdFieldNumber;
const int GetVisualParameters::kVisualIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVisualParameters::GetVisualParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_GetVisualParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.GetVisualParameters)
}
GetVisualParameters::GetVisualParameters(const GetVisualParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_visual_id()) {
    visual_id_ = new ::mtm::Uuid(*from.visual_id_);
  } else {
    visual_id_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.GetVisualParameters)
}

void GetVisualParameters::SharedCtor() {
  ::memset(&visual_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&visual_id_)) + sizeof(user_id_));
}

GetVisualParameters::~GetVisualParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.GetVisualParameters)
  SharedDtor();
}

void GetVisualParameters::SharedDtor() {
  if (this != internal_default_instance()) delete visual_id_;
}

void GetVisualParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVisualParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVisualParameters& GetVisualParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_GetVisualParameters.base);
  return *internal_default_instance();
}


void GetVisualParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.GetVisualParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && visual_id_ != NULL) {
    delete visual_id_;
  }
  visual_id_ = NULL;
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetVisualParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.GetVisualParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.Uuid visual_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_visual_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.GetVisualParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.GetVisualParameters)
  return false;
#undef DO_
}

void GetVisualParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.GetVisualParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_visual_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.GetVisualParameters)
}

::google::protobuf::uint8* GetVisualParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.GetVisualParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_visual_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.GetVisualParameters)
  return target;
}

size_t GetVisualParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.GetVisualParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.Uuid visual_id = 2;
  if (this->has_visual_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *visual_id_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVisualParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.GetVisualParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVisualParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVisualParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.GetVisualParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.GetVisualParameters)
    MergeFrom(*source);
  }
}

void GetVisualParameters::MergeFrom(const GetVisualParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.GetVisualParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_visual_id()) {
    mutable_visual_id()->::mtm::Uuid::MergeFrom(from.visual_id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GetVisualParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.GetVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVisualParameters::CopyFrom(const GetVisualParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.GetVisualParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVisualParameters::IsInitialized() const {
  return true;
}

void GetVisualParameters::Swap(GetVisualParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVisualParameters::InternalSwap(GetVisualParameters* other) {
  using std::swap;
  swap(visual_id_, other->visual_id_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVisualParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddBitmapParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddBitmapParameters::kUserIdFieldNumber;
const int AddBitmapParameters::kBitmapNameFieldNumber;
const int AddBitmapParameters::kBitmapDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddBitmapParameters::AddBitmapParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_AddBitmapParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.AddBitmapParameters)
}
AddBitmapParameters::AddBitmapParameters(const AddBitmapParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bitmap_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bitmap_name().size() > 0) {
    bitmap_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitmap_name_);
  }
  bitmap_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bitmap_data().size() > 0) {
    bitmap_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitmap_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.AddBitmapParameters)
}

void AddBitmapParameters::SharedCtor() {
  bitmap_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bitmap_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
}

AddBitmapParameters::~AddBitmapParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.AddBitmapParameters)
  SharedDtor();
}

void AddBitmapParameters::SharedDtor() {
  bitmap_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bitmap_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddBitmapParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddBitmapParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddBitmapParameters& AddBitmapParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_AddBitmapParameters.base);
  return *internal_default_instance();
}


void AddBitmapParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.AddBitmapParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bitmap_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bitmap_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AddBitmapParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.AddBitmapParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bitmap_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bitmap_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bitmap_name().data(), static_cast<int>(this->bitmap_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mtm.geo.service.AddBitmapParameters.bitmap_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bitmap_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bitmap_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.AddBitmapParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.AddBitmapParameters)
  return false;
#undef DO_
}

void AddBitmapParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.AddBitmapParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // string bitmap_name = 2;
  if (this->bitmap_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bitmap_name().data(), static_cast<int>(this->bitmap_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.geo.service.AddBitmapParameters.bitmap_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bitmap_name(), output);
  }

  // bytes bitmap_data = 3;
  if (this->bitmap_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->bitmap_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.AddBitmapParameters)
}

::google::protobuf::uint8* AddBitmapParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.AddBitmapParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // string bitmap_name = 2;
  if (this->bitmap_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bitmap_name().data(), static_cast<int>(this->bitmap_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.geo.service.AddBitmapParameters.bitmap_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bitmap_name(), target);
  }

  // bytes bitmap_data = 3;
  if (this->bitmap_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->bitmap_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.AddBitmapParameters)
  return target;
}

size_t AddBitmapParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.AddBitmapParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string bitmap_name = 2;
  if (this->bitmap_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bitmap_name());
  }

  // bytes bitmap_data = 3;
  if (this->bitmap_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bitmap_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddBitmapParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.AddBitmapParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AddBitmapParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddBitmapParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.AddBitmapParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.AddBitmapParameters)
    MergeFrom(*source);
  }
}

void AddBitmapParameters::MergeFrom(const AddBitmapParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.AddBitmapParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bitmap_name().size() > 0) {

    bitmap_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitmap_name_);
  }
  if (from.bitmap_data().size() > 0) {

    bitmap_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitmap_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void AddBitmapParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.AddBitmapParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddBitmapParameters::CopyFrom(const AddBitmapParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.AddBitmapParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBitmapParameters::IsInitialized() const {
  return true;
}

void AddBitmapParameters::Swap(AddBitmapParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddBitmapParameters::InternalSwap(AddBitmapParameters* other) {
  using std::swap;
  bitmap_name_.Swap(&other->bitmap_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bitmap_data_.Swap(&other->bitmap_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddBitmapParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RollbackParameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_RollbackParameters_default_instance_._instance.get_mutable()->object_id_ = const_cast< ::mtm::Uuid*>(
      ::mtm::Uuid::internal_default_instance());
}
void RollbackParameters::clear_object_id() {
  if (GetArenaNoVirtual() == NULL && object_id_ != NULL) {
    delete object_id_;
  }
  object_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RollbackParameters::kUserIdFieldNumber;
const int RollbackParameters::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollbackParameters::RollbackParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_RollbackParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.RollbackParameters)
}
RollbackParameters::RollbackParameters(const RollbackParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_object_id()) {
    object_id_ = new ::mtm::Uuid(*from.object_id_);
  } else {
    object_id_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.RollbackParameters)
}

void RollbackParameters::SharedCtor() {
  ::memset(&object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&object_id_)) + sizeof(user_id_));
}

RollbackParameters::~RollbackParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.RollbackParameters)
  SharedDtor();
}

void RollbackParameters::SharedDtor() {
  if (this != internal_default_instance()) delete object_id_;
}

void RollbackParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RollbackParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RollbackParameters& RollbackParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_RollbackParameters.base);
  return *internal_default_instance();
}


void RollbackParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.RollbackParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && object_id_ != NULL) {
    delete object_id_;
  }
  object_id_ = NULL;
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool RollbackParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.RollbackParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mtm.Uuid object_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.RollbackParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.RollbackParameters)
  return false;
#undef DO_
}

void RollbackParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.RollbackParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .mtm.Uuid object_id = 2;
  if (this->has_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_object_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.RollbackParameters)
}

::google::protobuf::uint8* RollbackParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.RollbackParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .mtm.Uuid object_id = 2;
  if (this->has_object_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_object_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.RollbackParameters)
  return target;
}

size_t RollbackParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.RollbackParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.Uuid object_id = 2;
  if (this->has_object_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *object_id_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RollbackParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.RollbackParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const RollbackParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RollbackParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.RollbackParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.RollbackParameters)
    MergeFrom(*source);
  }
}

void RollbackParameters::MergeFrom(const RollbackParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.RollbackParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object_id()) {
    mutable_object_id()->::mtm::Uuid::MergeFrom(from.object_id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void RollbackParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.RollbackParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollbackParameters::CopyFrom(const RollbackParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.RollbackParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackParameters::IsInitialized() const {
  return true;
}

void RollbackParameters::Swap(RollbackParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollbackParameters::InternalSwap(RollbackParameters* other) {
  using std::swap;
  swap(object_id_, other->object_id_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RollbackParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Rollback2Parameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rollback2Parameters::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rollback2Parameters::Rollback2Parameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_Rollback2Parameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.Rollback2Parameters)
}
Rollback2Parameters::Rollback2Parameters(const Rollback2Parameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.Rollback2Parameters)
}

void Rollback2Parameters::SharedCtor() {
  user_id_ = 0u;
}

Rollback2Parameters::~Rollback2Parameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.Rollback2Parameters)
  SharedDtor();
}

void Rollback2Parameters::SharedDtor() {
}

void Rollback2Parameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Rollback2Parameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Rollback2Parameters& Rollback2Parameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_Rollback2Parameters.base);
  return *internal_default_instance();
}


void Rollback2Parameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.Rollback2Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool Rollback2Parameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.Rollback2Parameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.Rollback2Parameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.Rollback2Parameters)
  return false;
#undef DO_
}

void Rollback2Parameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.Rollback2Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.Rollback2Parameters)
}

::google::protobuf::uint8* Rollback2Parameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.Rollback2Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.Rollback2Parameters)
  return target;
}

size_t Rollback2Parameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.Rollback2Parameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rollback2Parameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.Rollback2Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  const Rollback2Parameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rollback2Parameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.Rollback2Parameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.Rollback2Parameters)
    MergeFrom(*source);
  }
}

void Rollback2Parameters::MergeFrom(const Rollback2Parameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.Rollback2Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void Rollback2Parameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.Rollback2Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rollback2Parameters::CopyFrom(const Rollback2Parameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.Rollback2Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rollback2Parameters::IsInitialized() const {
  return true;
}

void Rollback2Parameters::Swap(Rollback2Parameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rollback2Parameters::InternalSwap(Rollback2Parameters* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Rollback2Parameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Rollback3Parameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_Rollback3Parameters_default_instance_._instance.get_mutable()->object_id_ = const_cast< ::mtm::Uuid*>(
      ::mtm::Uuid::internal_default_instance());
}
void Rollback3Parameters::clear_object_id() {
  if (GetArenaNoVirtual() == NULL && object_id_ != NULL) {
    delete object_id_;
  }
  object_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rollback3Parameters::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rollback3Parameters::Rollback3Parameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_Rollback3Parameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.Rollback3Parameters)
}
Rollback3Parameters::Rollback3Parameters(const Rollback3Parameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_object_id()) {
    object_id_ = new ::mtm::Uuid(*from.object_id_);
  } else {
    object_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.Rollback3Parameters)
}

void Rollback3Parameters::SharedCtor() {
  object_id_ = NULL;
}

Rollback3Parameters::~Rollback3Parameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.Rollback3Parameters)
  SharedDtor();
}

void Rollback3Parameters::SharedDtor() {
  if (this != internal_default_instance()) delete object_id_;
}

void Rollback3Parameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Rollback3Parameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Rollback3Parameters& Rollback3Parameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_Rollback3Parameters.base);
  return *internal_default_instance();
}


void Rollback3Parameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.Rollback3Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && object_id_ != NULL) {
    delete object_id_;
  }
  object_id_ = NULL;
  _internal_metadata_.Clear();
}

bool Rollback3Parameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.Rollback3Parameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mtm.Uuid object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.Rollback3Parameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.Rollback3Parameters)
  return false;
#undef DO_
}

void Rollback3Parameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.Rollback3Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mtm.Uuid object_id = 1;
  if (this->has_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_object_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.Rollback3Parameters)
}

::google::protobuf::uint8* Rollback3Parameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.Rollback3Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mtm.Uuid object_id = 1;
  if (this->has_object_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_object_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.Rollback3Parameters)
  return target;
}

size_t Rollback3Parameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.Rollback3Parameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.Uuid object_id = 1;
  if (this->has_object_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *object_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rollback3Parameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.Rollback3Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  const Rollback3Parameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rollback3Parameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.Rollback3Parameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.Rollback3Parameters)
    MergeFrom(*source);
  }
}

void Rollback3Parameters::MergeFrom(const Rollback3Parameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.Rollback3Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object_id()) {
    mutable_object_id()->::mtm::Uuid::MergeFrom(from.object_id());
  }
}

void Rollback3Parameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.Rollback3Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rollback3Parameters::CopyFrom(const Rollback3Parameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.Rollback3Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rollback3Parameters::IsInitialized() const {
  return true;
}

void Rollback3Parameters::Swap(Rollback3Parameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rollback3Parameters::InternalSwap(Rollback3Parameters* other) {
  using std::swap;
  swap(object_id_, other->object_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Rollback3Parameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveGeographyResourceParameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_RemoveGeographyResourceParameters_default_instance_._instance.get_mutable()->geography_resource_id_ = const_cast< ::mtm::Uuid*>(
      ::mtm::Uuid::internal_default_instance());
}
void RemoveGeographyResourceParameters::clear_geography_resource_id() {
  if (GetArenaNoVirtual() == NULL && geography_resource_id_ != NULL) {
    delete geography_resource_id_;
  }
  geography_resource_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveGeographyResourceParameters::kGeographyResourceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveGeographyResourceParameters::RemoveGeographyResourceParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_RemoveGeographyResourceParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.RemoveGeographyResourceParameters)
}
RemoveGeographyResourceParameters::RemoveGeographyResourceParameters(const RemoveGeographyResourceParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geography_resource_id()) {
    geography_resource_id_ = new ::mtm::Uuid(*from.geography_resource_id_);
  } else {
    geography_resource_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.RemoveGeographyResourceParameters)
}

void RemoveGeographyResourceParameters::SharedCtor() {
  geography_resource_id_ = NULL;
}

RemoveGeographyResourceParameters::~RemoveGeographyResourceParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.RemoveGeographyResourceParameters)
  SharedDtor();
}

void RemoveGeographyResourceParameters::SharedDtor() {
  if (this != internal_default_instance()) delete geography_resource_id_;
}

void RemoveGeographyResourceParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveGeographyResourceParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveGeographyResourceParameters& RemoveGeographyResourceParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_RemoveGeographyResourceParameters.base);
  return *internal_default_instance();
}


void RemoveGeographyResourceParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.RemoveGeographyResourceParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && geography_resource_id_ != NULL) {
    delete geography_resource_id_;
  }
  geography_resource_id_ = NULL;
  _internal_metadata_.Clear();
}

bool RemoveGeographyResourceParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.RemoveGeographyResourceParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mtm.Uuid geography_resource_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geography_resource_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.RemoveGeographyResourceParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.RemoveGeographyResourceParameters)
  return false;
#undef DO_
}

void RemoveGeographyResourceParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.RemoveGeographyResourceParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_geography_resource_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.RemoveGeographyResourceParameters)
}

::google::protobuf::uint8* RemoveGeographyResourceParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.RemoveGeographyResourceParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_geography_resource_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.RemoveGeographyResourceParameters)
  return target;
}

size_t RemoveGeographyResourceParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.RemoveGeographyResourceParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geography_resource_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGeographyResourceParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.RemoveGeographyResourceParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGeographyResourceParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveGeographyResourceParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.RemoveGeographyResourceParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.RemoveGeographyResourceParameters)
    MergeFrom(*source);
  }
}

void RemoveGeographyResourceParameters::MergeFrom(const RemoveGeographyResourceParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.RemoveGeographyResourceParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geography_resource_id()) {
    mutable_geography_resource_id()->::mtm::Uuid::MergeFrom(from.geography_resource_id());
  }
}

void RemoveGeographyResourceParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.RemoveGeographyResourceParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGeographyResourceParameters::CopyFrom(const RemoveGeographyResourceParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.RemoveGeographyResourceParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGeographyResourceParameters::IsInitialized() const {
  return true;
}

void RemoveGeographyResourceParameters::Swap(RemoveGeographyResourceParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveGeographyResourceParameters::InternalSwap(RemoveGeographyResourceParameters* other) {
  using std::swap;
  swap(geography_resource_id_, other->geography_resource_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveGeographyResourceParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBitmapParameters::InitAsDefaultInstance() {
  ::mtm::geo::service::_GetBitmapParameters_default_instance_._instance.get_mutable()->geography_resource_id_ = const_cast< ::mtm::Uuid*>(
      ::mtm::Uuid::internal_default_instance());
}
void GetBitmapParameters::clear_geography_resource_id() {
  if (GetArenaNoVirtual() == NULL && geography_resource_id_ != NULL) {
    delete geography_resource_id_;
  }
  geography_resource_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBitmapParameters::kGeographyResourceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBitmapParameters::GetBitmapParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_GetBitmapParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.GetBitmapParameters)
}
GetBitmapParameters::GetBitmapParameters(const GetBitmapParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geography_resource_id()) {
    geography_resource_id_ = new ::mtm::Uuid(*from.geography_resource_id_);
  } else {
    geography_resource_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.GetBitmapParameters)
}

void GetBitmapParameters::SharedCtor() {
  geography_resource_id_ = NULL;
}

GetBitmapParameters::~GetBitmapParameters() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.GetBitmapParameters)
  SharedDtor();
}

void GetBitmapParameters::SharedDtor() {
  if (this != internal_default_instance()) delete geography_resource_id_;
}

void GetBitmapParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBitmapParameters::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBitmapParameters& GetBitmapParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_GetBitmapParameters.base);
  return *internal_default_instance();
}


void GetBitmapParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.GetBitmapParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && geography_resource_id_ != NULL) {
    delete geography_resource_id_;
  }
  geography_resource_id_ = NULL;
  _internal_metadata_.Clear();
}

bool GetBitmapParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.GetBitmapParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mtm.Uuid geography_resource_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geography_resource_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.GetBitmapParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.GetBitmapParameters)
  return false;
#undef DO_
}

void GetBitmapParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.GetBitmapParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_geography_resource_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.GetBitmapParameters)
}

::google::protobuf::uint8* GetBitmapParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.GetBitmapParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_geography_resource_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.GetBitmapParameters)
  return target;
}

size_t GetBitmapParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.GetBitmapParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mtm.Uuid geography_resource_id = 1;
  if (this->has_geography_resource_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geography_resource_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBitmapParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.GetBitmapParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBitmapParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBitmapParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.GetBitmapParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.GetBitmapParameters)
    MergeFrom(*source);
  }
}

void GetBitmapParameters::MergeFrom(const GetBitmapParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.GetBitmapParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geography_resource_id()) {
    mutable_geography_resource_id()->::mtm::Uuid::MergeFrom(from.geography_resource_id());
  }
}

void GetBitmapParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.GetBitmapParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBitmapParameters::CopyFrom(const GetBitmapParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.GetBitmapParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBitmapParameters::IsInitialized() const {
  return true;
}

void GetBitmapParameters::Swap(GetBitmapParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBitmapParameters::InternalSwap(GetBitmapParameters* other) {
  using std::swap;
  swap(geography_resource_id_, other->geography_resource_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBitmapParameters::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBitmapResponse::InitAsDefaultInstance() {
  ::mtm::geo::service::_GetBitmapResponse_default_instance_._instance.get_mutable()->bitmap_data_ = const_cast< ::google::protobuf::BytesValue*>(
      ::google::protobuf::BytesValue::internal_default_instance());
}
void GetBitmapResponse::clear_bitmap_data() {
  if (GetArenaNoVirtual() == NULL && bitmap_data_ != NULL) {
    delete bitmap_data_;
  }
  bitmap_data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBitmapResponse::kBitmapDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBitmapResponse::GetBitmapResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_GetBitmapResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.geo.service.GetBitmapResponse)
}
GetBitmapResponse::GetBitmapResponse(const GetBitmapResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bitmap_data()) {
    bitmap_data_ = new ::google::protobuf::BytesValue(*from.bitmap_data_);
  } else {
    bitmap_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtm.geo.service.GetBitmapResponse)
}

void GetBitmapResponse::SharedCtor() {
  bitmap_data_ = NULL;
}

GetBitmapResponse::~GetBitmapResponse() {
  // @@protoc_insertion_point(destructor:mtm.geo.service.GetBitmapResponse)
  SharedDtor();
}

void GetBitmapResponse::SharedDtor() {
  if (this != internal_default_instance()) delete bitmap_data_;
}

void GetBitmapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBitmapResponse::descriptor() {
  ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBitmapResponse& GetBitmapResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::scc_info_GetBitmapResponse.base);
  return *internal_default_instance();
}


void GetBitmapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.geo.service.GetBitmapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bitmap_data_ != NULL) {
    delete bitmap_data_;
  }
  bitmap_data_ = NULL;
  _internal_metadata_.Clear();
}

bool GetBitmapResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.geo.service.GetBitmapResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.BytesValue bitmap_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bitmap_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.geo.service.GetBitmapResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.geo.service.GetBitmapResponse)
  return false;
#undef DO_
}

void GetBitmapResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.geo.service.GetBitmapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BytesValue bitmap_data = 1;
  if (this->has_bitmap_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_bitmap_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.geo.service.GetBitmapResponse)
}

::google::protobuf::uint8* GetBitmapResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.geo.service.GetBitmapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BytesValue bitmap_data = 1;
  if (this->has_bitmap_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_bitmap_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.geo.service.GetBitmapResponse)
  return target;
}

size_t GetBitmapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.geo.service.GetBitmapResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.BytesValue bitmap_data = 1;
  if (this->has_bitmap_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bitmap_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBitmapResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.geo.service.GetBitmapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBitmapResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBitmapResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.geo.service.GetBitmapResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.geo.service.GetBitmapResponse)
    MergeFrom(*source);
  }
}

void GetBitmapResponse::MergeFrom(const GetBitmapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.geo.service.GetBitmapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bitmap_data()) {
    mutable_bitmap_data()->::google::protobuf::BytesValue::MergeFrom(from.bitmap_data());
  }
}

void GetBitmapResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.geo.service.GetBitmapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBitmapResponse::CopyFrom(const GetBitmapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.geo.service.GetBitmapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBitmapResponse::IsInitialized() const {
  return true;
}

void GetBitmapResponse::Swap(GetBitmapResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBitmapResponse::InternalSwap(GetBitmapResponse* other) {
  using std::swap;
  swap(bitmap_data_, other->bitmap_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBitmapResponse::GetMetadata() const {
  protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fgeo_2fservice_2fgeo_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace geo
}  // namespace mtm
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::GeographyResponse* Arena::CreateMaybeMessage< ::mtm::geo::service::GeographyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::GeographyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::VisualResponse* Arena::CreateMaybeMessage< ::mtm::geo::service::VisualResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::VisualResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::BoolResponse* Arena::CreateMaybeMessage< ::mtm::geo::service::BoolResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::BoolResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::AddGeographyParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::AddGeographyParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::AddGeographyParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::RemoveGeographyParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::RemoveGeographyParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::RemoveGeographyParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::RemoveGeographiesParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::RemoveGeographiesParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::RemoveGeographiesParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::EditParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::EditParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::EditParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::CommitParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::CommitParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::CommitParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::EditResponse* Arena::CreateMaybeMessage< ::mtm::geo::service::EditResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::EditResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::GetVisualsForUserParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::GetVisualsForUserParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::GetVisualsForUserParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::AddUserVisualParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::AddUserVisualParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::AddUserVisualParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::AddUserVisual2Parameters* Arena::CreateMaybeMessage< ::mtm::geo::service::AddUserVisual2Parameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::AddUserVisual2Parameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::RemoveUserVisualParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::RemoveUserVisualParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::RemoveUserVisualParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::GetVisualParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::GetVisualParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::GetVisualParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::AddBitmapParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::AddBitmapParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::AddBitmapParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::RollbackParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::RollbackParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::RollbackParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::Rollback2Parameters* Arena::CreateMaybeMessage< ::mtm::geo::service::Rollback2Parameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::Rollback2Parameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::Rollback3Parameters* Arena::CreateMaybeMessage< ::mtm::geo::service::Rollback3Parameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::Rollback3Parameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::RemoveGeographyResourceParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::RemoveGeographyResourceParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::RemoveGeographyResourceParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::GetBitmapParameters* Arena::CreateMaybeMessage< ::mtm::geo::service::GetBitmapParameters >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::GetBitmapParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::geo::service::GetBitmapResponse* Arena::CreateMaybeMessage< ::mtm::geo::service::GetBitmapResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::geo::service::GetBitmapResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
