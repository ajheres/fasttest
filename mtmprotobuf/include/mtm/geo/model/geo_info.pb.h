// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/geo/model/geo_info.proto

#ifndef PROTOBUF_mtm_2fgeo_2fmodel_2fgeo_5finfo_2eproto__INCLUDED
#define PROTOBUF_mtm_2fgeo_2fmodel_2fgeo_5finfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mtm {
namespace geo {
namespace model {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mtm_2fgeo_2fmodel_2fgeo_5finfo_2eproto();
void protobuf_AssignDesc_mtm_2fgeo_2fmodel_2fgeo_5finfo_2eproto();
void protobuf_ShutdownFile_mtm_2fgeo_2fmodel_2fgeo_5finfo_2eproto();

class GeoInfo;

// ===================================================================

class GeoInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.geo.model.GeoInfo) */ {
 public:
  GeoInfo();
  virtual ~GeoInfo();

  GeoInfo(const GeoInfo& from);

  inline GeoInfo& operator=(const GeoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GeoInfo& default_instance();

  void Swap(GeoInfo* other);

  // implements Message ----------------------------------------------

  inline GeoInfo* New() const { return New(NULL); }

  GeoInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GeoInfo& from);
  void MergeFrom(const GeoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GeoInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mtm.geo.model.GeoInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 source_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2fgeo_2fmodel_2fgeo_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2fgeo_2fmodel_2fgeo_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2fgeo_2fmodel_2fgeo_5finfo_2eproto();

  void InitAsDefaultInstance();
  static GeoInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GeoInfo

// optional uint32 source = 1;
inline void GeoInfo::clear_source() {
  source_ = 0u;
}
inline ::google::protobuf::uint32 GeoInfo::source() const {
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeoInfo.source)
  return source_;
}
inline void GeoInfo::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.model.GeoInfo.source)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace geo
}  // namespace mtm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mtm_2fgeo_2fmodel_2fgeo_5finfo_2eproto__INCLUDED
