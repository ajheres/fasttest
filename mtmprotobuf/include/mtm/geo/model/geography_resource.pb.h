// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/geo/model/geography_resource.proto

#ifndef PROTOBUF_INCLUDED_mtm_2fgeo_2fmodel_2fgeography_5fresource_2eproto
#define PROTOBUF_INCLUDED_mtm_2fgeo_2fmodel_2fgeography_5fresource_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "mtm/common_types.pb.h"
#include "mtm/geo/model/geo_service_enums.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_mtm_2fgeo_2fmodel_2fgeography_5fresource_2eproto 

namespace protobuf_mtm_2fgeo_2fmodel_2fgeography_5fresource_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_mtm_2fgeo_2fmodel_2fgeography_5fresource_2eproto
namespace mtm {
namespace geo {
namespace model {
class GeographyResource;
class GeographyResourceDefaultTypeInternal;
extern GeographyResourceDefaultTypeInternal _GeographyResource_default_instance_;
class GeographyResourceList;
class GeographyResourceListDefaultTypeInternal;
extern GeographyResourceListDefaultTypeInternal _GeographyResourceList_default_instance_;
}  // namespace model
}  // namespace geo
}  // namespace mtm
namespace google {
namespace protobuf {
template<> ::mtm::geo::model::GeographyResource* Arena::CreateMaybeMessage<::mtm::geo::model::GeographyResource>(Arena*);
template<> ::mtm::geo::model::GeographyResourceList* Arena::CreateMaybeMessage<::mtm::geo::model::GeographyResourceList>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mtm {
namespace geo {
namespace model {

// ===================================================================

class GeographyResource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.geo.model.GeographyResource) */ {
 public:
  GeographyResource();
  virtual ~GeographyResource();

  GeographyResource(const GeographyResource& from);

  inline GeographyResource& operator=(const GeographyResource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeographyResource(GeographyResource&& from) noexcept
    : GeographyResource() {
    *this = ::std::move(from);
  }

  inline GeographyResource& operator=(GeographyResource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GeographyResource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeographyResource* internal_default_instance() {
    return reinterpret_cast<const GeographyResource*>(
               &_GeographyResource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GeographyResource* other);
  friend void swap(GeographyResource& a, GeographyResource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeographyResource* New() const final {
    return CreateMaybeMessage<GeographyResource>(NULL);
  }

  GeographyResource* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GeographyResource>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GeographyResource& from);
  void MergeFrom(const GeographyResource& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeographyResource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtm.Uuid id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::mtm::Uuid& _internal_id() const;
  public:
  const ::mtm::Uuid& id() const;
  ::mtm::Uuid* release_id();
  ::mtm::Uuid* mutable_id();
  void set_allocated_id(::mtm::Uuid* id);

  // .google.protobuf.StringValue name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  private:
  const ::google::protobuf::StringValue& _internal_name() const;
  public:
  const ::google::protobuf::StringValue& name() const;
  ::google::protobuf::StringValue* release_name();
  ::google::protobuf::StringValue* mutable_name();
  void set_allocated_name(::google::protobuf::StringValue* name);

  // .google.protobuf.Timestamp created = 6;
  bool has_created() const;
  void clear_created();
  static const int kCreatedFieldNumber = 6;
  private:
  const ::google::protobuf::Timestamp& _internal_created() const;
  public:
  const ::google::protobuf::Timestamp& created() const;
  ::google::protobuf::Timestamp* release_created();
  ::google::protobuf::Timestamp* mutable_created();
  void set_allocated_created(::google::protobuf::Timestamp* created);

  // .google.protobuf.Timestamp valid_from = 7;
  bool has_valid_from() const;
  void clear_valid_from();
  static const int kValidFromFieldNumber = 7;
  private:
  const ::google::protobuf::Timestamp& _internal_valid_from() const;
  public:
  const ::google::protobuf::Timestamp& valid_from() const;
  ::google::protobuf::Timestamp* release_valid_from();
  ::google::protobuf::Timestamp* mutable_valid_from();
  void set_allocated_valid_from(::google::protobuf::Timestamp* valid_from);

  // .google.protobuf.Timestamp valid_to = 8;
  bool has_valid_to() const;
  void clear_valid_to();
  static const int kValidToFieldNumber = 8;
  private:
  const ::google::protobuf::Timestamp& _internal_valid_to() const;
  public:
  const ::google::protobuf::Timestamp& valid_to() const;
  ::google::protobuf::Timestamp* release_valid_to();
  ::google::protobuf::Timestamp* mutable_valid_to();
  void set_allocated_valid_to(::google::protobuf::Timestamp* valid_to);

  // int32 primary_key = 1;
  void clear_primary_key();
  static const int kPrimaryKeyFieldNumber = 1;
  ::google::protobuf::int32 primary_key() const;
  void set_primary_key(::google::protobuf::int32 value);

  // .mtm.geo.model.GeographyResourceType geography_resource_type = 3;
  void clear_geography_resource_type();
  static const int kGeographyResourceTypeFieldNumber = 3;
  ::mtm::geo::model::GeographyResourceType geography_resource_type() const;
  void set_geography_resource_type(::mtm::geo::model::GeographyResourceType value);

  // uint32 created_by = 5;
  void clear_created_by();
  static const int kCreatedByFieldNumber = 5;
  ::google::protobuf::uint32 created_by() const;
  void set_created_by(::google::protobuf::uint32 value);

  // bool is_valid = 9;
  void clear_is_valid();
  static const int kIsValidFieldNumber = 9;
  bool is_valid() const;
  void set_is_valid(bool value);

  // @@protoc_insertion_point(class_scope:mtm.geo.model.GeographyResource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtm::Uuid* id_;
  ::google::protobuf::StringValue* name_;
  ::google::protobuf::Timestamp* created_;
  ::google::protobuf::Timestamp* valid_from_;
  ::google::protobuf::Timestamp* valid_to_;
  ::google::protobuf::int32 primary_key_;
  int geography_resource_type_;
  ::google::protobuf::uint32 created_by_;
  bool is_valid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2fgeo_2fmodel_2fgeography_5fresource_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GeographyResourceList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.geo.model.GeographyResourceList) */ {
 public:
  GeographyResourceList();
  virtual ~GeographyResourceList();

  GeographyResourceList(const GeographyResourceList& from);

  inline GeographyResourceList& operator=(const GeographyResourceList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeographyResourceList(GeographyResourceList&& from) noexcept
    : GeographyResourceList() {
    *this = ::std::move(from);
  }

  inline GeographyResourceList& operator=(GeographyResourceList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GeographyResourceList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeographyResourceList* internal_default_instance() {
    return reinterpret_cast<const GeographyResourceList*>(
               &_GeographyResourceList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GeographyResourceList* other);
  friend void swap(GeographyResourceList& a, GeographyResourceList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeographyResourceList* New() const final {
    return CreateMaybeMessage<GeographyResourceList>(NULL);
  }

  GeographyResourceList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GeographyResourceList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GeographyResourceList& from);
  void MergeFrom(const GeographyResourceList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeographyResourceList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtm.geo.model.GeographyResource geographyResources = 1;
  int geographyresources_size() const;
  void clear_geographyresources();
  static const int kGeographyResourcesFieldNumber = 1;
  ::mtm::geo::model::GeographyResource* mutable_geographyresources(int index);
  ::google::protobuf::RepeatedPtrField< ::mtm::geo::model::GeographyResource >*
      mutable_geographyresources();
  const ::mtm::geo::model::GeographyResource& geographyresources(int index) const;
  ::mtm::geo::model::GeographyResource* add_geographyresources();
  const ::google::protobuf::RepeatedPtrField< ::mtm::geo::model::GeographyResource >&
      geographyresources() const;

  // @@protoc_insertion_point(class_scope:mtm.geo.model.GeographyResourceList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtm::geo::model::GeographyResource > geographyresources_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2fgeo_2fmodel_2fgeography_5fresource_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GeographyResource

// int32 primary_key = 1;
inline void GeographyResource::clear_primary_key() {
  primary_key_ = 0;
}
inline ::google::protobuf::int32 GeographyResource::primary_key() const {
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeographyResource.primary_key)
  return primary_key_;
}
inline void GeographyResource::set_primary_key(::google::protobuf::int32 value) {
  
  primary_key_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.model.GeographyResource.primary_key)
}

// .mtm.Uuid id = 2;
inline bool GeographyResource::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::mtm::Uuid& GeographyResource::_internal_id() const {
  return *id_;
}
inline const ::mtm::Uuid& GeographyResource::id() const {
  const ::mtm::Uuid* p = id_;
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeographyResource.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtm::Uuid*>(
      &::mtm::_Uuid_default_instance_);
}
inline ::mtm::Uuid* GeographyResource::release_id() {
  // @@protoc_insertion_point(field_release:mtm.geo.model.GeographyResource.id)
  
  ::mtm::Uuid* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::mtm::Uuid* GeographyResource::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::mtm::Uuid>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.model.GeographyResource.id)
  return id_;
}
inline void GeographyResource::set_allocated_id(::mtm::Uuid* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.model.GeographyResource.id)
}

// .mtm.geo.model.GeographyResourceType geography_resource_type = 3;
inline void GeographyResource::clear_geography_resource_type() {
  geography_resource_type_ = 0;
}
inline ::mtm::geo::model::GeographyResourceType GeographyResource::geography_resource_type() const {
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeographyResource.geography_resource_type)
  return static_cast< ::mtm::geo::model::GeographyResourceType >(geography_resource_type_);
}
inline void GeographyResource::set_geography_resource_type(::mtm::geo::model::GeographyResourceType value) {
  
  geography_resource_type_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.model.GeographyResource.geography_resource_type)
}

// .google.protobuf.StringValue name = 4;
inline bool GeographyResource::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::protobuf::StringValue& GeographyResource::_internal_name() const {
  return *name_;
}
inline const ::google::protobuf::StringValue& GeographyResource::name() const {
  const ::google::protobuf::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeographyResource.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* GeographyResource::release_name() {
  // @@protoc_insertion_point(field_release:mtm.geo.model.GeographyResource.name)
  
  ::google::protobuf::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* GeographyResource::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.model.GeographyResource.name)
  return name_;
}
inline void GeographyResource::set_allocated_name(::google::protobuf::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(name)->GetArena();
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.model.GeographyResource.name)
}

// uint32 created_by = 5;
inline void GeographyResource::clear_created_by() {
  created_by_ = 0u;
}
inline ::google::protobuf::uint32 GeographyResource::created_by() const {
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeographyResource.created_by)
  return created_by_;
}
inline void GeographyResource::set_created_by(::google::protobuf::uint32 value) {
  
  created_by_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.model.GeographyResource.created_by)
}

// .google.protobuf.Timestamp created = 6;
inline bool GeographyResource::has_created() const {
  return this != internal_default_instance() && created_ != NULL;
}
inline const ::google::protobuf::Timestamp& GeographyResource::_internal_created() const {
  return *created_;
}
inline const ::google::protobuf::Timestamp& GeographyResource::created() const {
  const ::google::protobuf::Timestamp* p = created_;
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeographyResource.created)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* GeographyResource::release_created() {
  // @@protoc_insertion_point(field_release:mtm.geo.model.GeographyResource.created)
  
  ::google::protobuf::Timestamp* temp = created_;
  created_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* GeographyResource::mutable_created() {
  
  if (created_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    created_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.model.GeographyResource.created)
  return created_;
}
inline void GeographyResource::set_allocated_created(::google::protobuf::Timestamp* created) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(created_);
  }
  if (created) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(created)->GetArena();
    if (message_arena != submessage_arena) {
      created = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, created, submessage_arena);
    }
    
  } else {
    
  }
  created_ = created;
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.model.GeographyResource.created)
}

// .google.protobuf.Timestamp valid_from = 7;
inline bool GeographyResource::has_valid_from() const {
  return this != internal_default_instance() && valid_from_ != NULL;
}
inline const ::google::protobuf::Timestamp& GeographyResource::_internal_valid_from() const {
  return *valid_from_;
}
inline const ::google::protobuf::Timestamp& GeographyResource::valid_from() const {
  const ::google::protobuf::Timestamp* p = valid_from_;
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeographyResource.valid_from)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* GeographyResource::release_valid_from() {
  // @@protoc_insertion_point(field_release:mtm.geo.model.GeographyResource.valid_from)
  
  ::google::protobuf::Timestamp* temp = valid_from_;
  valid_from_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* GeographyResource::mutable_valid_from() {
  
  if (valid_from_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    valid_from_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.model.GeographyResource.valid_from)
  return valid_from_;
}
inline void GeographyResource::set_allocated_valid_from(::google::protobuf::Timestamp* valid_from) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(valid_from_);
  }
  if (valid_from) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(valid_from)->GetArena();
    if (message_arena != submessage_arena) {
      valid_from = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, valid_from, submessage_arena);
    }
    
  } else {
    
  }
  valid_from_ = valid_from;
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.model.GeographyResource.valid_from)
}

// .google.protobuf.Timestamp valid_to = 8;
inline bool GeographyResource::has_valid_to() const {
  return this != internal_default_instance() && valid_to_ != NULL;
}
inline const ::google::protobuf::Timestamp& GeographyResource::_internal_valid_to() const {
  return *valid_to_;
}
inline const ::google::protobuf::Timestamp& GeographyResource::valid_to() const {
  const ::google::protobuf::Timestamp* p = valid_to_;
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeographyResource.valid_to)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* GeographyResource::release_valid_to() {
  // @@protoc_insertion_point(field_release:mtm.geo.model.GeographyResource.valid_to)
  
  ::google::protobuf::Timestamp* temp = valid_to_;
  valid_to_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* GeographyResource::mutable_valid_to() {
  
  if (valid_to_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    valid_to_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.geo.model.GeographyResource.valid_to)
  return valid_to_;
}
inline void GeographyResource::set_allocated_valid_to(::google::protobuf::Timestamp* valid_to) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(valid_to_);
  }
  if (valid_to) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(valid_to)->GetArena();
    if (message_arena != submessage_arena) {
      valid_to = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, valid_to, submessage_arena);
    }
    
  } else {
    
  }
  valid_to_ = valid_to;
  // @@protoc_insertion_point(field_set_allocated:mtm.geo.model.GeographyResource.valid_to)
}

// bool is_valid = 9;
inline void GeographyResource::clear_is_valid() {
  is_valid_ = false;
}
inline bool GeographyResource::is_valid() const {
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeographyResource.is_valid)
  return is_valid_;
}
inline void GeographyResource::set_is_valid(bool value) {
  
  is_valid_ = value;
  // @@protoc_insertion_point(field_set:mtm.geo.model.GeographyResource.is_valid)
}

// -------------------------------------------------------------------

// GeographyResourceList

// repeated .mtm.geo.model.GeographyResource geographyResources = 1;
inline int GeographyResourceList::geographyresources_size() const {
  return geographyresources_.size();
}
inline void GeographyResourceList::clear_geographyresources() {
  geographyresources_.Clear();
}
inline ::mtm::geo::model::GeographyResource* GeographyResourceList::mutable_geographyresources(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.geo.model.GeographyResourceList.geographyResources)
  return geographyresources_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::geo::model::GeographyResource >*
GeographyResourceList::mutable_geographyresources() {
  // @@protoc_insertion_point(field_mutable_list:mtm.geo.model.GeographyResourceList.geographyResources)
  return &geographyresources_;
}
inline const ::mtm::geo::model::GeographyResource& GeographyResourceList::geographyresources(int index) const {
  // @@protoc_insertion_point(field_get:mtm.geo.model.GeographyResourceList.geographyResources)
  return geographyresources_.Get(index);
}
inline ::mtm::geo::model::GeographyResource* GeographyResourceList::add_geographyresources() {
  // @@protoc_insertion_point(field_add:mtm.geo.model.GeographyResourceList.geographyResources)
  return geographyresources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::geo::model::GeographyResource >&
GeographyResourceList::geographyresources() const {
  // @@protoc_insertion_point(field_list:mtm.geo.model.GeographyResourceList.geographyResources)
  return geographyresources_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace geo
}  // namespace mtm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_mtm_2fgeo_2fmodel_2fgeography_5fresource_2eproto
