// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/event/action/action_descriptor.proto

#ifndef PROTOBUF_INCLUDED_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto
#define PROTOBUF_INCLUDED_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "mtm/event/argument_descriptor.pb.h"
#include "mtm/common_types.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto 

namespace protobuf_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto
namespace mtm {
namespace event {
namespace action {
class ActionDescriptor;
class ActionDescriptorDefaultTypeInternal;
extern ActionDescriptorDefaultTypeInternal _ActionDescriptor_default_instance_;
class ActionDescriptorCollection;
class ActionDescriptorCollectionDefaultTypeInternal;
extern ActionDescriptorCollectionDefaultTypeInternal _ActionDescriptorCollection_default_instance_;
}  // namespace action
}  // namespace event
}  // namespace mtm
namespace google {
namespace protobuf {
template<> ::mtm::event::action::ActionDescriptor* Arena::CreateMaybeMessage<::mtm::event::action::ActionDescriptor>(Arena*);
template<> ::mtm::event::action::ActionDescriptorCollection* Arena::CreateMaybeMessage<::mtm::event::action::ActionDescriptorCollection>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mtm {
namespace event {
namespace action {

// ===================================================================

class ActionDescriptor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.event.action.ActionDescriptor) */ {
 public:
  ActionDescriptor();
  virtual ~ActionDescriptor();

  ActionDescriptor(const ActionDescriptor& from);

  inline ActionDescriptor& operator=(const ActionDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionDescriptor(ActionDescriptor&& from) noexcept
    : ActionDescriptor() {
    *this = ::std::move(from);
  }

  inline ActionDescriptor& operator=(ActionDescriptor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionDescriptor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionDescriptor* internal_default_instance() {
    return reinterpret_cast<const ActionDescriptor*>(
               &_ActionDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ActionDescriptor* other);
  friend void swap(ActionDescriptor& a, ActionDescriptor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionDescriptor* New() const final {
    return CreateMaybeMessage<ActionDescriptor>(NULL);
  }

  ActionDescriptor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionDescriptor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionDescriptor& from);
  void MergeFrom(const ActionDescriptor& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtm.event.ArgumentDescriptor arguments = 10;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 10;
  ::mtm::event::ArgumentDescriptor* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >*
      mutable_arguments();
  const ::mtm::event::ArgumentDescriptor& arguments(int index) const;
  ::mtm::event::ArgumentDescriptor* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >&
      arguments() const;

  // .mtm.Uuid descriptorId = 1;
  bool has_descriptorid() const;
  void clear_descriptorid();
  static const int kDescriptorIdFieldNumber = 1;
  private:
  const ::mtm::Uuid& _internal_descriptorid() const;
  public:
  const ::mtm::Uuid& descriptorid() const;
  ::mtm::Uuid* release_descriptorid();
  ::mtm::Uuid* mutable_descriptorid();
  void set_allocated_descriptorid(::mtm::Uuid* descriptorid);

  // .mtm.Uuid providerId = 3;
  bool has_providerid() const;
  void clear_providerid();
  static const int kProviderIdFieldNumber = 3;
  private:
  const ::mtm::Uuid& _internal_providerid() const;
  public:
  const ::mtm::Uuid& providerid() const;
  ::mtm::Uuid* release_providerid();
  ::mtm::Uuid* mutable_providerid();
  void set_allocated_providerid(::mtm::Uuid* providerid);

  // .google.protobuf.StringValue displayName = 5;
  bool has_displayname() const;
  void clear_displayname();
  static const int kDisplayNameFieldNumber = 5;
  private:
  const ::google::protobuf::StringValue& _internal_displayname() const;
  public:
  const ::google::protobuf::StringValue& displayname() const;
  ::google::protobuf::StringValue* release_displayname();
  ::google::protobuf::StringValue* mutable_displayname();
  void set_allocated_displayname(::google::protobuf::StringValue* displayname);

  // .google.protobuf.StringValue shortDisplayName = 6;
  bool has_shortdisplayname() const;
  void clear_shortdisplayname();
  static const int kShortDisplayNameFieldNumber = 6;
  private:
  const ::google::protobuf::StringValue& _internal_shortdisplayname() const;
  public:
  const ::google::protobuf::StringValue& shortdisplayname() const;
  ::google::protobuf::StringValue* release_shortdisplayname();
  ::google::protobuf::StringValue* mutable_shortdisplayname();
  void set_allocated_shortdisplayname(::google::protobuf::StringValue* shortdisplayname);

  // .google.protobuf.StringValue description = 7;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 7;
  private:
  const ::google::protobuf::StringValue& _internal_description() const;
  public:
  const ::google::protobuf::StringValue& description() const;
  ::google::protobuf::StringValue* release_description();
  ::google::protobuf::StringValue* mutable_description();
  void set_allocated_description(::google::protobuf::StringValue* description);

  // .google.protobuf.Timestamp time = 8;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 8;
  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  public:
  const ::google::protobuf::Timestamp& time() const;
  ::google::protobuf::Timestamp* release_time();
  ::google::protobuf::Timestamp* mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* time);

  // .google.protobuf.BoolValue removed = 9;
  bool has_removed() const;
  void clear_removed();
  static const int kRemovedFieldNumber = 9;
  private:
  const ::google::protobuf::BoolValue& _internal_removed() const;
  public:
  const ::google::protobuf::BoolValue& removed() const;
  ::google::protobuf::BoolValue* release_removed();
  ::google::protobuf::BoolValue* mutable_removed();
  void set_allocated_removed(::google::protobuf::BoolValue* removed);

  // uint32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mtm.event.action.ActionDescriptor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor > arguments_;
  ::mtm::Uuid* descriptorid_;
  ::mtm::Uuid* providerid_;
  ::google::protobuf::StringValue* displayname_;
  ::google::protobuf::StringValue* shortdisplayname_;
  ::google::protobuf::StringValue* description_;
  ::google::protobuf::Timestamp* time_;
  ::google::protobuf::BoolValue* removed_;
  ::google::protobuf::uint32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionDescriptorCollection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.event.action.ActionDescriptorCollection) */ {
 public:
  ActionDescriptorCollection();
  virtual ~ActionDescriptorCollection();

  ActionDescriptorCollection(const ActionDescriptorCollection& from);

  inline ActionDescriptorCollection& operator=(const ActionDescriptorCollection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionDescriptorCollection(ActionDescriptorCollection&& from) noexcept
    : ActionDescriptorCollection() {
    *this = ::std::move(from);
  }

  inline ActionDescriptorCollection& operator=(ActionDescriptorCollection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionDescriptorCollection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionDescriptorCollection* internal_default_instance() {
    return reinterpret_cast<const ActionDescriptorCollection*>(
               &_ActionDescriptorCollection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ActionDescriptorCollection* other);
  friend void swap(ActionDescriptorCollection& a, ActionDescriptorCollection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionDescriptorCollection* New() const final {
    return CreateMaybeMessage<ActionDescriptorCollection>(NULL);
  }

  ActionDescriptorCollection* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionDescriptorCollection>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionDescriptorCollection& from);
  void MergeFrom(const ActionDescriptorCollection& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionDescriptorCollection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtm.event.action.ActionDescriptor data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::mtm::event::action::ActionDescriptor* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField< ::mtm::event::action::ActionDescriptor >*
      mutable_data();
  const ::mtm::event::action::ActionDescriptor& data(int index) const;
  ::mtm::event::action::ActionDescriptor* add_data();
  const ::google::protobuf::RepeatedPtrField< ::mtm::event::action::ActionDescriptor >&
      data() const;

  // @@protoc_insertion_point(class_scope:mtm.event.action.ActionDescriptorCollection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtm::event::action::ActionDescriptor > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ActionDescriptor

// .mtm.Uuid descriptorId = 1;
inline bool ActionDescriptor::has_descriptorid() const {
  return this != internal_default_instance() && descriptorid_ != NULL;
}
inline const ::mtm::Uuid& ActionDescriptor::_internal_descriptorid() const {
  return *descriptorid_;
}
inline const ::mtm::Uuid& ActionDescriptor::descriptorid() const {
  const ::mtm::Uuid* p = descriptorid_;
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.descriptorId)
  return p != NULL ? *p : *reinterpret_cast<const ::mtm::Uuid*>(
      &::mtm::_Uuid_default_instance_);
}
inline ::mtm::Uuid* ActionDescriptor::release_descriptorid() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.descriptorId)
  
  ::mtm::Uuid* temp = descriptorid_;
  descriptorid_ = NULL;
  return temp;
}
inline ::mtm::Uuid* ActionDescriptor::mutable_descriptorid() {
  
  if (descriptorid_ == NULL) {
    auto* p = CreateMaybeMessage<::mtm::Uuid>(GetArenaNoVirtual());
    descriptorid_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.descriptorId)
  return descriptorid_;
}
inline void ActionDescriptor::set_allocated_descriptorid(::mtm::Uuid* descriptorid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(descriptorid_);
  }
  if (descriptorid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      descriptorid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, descriptorid, submessage_arena);
    }
    
  } else {
    
  }
  descriptorid_ = descriptorid;
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.descriptorId)
}

// uint32 version = 2;
inline void ActionDescriptor::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 ActionDescriptor::version() const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.version)
  return version_;
}
inline void ActionDescriptor::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtm.event.action.ActionDescriptor.version)
}

// .mtm.Uuid providerId = 3;
inline bool ActionDescriptor::has_providerid() const {
  return this != internal_default_instance() && providerid_ != NULL;
}
inline const ::mtm::Uuid& ActionDescriptor::_internal_providerid() const {
  return *providerid_;
}
inline const ::mtm::Uuid& ActionDescriptor::providerid() const {
  const ::mtm::Uuid* p = providerid_;
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.providerId)
  return p != NULL ? *p : *reinterpret_cast<const ::mtm::Uuid*>(
      &::mtm::_Uuid_default_instance_);
}
inline ::mtm::Uuid* ActionDescriptor::release_providerid() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.providerId)
  
  ::mtm::Uuid* temp = providerid_;
  providerid_ = NULL;
  return temp;
}
inline ::mtm::Uuid* ActionDescriptor::mutable_providerid() {
  
  if (providerid_ == NULL) {
    auto* p = CreateMaybeMessage<::mtm::Uuid>(GetArenaNoVirtual());
    providerid_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.providerId)
  return providerid_;
}
inline void ActionDescriptor::set_allocated_providerid(::mtm::Uuid* providerid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(providerid_);
  }
  if (providerid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      providerid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, providerid, submessage_arena);
    }
    
  } else {
    
  }
  providerid_ = providerid;
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.providerId)
}

// .google.protobuf.StringValue displayName = 5;
inline bool ActionDescriptor::has_displayname() const {
  return this != internal_default_instance() && displayname_ != NULL;
}
inline const ::google::protobuf::StringValue& ActionDescriptor::_internal_displayname() const {
  return *displayname_;
}
inline const ::google::protobuf::StringValue& ActionDescriptor::displayname() const {
  const ::google::protobuf::StringValue* p = displayname_;
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.displayName)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* ActionDescriptor::release_displayname() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.displayName)
  
  ::google::protobuf::StringValue* temp = displayname_;
  displayname_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* ActionDescriptor::mutable_displayname() {
  
  if (displayname_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    displayname_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.displayName)
  return displayname_;
}
inline void ActionDescriptor::set_allocated_displayname(::google::protobuf::StringValue* displayname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(displayname_);
  }
  if (displayname) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(displayname)->GetArena();
    if (message_arena != submessage_arena) {
      displayname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, displayname, submessage_arena);
    }
    
  } else {
    
  }
  displayname_ = displayname;
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.displayName)
}

// .google.protobuf.StringValue shortDisplayName = 6;
inline bool ActionDescriptor::has_shortdisplayname() const {
  return this != internal_default_instance() && shortdisplayname_ != NULL;
}
inline const ::google::protobuf::StringValue& ActionDescriptor::_internal_shortdisplayname() const {
  return *shortdisplayname_;
}
inline const ::google::protobuf::StringValue& ActionDescriptor::shortdisplayname() const {
  const ::google::protobuf::StringValue* p = shortdisplayname_;
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.shortDisplayName)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* ActionDescriptor::release_shortdisplayname() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.shortDisplayName)
  
  ::google::protobuf::StringValue* temp = shortdisplayname_;
  shortdisplayname_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* ActionDescriptor::mutable_shortdisplayname() {
  
  if (shortdisplayname_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    shortdisplayname_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.shortDisplayName)
  return shortdisplayname_;
}
inline void ActionDescriptor::set_allocated_shortdisplayname(::google::protobuf::StringValue* shortdisplayname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(shortdisplayname_);
  }
  if (shortdisplayname) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(shortdisplayname)->GetArena();
    if (message_arena != submessage_arena) {
      shortdisplayname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shortdisplayname, submessage_arena);
    }
    
  } else {
    
  }
  shortdisplayname_ = shortdisplayname;
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.shortDisplayName)
}

// .google.protobuf.StringValue description = 7;
inline bool ActionDescriptor::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::google::protobuf::StringValue& ActionDescriptor::_internal_description() const {
  return *description_;
}
inline const ::google::protobuf::StringValue& ActionDescriptor::description() const {
  const ::google::protobuf::StringValue* p = description_;
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.description)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* ActionDescriptor::release_description() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.description)
  
  ::google::protobuf::StringValue* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* ActionDescriptor::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.description)
  return description_;
}
inline void ActionDescriptor::set_allocated_description(::google::protobuf::StringValue* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(description)->GetArena();
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.description)
}

// .google.protobuf.Timestamp time = 8;
inline bool ActionDescriptor::has_time() const {
  return this != internal_default_instance() && time_ != NULL;
}
inline const ::google::protobuf::Timestamp& ActionDescriptor::_internal_time() const {
  return *time_;
}
inline const ::google::protobuf::Timestamp& ActionDescriptor::time() const {
  const ::google::protobuf::Timestamp* p = time_;
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* ActionDescriptor::release_time() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.time)
  
  ::google::protobuf::Timestamp* temp = time_;
  time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* ActionDescriptor::mutable_time() {
  
  if (time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.time)
  return time_;
}
inline void ActionDescriptor::set_allocated_time(::google::protobuf::Timestamp* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_);
  }
  if (time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(time)->GetArena();
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    
  } else {
    
  }
  time_ = time;
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.time)
}

// .google.protobuf.BoolValue removed = 9;
inline bool ActionDescriptor::has_removed() const {
  return this != internal_default_instance() && removed_ != NULL;
}
inline const ::google::protobuf::BoolValue& ActionDescriptor::_internal_removed() const {
  return *removed_;
}
inline const ::google::protobuf::BoolValue& ActionDescriptor::removed() const {
  const ::google::protobuf::BoolValue* p = removed_;
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.removed)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* ActionDescriptor::release_removed() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.removed)
  
  ::google::protobuf::BoolValue* temp = removed_;
  removed_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* ActionDescriptor::mutable_removed() {
  
  if (removed_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    removed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.removed)
  return removed_;
}
inline void ActionDescriptor::set_allocated_removed(::google::protobuf::BoolValue* removed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(removed_);
  }
  if (removed) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(removed)->GetArena();
    if (message_arena != submessage_arena) {
      removed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, removed, submessage_arena);
    }
    
  } else {
    
  }
  removed_ = removed;
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.removed)
}

// repeated .mtm.event.ArgumentDescriptor arguments = 10;
inline int ActionDescriptor::arguments_size() const {
  return arguments_.size();
}
inline ::mtm::event::ArgumentDescriptor* ActionDescriptor::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >*
ActionDescriptor::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:mtm.event.action.ActionDescriptor.arguments)
  return &arguments_;
}
inline const ::mtm::event::ArgumentDescriptor& ActionDescriptor::arguments(int index) const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.arguments)
  return arguments_.Get(index);
}
inline ::mtm::event::ArgumentDescriptor* ActionDescriptor::add_arguments() {
  // @@protoc_insertion_point(field_add:mtm.event.action.ActionDescriptor.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >&
ActionDescriptor::arguments() const {
  // @@protoc_insertion_point(field_list:mtm.event.action.ActionDescriptor.arguments)
  return arguments_;
}

// -------------------------------------------------------------------

// ActionDescriptorCollection

// repeated .mtm.event.action.ActionDescriptor data = 1;
inline int ActionDescriptorCollection::data_size() const {
  return data_.size();
}
inline void ActionDescriptorCollection::clear_data() {
  data_.Clear();
}
inline ::mtm::event::action::ActionDescriptor* ActionDescriptorCollection::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptorCollection.data)
  return data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::event::action::ActionDescriptor >*
ActionDescriptorCollection::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:mtm.event.action.ActionDescriptorCollection.data)
  return &data_;
}
inline const ::mtm::event::action::ActionDescriptor& ActionDescriptorCollection::data(int index) const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptorCollection.data)
  return data_.Get(index);
}
inline ::mtm::event::action::ActionDescriptor* ActionDescriptorCollection::add_data() {
  // @@protoc_insertion_point(field_add:mtm.event.action.ActionDescriptorCollection.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::event::action::ActionDescriptor >&
ActionDescriptorCollection::data() const {
  // @@protoc_insertion_point(field_list:mtm.event.action.ActionDescriptorCollection.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace action
}  // namespace event
}  // namespace mtm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto
