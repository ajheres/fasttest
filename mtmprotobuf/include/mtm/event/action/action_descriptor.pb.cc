// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/event/action/action_descriptor.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mtm/event/action/action_descriptor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mtm {
namespace event {
namespace action {

namespace {

const ::google::protobuf::Descriptor* ActionDescriptor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionDescriptor_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionDescriptorCollection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionDescriptorCollection_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto() {
  protobuf_AddDesc_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mtm/event/action/action_descriptor.proto");
  GOOGLE_CHECK(file != NULL);
  ActionDescriptor_descriptor_ = file->message_type(0);
  static const int ActionDescriptor_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, descriptorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, providerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, displayname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, shortdisplayname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, removed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, arguments_),
  };
  ActionDescriptor_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActionDescriptor_descriptor_,
      ActionDescriptor::default_instance_,
      ActionDescriptor_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActionDescriptor),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptor, _is_default_instance_));
  ActionDescriptorCollection_descriptor_ = file->message_type(1);
  static const int ActionDescriptorCollection_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptorCollection, data_),
  };
  ActionDescriptorCollection_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActionDescriptorCollection_descriptor_,
      ActionDescriptorCollection::default_instance_,
      ActionDescriptorCollection_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActionDescriptorCollection),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptorCollection, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionDescriptorCollection, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActionDescriptor_descriptor_, &ActionDescriptor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActionDescriptorCollection_descriptor_, &ActionDescriptorCollection::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto() {
  delete ActionDescriptor::default_instance_;
  delete ActionDescriptor_reflection_;
  delete ActionDescriptorCollection::default_instance_;
  delete ActionDescriptorCollection_reflection_;
}

void protobuf_AddDesc_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::mtm::event::protobuf_AddDesc_mtm_2fevent_2fargument_5fdescriptor_2eproto();
  ::mtm::protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n(mtm/event/action/action_descriptor.pro"
    "to\022\020mtm.event.action\032\037google/protobuf/ti"
    "mestamp.proto\032\036google/protobuf/wrappers."
    "proto\032#mtm/event/argument_descriptor.pro"
    "to\032\026mtm/common_types.proto\"\212\003\n\020ActionDes"
    "criptor\022\037\n\014descriptorId\030\001 \001(\0132\t.mtm.Uuid"
    "\022\017\n\007version\030\002 \001(\r\022\035\n\nproviderId\030\003 \001(\0132\t."
    "mtm.Uuid\0221\n\013displayName\030\005 \001(\0132\034.google.p"
    "rotobuf.StringValue\0226\n\020shortDisplayName\030"
    "\006 \001(\0132\034.google.protobuf.StringValue\0221\n\013d"
    "escription\030\007 \001(\0132\034.google.protobuf.Strin"
    "gValue\022(\n\004time\030\010 \001(\0132\032.google.protobuf.T"
    "imestamp\022+\n\007removed\030\t \001(\0132\032.google.proto"
    "buf.BoolValue\0220\n\targuments\030\n \003(\0132\035.mtm.e"
    "vent.ArgumentDescriptor\"N\n\032ActionDescrip"
    "torCollection\0220\n\004data\030\001 \003(\0132\".mtm.event."
    "action.ActionDescriptorb\006proto3", 671);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mtm/event/action/action_descriptor.proto", &protobuf_RegisterTypes);
  ActionDescriptor::default_instance_ = new ActionDescriptor();
  ActionDescriptorCollection::default_instance_ = new ActionDescriptorCollection();
  ActionDescriptor::default_instance_->InitAsDefaultInstance();
  ActionDescriptorCollection::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto {
  StaticDescriptorInitializer_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto() {
    protobuf_AddDesc_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto();
  }
} static_descriptor_initializer_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionDescriptor::kDescriptorIdFieldNumber;
const int ActionDescriptor::kVersionFieldNumber;
const int ActionDescriptor::kProviderIdFieldNumber;
const int ActionDescriptor::kDisplayNameFieldNumber;
const int ActionDescriptor::kShortDisplayNameFieldNumber;
const int ActionDescriptor::kDescriptionFieldNumber;
const int ActionDescriptor::kTimeFieldNumber;
const int ActionDescriptor::kRemovedFieldNumber;
const int ActionDescriptor::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionDescriptor::ActionDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.event.action.ActionDescriptor)
}

void ActionDescriptor::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  descriptorid_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
  providerid_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
  displayname_ = const_cast< ::google::protobuf::StringValue*>(&::google::protobuf::StringValue::default_instance());
  shortdisplayname_ = const_cast< ::google::protobuf::StringValue*>(&::google::protobuf::StringValue::default_instance());
  description_ = const_cast< ::google::protobuf::StringValue*>(&::google::protobuf::StringValue::default_instance());
  time_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
  removed_ = const_cast< ::google::protobuf::BoolValue*>(&::google::protobuf::BoolValue::default_instance());
}

ActionDescriptor::ActionDescriptor(const ActionDescriptor& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.event.action.ActionDescriptor)
}

void ActionDescriptor::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  descriptorid_ = NULL;
  version_ = 0u;
  providerid_ = NULL;
  displayname_ = NULL;
  shortdisplayname_ = NULL;
  description_ = NULL;
  time_ = NULL;
  removed_ = NULL;
}

ActionDescriptor::~ActionDescriptor() {
  // @@protoc_insertion_point(destructor:mtm.event.action.ActionDescriptor)
  SharedDtor();
}

void ActionDescriptor::SharedDtor() {
  if (this != default_instance_) {
    delete descriptorid_;
    delete providerid_;
    delete displayname_;
    delete shortdisplayname_;
    delete description_;
    delete time_;
    delete removed_;
  }
}

void ActionDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionDescriptor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionDescriptor_descriptor_;
}

const ActionDescriptor& ActionDescriptor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto();
  return *default_instance_;
}

ActionDescriptor* ActionDescriptor::default_instance_ = NULL;

ActionDescriptor* ActionDescriptor::New(::google::protobuf::Arena* arena) const {
  ActionDescriptor* n = new ActionDescriptor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.event.action.ActionDescriptor)
  if (GetArenaNoVirtual() == NULL && descriptorid_ != NULL) delete descriptorid_;
  descriptorid_ = NULL;
  version_ = 0u;
  if (GetArenaNoVirtual() == NULL && providerid_ != NULL) delete providerid_;
  providerid_ = NULL;
  if (GetArenaNoVirtual() == NULL && displayname_ != NULL) delete displayname_;
  displayname_ = NULL;
  if (GetArenaNoVirtual() == NULL && shortdisplayname_ != NULL) delete shortdisplayname_;
  shortdisplayname_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) delete description_;
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
  if (GetArenaNoVirtual() == NULL && removed_ != NULL) delete removed_;
  removed_ = NULL;
  arguments_.Clear();
}

bool ActionDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.event.action.ActionDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mtm.Uuid descriptorId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_descriptorid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // optional uint32 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_providerId;
        break;
      }

      // optional .mtm.Uuid providerId = 3;
      case 3: {
        if (tag == 26) {
         parse_providerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_providerid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_displayName;
        break;
      }

      // optional .google.protobuf.StringValue displayName = 5;
      case 5: {
        if (tag == 42) {
         parse_displayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_displayname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_shortDisplayName;
        break;
      }

      // optional .google.protobuf.StringValue shortDisplayName = 6;
      case 6: {
        if (tag == 50) {
         parse_shortDisplayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shortdisplayname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_description;
        break;
      }

      // optional .google.protobuf.StringValue description = 7;
      case 7: {
        if (tag == 58) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_time;
        break;
      }

      // optional .google.protobuf.Timestamp time = 8;
      case 8: {
        if (tag == 66) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_removed;
        break;
      }

      // optional .google.protobuf.BoolValue removed = 9;
      case 9: {
        if (tag == 74) {
         parse_removed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_removed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_arguments;
        break;
      }

      // repeated .mtm.event.ArgumentDescriptor arguments = 10;
      case 10: {
        if (tag == 82) {
         parse_arguments:
          DO_(input->IncrementRecursionDepth());
         parse_loop_arguments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_arguments;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.event.action.ActionDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.event.action.ActionDescriptor)
  return false;
#undef DO_
}

void ActionDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.event.action.ActionDescriptor)
  // optional .mtm.Uuid descriptorId = 1;
  if (this->has_descriptorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->descriptorid_, output);
  }

  // optional uint32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // optional .mtm.Uuid providerId = 3;
  if (this->has_providerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->providerid_, output);
  }

  // optional .google.protobuf.StringValue displayName = 5;
  if (this->has_displayname()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->displayname_, output);
  }

  // optional .google.protobuf.StringValue shortDisplayName = 6;
  if (this->has_shortdisplayname()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->shortdisplayname_, output);
  }

  // optional .google.protobuf.StringValue description = 7;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->description_, output);
  }

  // optional .google.protobuf.Timestamp time = 8;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->time_, output);
  }

  // optional .google.protobuf.BoolValue removed = 9;
  if (this->has_removed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->removed_, output);
  }

  // repeated .mtm.event.ArgumentDescriptor arguments = 10;
  for (unsigned int i = 0, n = this->arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->arguments(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.event.action.ActionDescriptor)
}

::google::protobuf::uint8* ActionDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.event.action.ActionDescriptor)
  // optional .mtm.Uuid descriptorId = 1;
  if (this->has_descriptorid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->descriptorid_, false, target);
  }

  // optional uint32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // optional .mtm.Uuid providerId = 3;
  if (this->has_providerid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->providerid_, false, target);
  }

  // optional .google.protobuf.StringValue displayName = 5;
  if (this->has_displayname()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->displayname_, false, target);
  }

  // optional .google.protobuf.StringValue shortDisplayName = 6;
  if (this->has_shortdisplayname()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->shortdisplayname_, false, target);
  }

  // optional .google.protobuf.StringValue description = 7;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->description_, false, target);
  }

  // optional .google.protobuf.Timestamp time = 8;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->time_, false, target);
  }

  // optional .google.protobuf.BoolValue removed = 9;
  if (this->has_removed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->removed_, false, target);
  }

  // repeated .mtm.event.ArgumentDescriptor arguments = 10;
  for (unsigned int i = 0, n = this->arguments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->arguments(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.event.action.ActionDescriptor)
  return target;
}

int ActionDescriptor::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.event.action.ActionDescriptor)
  int total_size = 0;

  // optional .mtm.Uuid descriptorId = 1;
  if (this->has_descriptorid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->descriptorid_);
  }

  // optional uint32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // optional .mtm.Uuid providerId = 3;
  if (this->has_providerid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->providerid_);
  }

  // optional .google.protobuf.StringValue displayName = 5;
  if (this->has_displayname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->displayname_);
  }

  // optional .google.protobuf.StringValue shortDisplayName = 6;
  if (this->has_shortdisplayname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shortdisplayname_);
  }

  // optional .google.protobuf.StringValue description = 7;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->description_);
  }

  // optional .google.protobuf.Timestamp time = 8;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_);
  }

  // optional .google.protobuf.BoolValue removed = 9;
  if (this->has_removed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->removed_);
  }

  // repeated .mtm.event.ArgumentDescriptor arguments = 10;
  total_size += 1 * this->arguments_size();
  for (int i = 0; i < this->arguments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arguments(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.event.action.ActionDescriptor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActionDescriptor* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.event.action.ActionDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.event.action.ActionDescriptor)
    MergeFrom(*source);
  }
}

void ActionDescriptor::MergeFrom(const ActionDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.event.action.ActionDescriptor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  arguments_.MergeFrom(from.arguments_);
  if (from.has_descriptorid()) {
    mutable_descriptorid()->::mtm::Uuid::MergeFrom(from.descriptorid());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.has_providerid()) {
    mutable_providerid()->::mtm::Uuid::MergeFrom(from.providerid());
  }
  if (from.has_displayname()) {
    mutable_displayname()->::google::protobuf::StringValue::MergeFrom(from.displayname());
  }
  if (from.has_shortdisplayname()) {
    mutable_shortdisplayname()->::google::protobuf::StringValue::MergeFrom(from.shortdisplayname());
  }
  if (from.has_description()) {
    mutable_description()->::google::protobuf::StringValue::MergeFrom(from.description());
  }
  if (from.has_time()) {
    mutable_time()->::google::protobuf::Timestamp::MergeFrom(from.time());
  }
  if (from.has_removed()) {
    mutable_removed()->::google::protobuf::BoolValue::MergeFrom(from.removed());
  }
}

void ActionDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.event.action.ActionDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionDescriptor::CopyFrom(const ActionDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.event.action.ActionDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionDescriptor::IsInitialized() const {

  return true;
}

void ActionDescriptor::Swap(ActionDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionDescriptor::InternalSwap(ActionDescriptor* other) {
  std::swap(descriptorid_, other->descriptorid_);
  std::swap(version_, other->version_);
  std::swap(providerid_, other->providerid_);
  std::swap(displayname_, other->displayname_);
  std::swap(shortdisplayname_, other->shortdisplayname_);
  std::swap(description_, other->description_);
  std::swap(time_, other->time_);
  std::swap(removed_, other->removed_);
  arguments_.UnsafeArenaSwap(&other->arguments_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionDescriptor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionDescriptor_descriptor_;
  metadata.reflection = ActionDescriptor_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionDescriptor

// optional .mtm.Uuid descriptorId = 1;
bool ActionDescriptor::has_descriptorid() const {
  return !_is_default_instance_ && descriptorid_ != NULL;
}
void ActionDescriptor::clear_descriptorid() {
  if (GetArenaNoVirtual() == NULL && descriptorid_ != NULL) delete descriptorid_;
  descriptorid_ = NULL;
}
const ::mtm::Uuid& ActionDescriptor::descriptorid() const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.descriptorId)
  return descriptorid_ != NULL ? *descriptorid_ : *default_instance_->descriptorid_;
}
::mtm::Uuid* ActionDescriptor::mutable_descriptorid() {
  
  if (descriptorid_ == NULL) {
    descriptorid_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.descriptorId)
  return descriptorid_;
}
::mtm::Uuid* ActionDescriptor::release_descriptorid() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.descriptorId)
  
  ::mtm::Uuid* temp = descriptorid_;
  descriptorid_ = NULL;
  return temp;
}
void ActionDescriptor::set_allocated_descriptorid(::mtm::Uuid* descriptorid) {
  delete descriptorid_;
  descriptorid_ = descriptorid;
  if (descriptorid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.descriptorId)
}

// optional uint32 version = 2;
void ActionDescriptor::clear_version() {
  version_ = 0u;
}
 ::google::protobuf::uint32 ActionDescriptor::version() const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.version)
  return version_;
}
 void ActionDescriptor::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtm.event.action.ActionDescriptor.version)
}

// optional .mtm.Uuid providerId = 3;
bool ActionDescriptor::has_providerid() const {
  return !_is_default_instance_ && providerid_ != NULL;
}
void ActionDescriptor::clear_providerid() {
  if (GetArenaNoVirtual() == NULL && providerid_ != NULL) delete providerid_;
  providerid_ = NULL;
}
const ::mtm::Uuid& ActionDescriptor::providerid() const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.providerId)
  return providerid_ != NULL ? *providerid_ : *default_instance_->providerid_;
}
::mtm::Uuid* ActionDescriptor::mutable_providerid() {
  
  if (providerid_ == NULL) {
    providerid_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.providerId)
  return providerid_;
}
::mtm::Uuid* ActionDescriptor::release_providerid() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.providerId)
  
  ::mtm::Uuid* temp = providerid_;
  providerid_ = NULL;
  return temp;
}
void ActionDescriptor::set_allocated_providerid(::mtm::Uuid* providerid) {
  delete providerid_;
  providerid_ = providerid;
  if (providerid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.providerId)
}

// optional .google.protobuf.StringValue displayName = 5;
bool ActionDescriptor::has_displayname() const {
  return !_is_default_instance_ && displayname_ != NULL;
}
void ActionDescriptor::clear_displayname() {
  if (GetArenaNoVirtual() == NULL && displayname_ != NULL) delete displayname_;
  displayname_ = NULL;
}
const ::google::protobuf::StringValue& ActionDescriptor::displayname() const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.displayName)
  return displayname_ != NULL ? *displayname_ : *default_instance_->displayname_;
}
::google::protobuf::StringValue* ActionDescriptor::mutable_displayname() {
  
  if (displayname_ == NULL) {
    displayname_ = new ::google::protobuf::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.displayName)
  return displayname_;
}
::google::protobuf::StringValue* ActionDescriptor::release_displayname() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.displayName)
  
  ::google::protobuf::StringValue* temp = displayname_;
  displayname_ = NULL;
  return temp;
}
void ActionDescriptor::set_allocated_displayname(::google::protobuf::StringValue* displayname) {
  delete displayname_;
  if (displayname != NULL && displayname->GetArena() != NULL) {
    ::google::protobuf::StringValue* new_displayname = new ::google::protobuf::StringValue;
    new_displayname->CopyFrom(*displayname);
    displayname = new_displayname;
  }
  displayname_ = displayname;
  if (displayname) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.displayName)
}

// optional .google.protobuf.StringValue shortDisplayName = 6;
bool ActionDescriptor::has_shortdisplayname() const {
  return !_is_default_instance_ && shortdisplayname_ != NULL;
}
void ActionDescriptor::clear_shortdisplayname() {
  if (GetArenaNoVirtual() == NULL && shortdisplayname_ != NULL) delete shortdisplayname_;
  shortdisplayname_ = NULL;
}
const ::google::protobuf::StringValue& ActionDescriptor::shortdisplayname() const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.shortDisplayName)
  return shortdisplayname_ != NULL ? *shortdisplayname_ : *default_instance_->shortdisplayname_;
}
::google::protobuf::StringValue* ActionDescriptor::mutable_shortdisplayname() {
  
  if (shortdisplayname_ == NULL) {
    shortdisplayname_ = new ::google::protobuf::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.shortDisplayName)
  return shortdisplayname_;
}
::google::protobuf::StringValue* ActionDescriptor::release_shortdisplayname() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.shortDisplayName)
  
  ::google::protobuf::StringValue* temp = shortdisplayname_;
  shortdisplayname_ = NULL;
  return temp;
}
void ActionDescriptor::set_allocated_shortdisplayname(::google::protobuf::StringValue* shortdisplayname) {
  delete shortdisplayname_;
  if (shortdisplayname != NULL && shortdisplayname->GetArena() != NULL) {
    ::google::protobuf::StringValue* new_shortdisplayname = new ::google::protobuf::StringValue;
    new_shortdisplayname->CopyFrom(*shortdisplayname);
    shortdisplayname = new_shortdisplayname;
  }
  shortdisplayname_ = shortdisplayname;
  if (shortdisplayname) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.shortDisplayName)
}

// optional .google.protobuf.StringValue description = 7;
bool ActionDescriptor::has_description() const {
  return !_is_default_instance_ && description_ != NULL;
}
void ActionDescriptor::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) delete description_;
  description_ = NULL;
}
const ::google::protobuf::StringValue& ActionDescriptor::description() const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.description)
  return description_ != NULL ? *description_ : *default_instance_->description_;
}
::google::protobuf::StringValue* ActionDescriptor::mutable_description() {
  
  if (description_ == NULL) {
    description_ = new ::google::protobuf::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.description)
  return description_;
}
::google::protobuf::StringValue* ActionDescriptor::release_description() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.description)
  
  ::google::protobuf::StringValue* temp = description_;
  description_ = NULL;
  return temp;
}
void ActionDescriptor::set_allocated_description(::google::protobuf::StringValue* description) {
  delete description_;
  if (description != NULL && description->GetArena() != NULL) {
    ::google::protobuf::StringValue* new_description = new ::google::protobuf::StringValue;
    new_description->CopyFrom(*description);
    description = new_description;
  }
  description_ = description;
  if (description) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.description)
}

// optional .google.protobuf.Timestamp time = 8;
bool ActionDescriptor::has_time() const {
  return !_is_default_instance_ && time_ != NULL;
}
void ActionDescriptor::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
}
const ::google::protobuf::Timestamp& ActionDescriptor::time() const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.time)
  return time_ != NULL ? *time_ : *default_instance_->time_;
}
::google::protobuf::Timestamp* ActionDescriptor::mutable_time() {
  
  if (time_ == NULL) {
    time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.time)
  return time_;
}
::google::protobuf::Timestamp* ActionDescriptor::release_time() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.time)
  
  ::google::protobuf::Timestamp* temp = time_;
  time_ = NULL;
  return temp;
}
void ActionDescriptor::set_allocated_time(::google::protobuf::Timestamp* time) {
  delete time_;
  if (time != NULL && time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_time = new ::google::protobuf::Timestamp;
    new_time->CopyFrom(*time);
    time = new_time;
  }
  time_ = time;
  if (time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.time)
}

// optional .google.protobuf.BoolValue removed = 9;
bool ActionDescriptor::has_removed() const {
  return !_is_default_instance_ && removed_ != NULL;
}
void ActionDescriptor::clear_removed() {
  if (GetArenaNoVirtual() == NULL && removed_ != NULL) delete removed_;
  removed_ = NULL;
}
const ::google::protobuf::BoolValue& ActionDescriptor::removed() const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.removed)
  return removed_ != NULL ? *removed_ : *default_instance_->removed_;
}
::google::protobuf::BoolValue* ActionDescriptor::mutable_removed() {
  
  if (removed_ == NULL) {
    removed_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.removed)
  return removed_;
}
::google::protobuf::BoolValue* ActionDescriptor::release_removed() {
  // @@protoc_insertion_point(field_release:mtm.event.action.ActionDescriptor.removed)
  
  ::google::protobuf::BoolValue* temp = removed_;
  removed_ = NULL;
  return temp;
}
void ActionDescriptor::set_allocated_removed(::google::protobuf::BoolValue* removed) {
  delete removed_;
  if (removed != NULL && removed->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_removed = new ::google::protobuf::BoolValue;
    new_removed->CopyFrom(*removed);
    removed = new_removed;
  }
  removed_ = removed;
  if (removed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.event.action.ActionDescriptor.removed)
}

// repeated .mtm.event.ArgumentDescriptor arguments = 10;
int ActionDescriptor::arguments_size() const {
  return arguments_.size();
}
void ActionDescriptor::clear_arguments() {
  arguments_.Clear();
}
const ::mtm::event::ArgumentDescriptor& ActionDescriptor::arguments(int index) const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptor.arguments)
  return arguments_.Get(index);
}
::mtm::event::ArgumentDescriptor* ActionDescriptor::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptor.arguments)
  return arguments_.Mutable(index);
}
::mtm::event::ArgumentDescriptor* ActionDescriptor::add_arguments() {
  // @@protoc_insertion_point(field_add:mtm.event.action.ActionDescriptor.arguments)
  return arguments_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >*
ActionDescriptor::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:mtm.event.action.ActionDescriptor.arguments)
  return &arguments_;
}
const ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >&
ActionDescriptor::arguments() const {
  // @@protoc_insertion_point(field_list:mtm.event.action.ActionDescriptor.arguments)
  return arguments_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionDescriptorCollection::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionDescriptorCollection::ActionDescriptorCollection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.event.action.ActionDescriptorCollection)
}

void ActionDescriptorCollection::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ActionDescriptorCollection::ActionDescriptorCollection(const ActionDescriptorCollection& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.event.action.ActionDescriptorCollection)
}

void ActionDescriptorCollection::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ActionDescriptorCollection::~ActionDescriptorCollection() {
  // @@protoc_insertion_point(destructor:mtm.event.action.ActionDescriptorCollection)
  SharedDtor();
}

void ActionDescriptorCollection::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActionDescriptorCollection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionDescriptorCollection::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionDescriptorCollection_descriptor_;
}

const ActionDescriptorCollection& ActionDescriptorCollection::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fevent_2faction_2faction_5fdescriptor_2eproto();
  return *default_instance_;
}

ActionDescriptorCollection* ActionDescriptorCollection::default_instance_ = NULL;

ActionDescriptorCollection* ActionDescriptorCollection::New(::google::protobuf::Arena* arena) const {
  ActionDescriptorCollection* n = new ActionDescriptorCollection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionDescriptorCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.event.action.ActionDescriptorCollection)
  data_.Clear();
}

bool ActionDescriptorCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.event.action.ActionDescriptorCollection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mtm.event.action.ActionDescriptor data = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.event.action.ActionDescriptorCollection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.event.action.ActionDescriptorCollection)
  return false;
#undef DO_
}

void ActionDescriptorCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.event.action.ActionDescriptorCollection)
  // repeated .mtm.event.action.ActionDescriptor data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.event.action.ActionDescriptorCollection)
}

::google::protobuf::uint8* ActionDescriptorCollection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.event.action.ActionDescriptorCollection)
  // repeated .mtm.event.action.ActionDescriptor data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.event.action.ActionDescriptorCollection)
  return target;
}

int ActionDescriptorCollection::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.event.action.ActionDescriptorCollection)
  int total_size = 0;

  // repeated .mtm.event.action.ActionDescriptor data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionDescriptorCollection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.event.action.ActionDescriptorCollection)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActionDescriptorCollection* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionDescriptorCollection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.event.action.ActionDescriptorCollection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.event.action.ActionDescriptorCollection)
    MergeFrom(*source);
  }
}

void ActionDescriptorCollection::MergeFrom(const ActionDescriptorCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.event.action.ActionDescriptorCollection)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
}

void ActionDescriptorCollection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.event.action.ActionDescriptorCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionDescriptorCollection::CopyFrom(const ActionDescriptorCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.event.action.ActionDescriptorCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionDescriptorCollection::IsInitialized() const {

  return true;
}

void ActionDescriptorCollection::Swap(ActionDescriptorCollection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionDescriptorCollection::InternalSwap(ActionDescriptorCollection* other) {
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionDescriptorCollection::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionDescriptorCollection_descriptor_;
  metadata.reflection = ActionDescriptorCollection_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionDescriptorCollection

// repeated .mtm.event.action.ActionDescriptor data = 1;
int ActionDescriptorCollection::data_size() const {
  return data_.size();
}
void ActionDescriptorCollection::clear_data() {
  data_.Clear();
}
const ::mtm::event::action::ActionDescriptor& ActionDescriptorCollection::data(int index) const {
  // @@protoc_insertion_point(field_get:mtm.event.action.ActionDescriptorCollection.data)
  return data_.Get(index);
}
::mtm::event::action::ActionDescriptor* ActionDescriptorCollection::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.event.action.ActionDescriptorCollection.data)
  return data_.Mutable(index);
}
::mtm::event::action::ActionDescriptor* ActionDescriptorCollection::add_data() {
  // @@protoc_insertion_point(field_add:mtm.event.action.ActionDescriptorCollection.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtm::event::action::ActionDescriptor >*
ActionDescriptorCollection::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:mtm.event.action.ActionDescriptorCollection.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::mtm::event::action::ActionDescriptor >&
ActionDescriptorCollection::data() const {
  // @@protoc_insertion_point(field_list:mtm.event.action.ActionDescriptorCollection.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace action
}  // namespace event
}  // namespace mtm

// @@protoc_insertion_point(global_scope)
