// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/alert/model/alert_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mtm/alert/model/alert_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mtm {
namespace alert {
namespace model {

namespace {

const ::google::protobuf::Descriptor* AlertInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlertInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlertInfo_RolesAcknowledgedCountEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AlertLevelValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlertLevelValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlertInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlertInfoList_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlertInfoHistory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlertInfoHistory_reflection_ = NULL;
struct AlertInfoHistoryOneofInstance {
  const ::mtm::alert::model::Activated* activated_;
  const ::mtm::alert::model::Deactivated* deactivated_;
  const ::mtm::alert::model::StateChanged* state_changed_;
  const ::mtm::alert::model::Acknowledged* acknowledged_;
  const ::mtm::alert::model::Unacknowledged* unacknowledged_;
  const ::mtm::alert::model::CommentAdded* comment_added_;
  const ::mtm::alert::model::AutoRemoveEnabled* auto_remove_enabled_;
  const ::mtm::alert::model::AutoRemoveDisabled* auto_remove_disabled_;
  const ::mtm::alert::model::Removed* removed_;
}* AlertInfoHistory_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Activated_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Activated_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deactivated_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deactivated_reflection_ = NULL;
const ::google::protobuf::Descriptor* StateChanged_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StateChanged_reflection_ = NULL;
const ::google::protobuf::Descriptor* Acknowledged_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Acknowledged_reflection_ = NULL;
const ::google::protobuf::Descriptor* Unacknowledged_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Unacknowledged_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommentAdded_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommentAdded_reflection_ = NULL;
const ::google::protobuf::Descriptor* AutoRemoveEnabled_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AutoRemoveEnabled_reflection_ = NULL;
const ::google::protobuf::Descriptor* AutoRemoveDisabled_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AutoRemoveDisabled_reflection_ = NULL;
const ::google::protobuf::Descriptor* Removed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Removed_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AlertLevel_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto() {
  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mtm/alert/model/alert_info.proto");
  GOOGLE_CHECK(file != NULL);
  AlertInfo_descriptor_ = file->message_type(0);
  static const int AlertInfo_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, alert_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, alert_descriptor_type_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, instance_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, acknowledged_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, auto_remove_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, last_update_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, removed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, arguments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, history_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, roles_acknowledged_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, accounts_acknowledged_),
  };
  AlertInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AlertInfo_descriptor_,
      AlertInfo::default_instance_,
      AlertInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(AlertInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfo, _is_default_instance_));
  AlertInfo_RolesAcknowledgedCountEntry_descriptor_ = AlertInfo_descriptor_->nested_type(0);
  AlertLevelValue_descriptor_ = file->message_type(1);
  static const int AlertLevelValue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertLevelValue, value_),
  };
  AlertLevelValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AlertLevelValue_descriptor_,
      AlertLevelValue::default_instance_,
      AlertLevelValue_offsets_,
      -1,
      -1,
      -1,
      sizeof(AlertLevelValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertLevelValue, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertLevelValue, _is_default_instance_));
  AlertInfoList_descriptor_ = file->message_type(2);
  static const int AlertInfoList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfoList, alert_infos_),
  };
  AlertInfoList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AlertInfoList_descriptor_,
      AlertInfoList::default_instance_,
      AlertInfoList_offsets_,
      -1,
      -1,
      -1,
      sizeof(AlertInfoList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfoList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfoList, _is_default_instance_));
  AlertInfoHistory_descriptor_ = file->message_type(3);
  static const int AlertInfoHistory_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfoHistory, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfoHistory, account_id_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AlertInfoHistory_default_oneof_instance_, activated_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AlertInfoHistory_default_oneof_instance_, deactivated_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AlertInfoHistory_default_oneof_instance_, state_changed_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AlertInfoHistory_default_oneof_instance_, acknowledged_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AlertInfoHistory_default_oneof_instance_, unacknowledged_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AlertInfoHistory_default_oneof_instance_, comment_added_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AlertInfoHistory_default_oneof_instance_, auto_remove_enabled_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AlertInfoHistory_default_oneof_instance_, auto_remove_disabled_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AlertInfoHistory_default_oneof_instance_, removed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfoHistory, msg_),
  };
  AlertInfoHistory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AlertInfoHistory_descriptor_,
      AlertInfoHistory::default_instance_,
      AlertInfoHistory_offsets_,
      -1,
      -1,
      -1,
      AlertInfoHistory_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfoHistory, _oneof_case_[0]),
      sizeof(AlertInfoHistory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfoHistory, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertInfoHistory, _is_default_instance_));
  Activated_descriptor_ = file->message_type(4);
  static const int Activated_offsets_[1] = {
  };
  Activated_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Activated_descriptor_,
      Activated::default_instance_,
      Activated_offsets_,
      -1,
      -1,
      -1,
      sizeof(Activated),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activated, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activated, _is_default_instance_));
  Deactivated_descriptor_ = file->message_type(5);
  static const int Deactivated_offsets_[1] = {
  };
  Deactivated_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Deactivated_descriptor_,
      Deactivated::default_instance_,
      Deactivated_offsets_,
      -1,
      -1,
      -1,
      sizeof(Deactivated),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deactivated, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deactivated, _is_default_instance_));
  StateChanged_descriptor_ = file->message_type(6);
  static const int StateChanged_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChanged, new_level_),
  };
  StateChanged_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StateChanged_descriptor_,
      StateChanged::default_instance_,
      StateChanged_offsets_,
      -1,
      -1,
      -1,
      sizeof(StateChanged),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChanged, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChanged, _is_default_instance_));
  Acknowledged_descriptor_ = file->message_type(7);
  static const int Acknowledged_offsets_[1] = {
  };
  Acknowledged_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Acknowledged_descriptor_,
      Acknowledged::default_instance_,
      Acknowledged_offsets_,
      -1,
      -1,
      -1,
      sizeof(Acknowledged),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Acknowledged, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Acknowledged, _is_default_instance_));
  Unacknowledged_descriptor_ = file->message_type(8);
  static const int Unacknowledged_offsets_[1] = {
  };
  Unacknowledged_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Unacknowledged_descriptor_,
      Unacknowledged::default_instance_,
      Unacknowledged_offsets_,
      -1,
      -1,
      -1,
      sizeof(Unacknowledged),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unacknowledged, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unacknowledged, _is_default_instance_));
  CommentAdded_descriptor_ = file->message_type(9);
  static const int CommentAdded_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommentAdded, comment_),
  };
  CommentAdded_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommentAdded_descriptor_,
      CommentAdded::default_instance_,
      CommentAdded_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommentAdded),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommentAdded, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommentAdded, _is_default_instance_));
  AutoRemoveEnabled_descriptor_ = file->message_type(10);
  static const int AutoRemoveEnabled_offsets_[1] = {
  };
  AutoRemoveEnabled_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AutoRemoveEnabled_descriptor_,
      AutoRemoveEnabled::default_instance_,
      AutoRemoveEnabled_offsets_,
      -1,
      -1,
      -1,
      sizeof(AutoRemoveEnabled),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoRemoveEnabled, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoRemoveEnabled, _is_default_instance_));
  AutoRemoveDisabled_descriptor_ = file->message_type(11);
  static const int AutoRemoveDisabled_offsets_[1] = {
  };
  AutoRemoveDisabled_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AutoRemoveDisabled_descriptor_,
      AutoRemoveDisabled::default_instance_,
      AutoRemoveDisabled_offsets_,
      -1,
      -1,
      -1,
      sizeof(AutoRemoveDisabled),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoRemoveDisabled, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AutoRemoveDisabled, _is_default_instance_));
  Removed_descriptor_ = file->message_type(12);
  static const int Removed_offsets_[1] = {
  };
  Removed_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Removed_descriptor_,
      Removed::default_instance_,
      Removed_offsets_,
      -1,
      -1,
      -1,
      sizeof(Removed),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Removed, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Removed, _is_default_instance_));
  AlertLevel_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AlertInfo_descriptor_, &AlertInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        AlertInfo_RolesAcknowledgedCountEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::uint32,
            ::google::protobuf::uint32,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
            0>::CreateDefaultInstance(
                AlertInfo_RolesAcknowledgedCountEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AlertLevelValue_descriptor_, &AlertLevelValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AlertInfoList_descriptor_, &AlertInfoList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AlertInfoHistory_descriptor_, &AlertInfoHistory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Activated_descriptor_, &Activated::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Deactivated_descriptor_, &Deactivated::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StateChanged_descriptor_, &StateChanged::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Acknowledged_descriptor_, &Acknowledged::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Unacknowledged_descriptor_, &Unacknowledged::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommentAdded_descriptor_, &CommentAdded::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AutoRemoveEnabled_descriptor_, &AutoRemoveEnabled::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AutoRemoveDisabled_descriptor_, &AutoRemoveDisabled::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Removed_descriptor_, &Removed::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto() {
  delete AlertInfo::default_instance_;
  delete AlertInfo_reflection_;
  delete AlertLevelValue::default_instance_;
  delete AlertLevelValue_reflection_;
  delete AlertInfoList::default_instance_;
  delete AlertInfoList_reflection_;
  delete AlertInfoHistory::default_instance_;
  delete AlertInfoHistory_default_oneof_instance_;
  delete AlertInfoHistory_reflection_;
  delete Activated::default_instance_;
  delete Activated_reflection_;
  delete Deactivated::default_instance_;
  delete Deactivated_reflection_;
  delete StateChanged::default_instance_;
  delete StateChanged_reflection_;
  delete Acknowledged::default_instance_;
  delete Acknowledged_reflection_;
  delete Unacknowledged::default_instance_;
  delete Unacknowledged_reflection_;
  delete CommentAdded::default_instance_;
  delete CommentAdded_reflection_;
  delete AutoRemoveEnabled::default_instance_;
  delete AutoRemoveEnabled_reflection_;
  delete AutoRemoveDisabled::default_instance_;
  delete AutoRemoveDisabled_reflection_;
  delete Removed::default_instance_;
  delete Removed_reflection_;
}

void protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::mtm::event::protobuf_AddDesc_mtm_2fevent_2fargument_2eproto();
  ::mtm::protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n mtm/alert/model/alert_info.proto\022\017mtm."
    "alert.model\032\037google/protobuf/timestamp.p"
    "roto\032\030mtm/event/argument.proto\032\026mtm/comm"
    "on_types.proto\"\274\004\n\tAlertInfo\022\016\n\006source\030\001"
    " \001(\r\0220\n\013alert_level\030\002 \001(\0162\033.mtm.alert.mo"
    "del.AlertLevel\022+\n\030alert_descriptor_type_"
    "id\030\003 \001(\0132\t.mtm.Uuid\022\036\n\013instance_id\030\004 \001(\013"
    "2\t.mtm.Uuid\022\024\n\014acknowledged\030\005 \001(\010\022\016\n\006act"
    "ive\030\006 \001(\010\022\023\n\013auto_remove\030\007 \001(\010\022\017\n\007versio"
    "n\030\010 \001(\r\022/\n\013last_update\030\t \001(\0132\032.google.pr"
    "otobuf.Timestamp\022\017\n\007removed\030\n \001(\010\022&\n\targ"
    "uments\030\013 \003(\0132\023.mtm.event.Argument\0222\n\007his"
    "tory\030\014 \003(\0132!.mtm.alert.model.AlertInfoHi"
    "story\022X\n\030roles_acknowledged_count\030\r \003(\0132"
    "6.mtm.alert.model.AlertInfo.RolesAcknowl"
    "edgedCountEntry\022\035\n\025accounts_acknowledged"
    "\030\016 \003(\r\032=\n\033RolesAcknowledgedCountEntry\022\013\n"
    "\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"=\n\017AlertLe"
    "velValue\022*\n\005value\030\001 \001(\0162\033.mtm.alert.mode"
    "l.AlertLevel\"@\n\rAlertInfoList\022/\n\013alert_i"
    "nfos\030\001 \003(\0132\032.mtm.alert.model.AlertInfo\"\331"
    "\004\n\020AlertInfoHistory\022-\n\ttimestamp\030\001 \001(\0132\032"
    ".google.protobuf.Timestamp\022\022\n\naccount_id"
    "\030\002 \001(\r\022/\n\tactivated\030\n \001(\0132\032.mtm.alert.mo"
    "del.ActivatedH\000\0223\n\013deactivated\030\013 \001(\0132\034.m"
    "tm.alert.model.DeactivatedH\000\0226\n\rstate_ch"
    "anged\030\014 \001(\0132\035.mtm.alert.model.StateChang"
    "edH\000\0225\n\014acknowledged\030\r \001(\0132\035.mtm.alert.m"
    "odel.AcknowledgedH\000\0229\n\016unacknowledged\030\016 "
    "\001(\0132\037.mtm.alert.model.UnacknowledgedH\000\0226"
    "\n\rcomment_added\030\017 \001(\0132\035.mtm.alert.model."
    "CommentAddedH\000\022A\n\023auto_remove_enabled\030\020 "
    "\001(\0132\".mtm.alert.model.AutoRemoveEnabledH"
    "\000\022C\n\024auto_remove_disabled\030\021 \001(\0132#.mtm.al"
    "ert.model.AutoRemoveDisabledH\000\022+\n\007remove"
    "d\030\022 \001(\0132\030.mtm.alert.model.RemovedH\000B\005\n\003m"
    "sg\"\013\n\tActivated\"\r\n\013Deactivated\">\n\014StateC"
    "hanged\022.\n\tnew_level\030\001 \001(\0162\033.mtm.alert.mo"
    "del.AlertLevel\"\016\n\014Acknowledged\"\020\n\016Unackn"
    "owledged\"\037\n\014CommentAdded\022\017\n\007comment\030\001 \001("
    "\t\"\023\n\021AutoRemoveEnabled\"\024\n\022AutoRemoveDisa"
    "bled\"\t\n\007Removed*o\n\nAlertLevel\022\033\n\027ALERT_L"
    "EVEL_UNSPECIFIED\020\000\022\024\n\020ALERT_LEVEL_INFO\020\001"
    "\022\027\n\023ALERT_LEVEL_WARNING\020\002\022\025\n\021ALERT_LEVEL"
    "_ALARM\020\003b\006proto3", 1776);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mtm/alert/model/alert_info.proto", &protobuf_RegisterTypes);
  AlertInfo::default_instance_ = new AlertInfo();
  AlertLevelValue::default_instance_ = new AlertLevelValue();
  AlertInfoList::default_instance_ = new AlertInfoList();
  AlertInfoHistory::default_instance_ = new AlertInfoHistory();
  AlertInfoHistory_default_oneof_instance_ = new AlertInfoHistoryOneofInstance();
  Activated::default_instance_ = new Activated();
  Deactivated::default_instance_ = new Deactivated();
  StateChanged::default_instance_ = new StateChanged();
  Acknowledged::default_instance_ = new Acknowledged();
  Unacknowledged::default_instance_ = new Unacknowledged();
  CommentAdded::default_instance_ = new CommentAdded();
  AutoRemoveEnabled::default_instance_ = new AutoRemoveEnabled();
  AutoRemoveDisabled::default_instance_ = new AutoRemoveDisabled();
  Removed::default_instance_ = new Removed();
  AlertInfo::default_instance_->InitAsDefaultInstance();
  AlertLevelValue::default_instance_->InitAsDefaultInstance();
  AlertInfoList::default_instance_->InitAsDefaultInstance();
  AlertInfoHistory::default_instance_->InitAsDefaultInstance();
  Activated::default_instance_->InitAsDefaultInstance();
  Deactivated::default_instance_->InitAsDefaultInstance();
  StateChanged::default_instance_->InitAsDefaultInstance();
  Acknowledged::default_instance_->InitAsDefaultInstance();
  Unacknowledged::default_instance_->InitAsDefaultInstance();
  CommentAdded::default_instance_->InitAsDefaultInstance();
  AutoRemoveEnabled::default_instance_->InitAsDefaultInstance();
  AutoRemoveDisabled::default_instance_->InitAsDefaultInstance();
  Removed::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mtm_2falert_2fmodel_2falert_5finfo_2eproto {
  StaticDescriptorInitializer_mtm_2falert_2fmodel_2falert_5finfo_2eproto() {
    protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  }
} static_descriptor_initializer_mtm_2falert_2fmodel_2falert_5finfo_2eproto_;
const ::google::protobuf::EnumDescriptor* AlertLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlertLevel_descriptor_;
}
bool AlertLevel_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertInfo::kSourceFieldNumber;
const int AlertInfo::kAlertLevelFieldNumber;
const int AlertInfo::kAlertDescriptorTypeIdFieldNumber;
const int AlertInfo::kInstanceIdFieldNumber;
const int AlertInfo::kAcknowledgedFieldNumber;
const int AlertInfo::kActiveFieldNumber;
const int AlertInfo::kAutoRemoveFieldNumber;
const int AlertInfo::kVersionFieldNumber;
const int AlertInfo::kLastUpdateFieldNumber;
const int AlertInfo::kRemovedFieldNumber;
const int AlertInfo::kArgumentsFieldNumber;
const int AlertInfo::kHistoryFieldNumber;
const int AlertInfo::kRolesAcknowledgedCountFieldNumber;
const int AlertInfo::kAccountsAcknowledgedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertInfo::AlertInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.AlertInfo)
}

void AlertInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  alert_descriptor_type_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
  instance_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
  last_update_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
}

AlertInfo::AlertInfo(const AlertInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.AlertInfo)
}

void AlertInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  source_ = 0u;
  alert_level_ = 0;
  alert_descriptor_type_id_ = NULL;
  instance_id_ = NULL;
  acknowledged_ = false;
  active_ = false;
  auto_remove_ = false;
  version_ = 0u;
  last_update_ = NULL;
  removed_ = false;
  roles_acknowledged_count_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  roles_acknowledged_count_.SetEntryDescriptor(
      &::mtm::alert::model::AlertInfo_RolesAcknowledgedCountEntry_descriptor_);
}

AlertInfo::~AlertInfo() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.AlertInfo)
  SharedDtor();
}

void AlertInfo::SharedDtor() {
  if (this != default_instance_) {
    delete alert_descriptor_type_id_;
    delete instance_id_;
    delete last_update_;
  }
}

void AlertInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlertInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlertInfo_descriptor_;
}

const AlertInfo& AlertInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

AlertInfo* AlertInfo::default_instance_ = NULL;

AlertInfo* AlertInfo::New(::google::protobuf::Arena* arena) const {
  AlertInfo* n = new AlertInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlertInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.AlertInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AlertInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AlertInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(source_, alert_level_);
  ZR_(acknowledged_, auto_remove_);
  if (GetArenaNoVirtual() == NULL && alert_descriptor_type_id_ != NULL) delete alert_descriptor_type_id_;
  alert_descriptor_type_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && instance_id_ != NULL) delete instance_id_;
  instance_id_ = NULL;
  version_ = 0u;
  if (GetArenaNoVirtual() == NULL && last_update_ != NULL) delete last_update_;
  last_update_ = NULL;
  removed_ = false;

#undef ZR_HELPER_
#undef ZR_

  arguments_.Clear();
  history_.Clear();
  roles_acknowledged_count_.Clear();
  accounts_acknowledged_.Clear();
}

bool AlertInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.AlertInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 source = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_alert_level;
        break;
      }

      // optional .mtm.alert.model.AlertLevel alert_level = 2;
      case 2: {
        if (tag == 16) {
         parse_alert_level:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_alert_level(static_cast< ::mtm::alert::model::AlertLevel >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_alert_descriptor_type_id;
        break;
      }

      // optional .mtm.Uuid alert_descriptor_type_id = 3;
      case 3: {
        if (tag == 26) {
         parse_alert_descriptor_type_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alert_descriptor_type_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_instance_id;
        break;
      }

      // optional .mtm.Uuid instance_id = 4;
      case 4: {
        if (tag == 34) {
         parse_instance_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_instance_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_acknowledged;
        break;
      }

      // optional bool acknowledged = 5;
      case 5: {
        if (tag == 40) {
         parse_acknowledged:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acknowledged_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_active;
        break;
      }

      // optional bool active = 6;
      case 6: {
        if (tag == 48) {
         parse_active:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_auto_remove;
        break;
      }

      // optional bool auto_remove = 7;
      case 7: {
        if (tag == 56) {
         parse_auto_remove:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_remove_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_version;
        break;
      }

      // optional uint32 version = 8;
      case 8: {
        if (tag == 64) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_last_update;
        break;
      }

      // optional .google.protobuf.Timestamp last_update = 9;
      case 9: {
        if (tag == 74) {
         parse_last_update:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_last_update()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_removed;
        break;
      }

      // optional bool removed = 10;
      case 10: {
        if (tag == 80) {
         parse_removed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &removed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_arguments;
        break;
      }

      // repeated .mtm.event.Argument arguments = 11;
      case 11: {
        if (tag == 90) {
         parse_arguments:
          DO_(input->IncrementRecursionDepth());
         parse_loop_arguments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_arguments;
        if (input->ExpectTag(98)) goto parse_loop_history;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .mtm.alert.model.AlertInfoHistory history = 12;
      case 12: {
        if (tag == 98) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_history:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_history()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_loop_history;
        if (input->ExpectTag(106)) goto parse_loop_roles_acknowledged_count;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<uint32, uint32> roles_acknowledged_count = 13;
      case 13: {
        if (tag == 106) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_roles_acknowledged_count:
          AlertInfo_RolesAcknowledgedCountEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&roles_acknowledged_count_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_loop_roles_acknowledged_count;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(114)) goto parse_accounts_acknowledged;
        break;
      }

      // repeated uint32 accounts_acknowledged = 14;
      case 14: {
        if (tag == 114) {
         parse_accounts_acknowledged:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_accounts_acknowledged())));
        } else if (tag == 112) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 114, input, this->mutable_accounts_acknowledged())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.AlertInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.AlertInfo)
  return false;
#undef DO_
}

void AlertInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.AlertInfo)
  // optional uint32 source = 1;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source(), output);
  }

  // optional .mtm.alert.model.AlertLevel alert_level = 2;
  if (this->alert_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->alert_level(), output);
  }

  // optional .mtm.Uuid alert_descriptor_type_id = 3;
  if (this->has_alert_descriptor_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->alert_descriptor_type_id_, output);
  }

  // optional .mtm.Uuid instance_id = 4;
  if (this->has_instance_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->instance_id_, output);
  }

  // optional bool acknowledged = 5;
  if (this->acknowledged() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->acknowledged(), output);
  }

  // optional bool active = 6;
  if (this->active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->active(), output);
  }

  // optional bool auto_remove = 7;
  if (this->auto_remove() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->auto_remove(), output);
  }

  // optional uint32 version = 8;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->version(), output);
  }

  // optional .google.protobuf.Timestamp last_update = 9;
  if (this->has_last_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->last_update_, output);
  }

  // optional bool removed = 10;
  if (this->removed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->removed(), output);
  }

  // repeated .mtm.event.Argument arguments = 11;
  for (unsigned int i = 0, n = this->arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->arguments(i), output);
  }

  // repeated .mtm.alert.model.AlertInfoHistory history = 12;
  for (unsigned int i = 0, n = this->history_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->history(i), output);
  }

  // map<uint32, uint32> roles_acknowledged_count = 13;
  if (!this->roles_acknowledged_count().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterminstic() &&
        this->roles_acknowledged_count().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->roles_acknowledged_count().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->roles_acknowledged_count().begin();
          it != this->roles_acknowledged_count().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AlertInfo_RolesAcknowledgedCountEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(roles_acknowledged_count_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AlertInfo_RolesAcknowledgedCountEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->roles_acknowledged_count().begin();
          it != this->roles_acknowledged_count().end(); ++it) {
        entry.reset(roles_acknowledged_count_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    }
  }

  // repeated uint32 accounts_acknowledged = 14;
  if (this->accounts_acknowledged_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_accounts_acknowledged_cached_byte_size_);
  }
  for (int i = 0; i < this->accounts_acknowledged_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->accounts_acknowledged(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.alert.model.AlertInfo)
}

::google::protobuf::uint8* AlertInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.AlertInfo)
  // optional uint32 source = 1;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source(), target);
  }

  // optional .mtm.alert.model.AlertLevel alert_level = 2;
  if (this->alert_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->alert_level(), target);
  }

  // optional .mtm.Uuid alert_descriptor_type_id = 3;
  if (this->has_alert_descriptor_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->alert_descriptor_type_id_, false, target);
  }

  // optional .mtm.Uuid instance_id = 4;
  if (this->has_instance_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->instance_id_, false, target);
  }

  // optional bool acknowledged = 5;
  if (this->acknowledged() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->acknowledged(), target);
  }

  // optional bool active = 6;
  if (this->active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->active(), target);
  }

  // optional bool auto_remove = 7;
  if (this->auto_remove() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->auto_remove(), target);
  }

  // optional uint32 version = 8;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->version(), target);
  }

  // optional .google.protobuf.Timestamp last_update = 9;
  if (this->has_last_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->last_update_, false, target);
  }

  // optional bool removed = 10;
  if (this->removed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->removed(), target);
  }

  // repeated .mtm.event.Argument arguments = 11;
  for (unsigned int i = 0, n = this->arguments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->arguments(i), false, target);
  }

  // repeated .mtm.alert.model.AlertInfoHistory history = 12;
  for (unsigned int i = 0, n = this->history_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->history(i), false, target);
  }

  // map<uint32, uint32> roles_acknowledged_count = 13;
  if (!this->roles_acknowledged_count().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->roles_acknowledged_count().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->roles_acknowledged_count().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->roles_acknowledged_count().begin();
          it != this->roles_acknowledged_count().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AlertInfo_RolesAcknowledgedCountEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(roles_acknowledged_count_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AlertInfo_RolesAcknowledgedCountEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->roles_acknowledged_count().begin();
          it != this->roles_acknowledged_count().end(); ++it) {
        entry.reset(roles_acknowledged_count_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    }
  }

  // repeated uint32 accounts_acknowledged = 14;
  if (this->accounts_acknowledged_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _accounts_acknowledged_cached_byte_size_, target);
  }
  for (int i = 0; i < this->accounts_acknowledged_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->accounts_acknowledged(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.AlertInfo)
  return target;
}

int AlertInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.AlertInfo)
  int total_size = 0;

  // optional uint32 source = 1;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source());
  }

  // optional .mtm.alert.model.AlertLevel alert_level = 2;
  if (this->alert_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->alert_level());
  }

  // optional .mtm.Uuid alert_descriptor_type_id = 3;
  if (this->has_alert_descriptor_type_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->alert_descriptor_type_id_);
  }

  // optional .mtm.Uuid instance_id = 4;
  if (this->has_instance_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->instance_id_);
  }

  // optional bool acknowledged = 5;
  if (this->acknowledged() != 0) {
    total_size += 1 + 1;
  }

  // optional bool active = 6;
  if (this->active() != 0) {
    total_size += 1 + 1;
  }

  // optional bool auto_remove = 7;
  if (this->auto_remove() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 version = 8;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // optional .google.protobuf.Timestamp last_update = 9;
  if (this->has_last_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->last_update_);
  }

  // optional bool removed = 10;
  if (this->removed() != 0) {
    total_size += 1 + 1;
  }

  // repeated .mtm.event.Argument arguments = 11;
  total_size += 1 * this->arguments_size();
  for (int i = 0; i < this->arguments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arguments(i));
  }

  // repeated .mtm.alert.model.AlertInfoHistory history = 12;
  total_size += 1 * this->history_size();
  for (int i = 0; i < this->history_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->history(i));
  }

  // map<uint32, uint32> roles_acknowledged_count = 13;
  total_size += 1 * this->roles_acknowledged_count_size();
  {
    ::google::protobuf::scoped_ptr<AlertInfo_RolesAcknowledgedCountEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->roles_acknowledged_count().begin();
        it != this->roles_acknowledged_count().end(); ++it) {
      entry.reset(roles_acknowledged_count_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 accounts_acknowledged = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->accounts_acknowledged_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->accounts_acknowledged(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _accounts_acknowledged_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlertInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.AlertInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AlertInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.AlertInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.AlertInfo)
    MergeFrom(*source);
  }
}

void AlertInfo::MergeFrom(const AlertInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.AlertInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  arguments_.MergeFrom(from.arguments_);
  history_.MergeFrom(from.history_);
  roles_acknowledged_count_.MergeFrom(from.roles_acknowledged_count_);
  accounts_acknowledged_.MergeFrom(from.accounts_acknowledged_);
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.alert_level() != 0) {
    set_alert_level(from.alert_level());
  }
  if (from.has_alert_descriptor_type_id()) {
    mutable_alert_descriptor_type_id()->::mtm::Uuid::MergeFrom(from.alert_descriptor_type_id());
  }
  if (from.has_instance_id()) {
    mutable_instance_id()->::mtm::Uuid::MergeFrom(from.instance_id());
  }
  if (from.acknowledged() != 0) {
    set_acknowledged(from.acknowledged());
  }
  if (from.active() != 0) {
    set_active(from.active());
  }
  if (from.auto_remove() != 0) {
    set_auto_remove(from.auto_remove());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.has_last_update()) {
    mutable_last_update()->::google::protobuf::Timestamp::MergeFrom(from.last_update());
  }
  if (from.removed() != 0) {
    set_removed(from.removed());
  }
}

void AlertInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.AlertInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertInfo::CopyFrom(const AlertInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.AlertInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertInfo::IsInitialized() const {

  return true;
}

void AlertInfo::Swap(AlertInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertInfo::InternalSwap(AlertInfo* other) {
  std::swap(source_, other->source_);
  std::swap(alert_level_, other->alert_level_);
  std::swap(alert_descriptor_type_id_, other->alert_descriptor_type_id_);
  std::swap(instance_id_, other->instance_id_);
  std::swap(acknowledged_, other->acknowledged_);
  std::swap(active_, other->active_);
  std::swap(auto_remove_, other->auto_remove_);
  std::swap(version_, other->version_);
  std::swap(last_update_, other->last_update_);
  std::swap(removed_, other->removed_);
  arguments_.UnsafeArenaSwap(&other->arguments_);
  history_.UnsafeArenaSwap(&other->history_);
  roles_acknowledged_count_.Swap(&other->roles_acknowledged_count_);
  accounts_acknowledged_.UnsafeArenaSwap(&other->accounts_acknowledged_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlertInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlertInfo_descriptor_;
  metadata.reflection = AlertInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlertInfo

// optional uint32 source = 1;
void AlertInfo::clear_source() {
  source_ = 0u;
}
 ::google::protobuf::uint32 AlertInfo::source() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.source)
  return source_;
}
 void AlertInfo::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.source)
}

// optional .mtm.alert.model.AlertLevel alert_level = 2;
void AlertInfo::clear_alert_level() {
  alert_level_ = 0;
}
 ::mtm::alert::model::AlertLevel AlertInfo::alert_level() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.alert_level)
  return static_cast< ::mtm::alert::model::AlertLevel >(alert_level_);
}
 void AlertInfo::set_alert_level(::mtm::alert::model::AlertLevel value) {
  
  alert_level_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.alert_level)
}

// optional .mtm.Uuid alert_descriptor_type_id = 3;
bool AlertInfo::has_alert_descriptor_type_id() const {
  return !_is_default_instance_ && alert_descriptor_type_id_ != NULL;
}
void AlertInfo::clear_alert_descriptor_type_id() {
  if (GetArenaNoVirtual() == NULL && alert_descriptor_type_id_ != NULL) delete alert_descriptor_type_id_;
  alert_descriptor_type_id_ = NULL;
}
const ::mtm::Uuid& AlertInfo::alert_descriptor_type_id() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
  return alert_descriptor_type_id_ != NULL ? *alert_descriptor_type_id_ : *default_instance_->alert_descriptor_type_id_;
}
::mtm::Uuid* AlertInfo::mutable_alert_descriptor_type_id() {
  
  if (alert_descriptor_type_id_ == NULL) {
    alert_descriptor_type_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
  return alert_descriptor_type_id_;
}
::mtm::Uuid* AlertInfo::release_alert_descriptor_type_id() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
  
  ::mtm::Uuid* temp = alert_descriptor_type_id_;
  alert_descriptor_type_id_ = NULL;
  return temp;
}
void AlertInfo::set_allocated_alert_descriptor_type_id(::mtm::Uuid* alert_descriptor_type_id) {
  delete alert_descriptor_type_id_;
  alert_descriptor_type_id_ = alert_descriptor_type_id;
  if (alert_descriptor_type_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
}

// optional .mtm.Uuid instance_id = 4;
bool AlertInfo::has_instance_id() const {
  return !_is_default_instance_ && instance_id_ != NULL;
}
void AlertInfo::clear_instance_id() {
  if (GetArenaNoVirtual() == NULL && instance_id_ != NULL) delete instance_id_;
  instance_id_ = NULL;
}
const ::mtm::Uuid& AlertInfo::instance_id() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.instance_id)
  return instance_id_ != NULL ? *instance_id_ : *default_instance_->instance_id_;
}
::mtm::Uuid* AlertInfo::mutable_instance_id() {
  
  if (instance_id_ == NULL) {
    instance_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.instance_id)
  return instance_id_;
}
::mtm::Uuid* AlertInfo::release_instance_id() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfo.instance_id)
  
  ::mtm::Uuid* temp = instance_id_;
  instance_id_ = NULL;
  return temp;
}
void AlertInfo::set_allocated_instance_id(::mtm::Uuid* instance_id) {
  delete instance_id_;
  instance_id_ = instance_id;
  if (instance_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfo.instance_id)
}

// optional bool acknowledged = 5;
void AlertInfo::clear_acknowledged() {
  acknowledged_ = false;
}
 bool AlertInfo::acknowledged() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.acknowledged)
  return acknowledged_;
}
 void AlertInfo::set_acknowledged(bool value) {
  
  acknowledged_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.acknowledged)
}

// optional bool active = 6;
void AlertInfo::clear_active() {
  active_ = false;
}
 bool AlertInfo::active() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.active)
  return active_;
}
 void AlertInfo::set_active(bool value) {
  
  active_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.active)
}

// optional bool auto_remove = 7;
void AlertInfo::clear_auto_remove() {
  auto_remove_ = false;
}
 bool AlertInfo::auto_remove() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.auto_remove)
  return auto_remove_;
}
 void AlertInfo::set_auto_remove(bool value) {
  
  auto_remove_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.auto_remove)
}

// optional uint32 version = 8;
void AlertInfo::clear_version() {
  version_ = 0u;
}
 ::google::protobuf::uint32 AlertInfo::version() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.version)
  return version_;
}
 void AlertInfo::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.version)
}

// optional .google.protobuf.Timestamp last_update = 9;
bool AlertInfo::has_last_update() const {
  return !_is_default_instance_ && last_update_ != NULL;
}
void AlertInfo::clear_last_update() {
  if (GetArenaNoVirtual() == NULL && last_update_ != NULL) delete last_update_;
  last_update_ = NULL;
}
const ::google::protobuf::Timestamp& AlertInfo::last_update() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.last_update)
  return last_update_ != NULL ? *last_update_ : *default_instance_->last_update_;
}
::google::protobuf::Timestamp* AlertInfo::mutable_last_update() {
  
  if (last_update_ == NULL) {
    last_update_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.last_update)
  return last_update_;
}
::google::protobuf::Timestamp* AlertInfo::release_last_update() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfo.last_update)
  
  ::google::protobuf::Timestamp* temp = last_update_;
  last_update_ = NULL;
  return temp;
}
void AlertInfo::set_allocated_last_update(::google::protobuf::Timestamp* last_update) {
  delete last_update_;
  if (last_update != NULL && last_update->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_last_update = new ::google::protobuf::Timestamp;
    new_last_update->CopyFrom(*last_update);
    last_update = new_last_update;
  }
  last_update_ = last_update;
  if (last_update) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfo.last_update)
}

// optional bool removed = 10;
void AlertInfo::clear_removed() {
  removed_ = false;
}
 bool AlertInfo::removed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.removed)
  return removed_;
}
 void AlertInfo::set_removed(bool value) {
  
  removed_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.removed)
}

// repeated .mtm.event.Argument arguments = 11;
int AlertInfo::arguments_size() const {
  return arguments_.size();
}
void AlertInfo::clear_arguments() {
  arguments_.Clear();
}
const ::mtm::event::Argument& AlertInfo::arguments(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.arguments)
  return arguments_.Get(index);
}
::mtm::event::Argument* AlertInfo::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.arguments)
  return arguments_.Mutable(index);
}
::mtm::event::Argument* AlertInfo::add_arguments() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfo.arguments)
  return arguments_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtm::event::Argument >*
AlertInfo::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfo.arguments)
  return &arguments_;
}
const ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument >&
AlertInfo::arguments() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfo.arguments)
  return arguments_;
}

// repeated .mtm.alert.model.AlertInfoHistory history = 12;
int AlertInfo::history_size() const {
  return history_.size();
}
void AlertInfo::clear_history() {
  history_.Clear();
}
const ::mtm::alert::model::AlertInfoHistory& AlertInfo::history(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.history)
  return history_.Get(index);
}
::mtm::alert::model::AlertInfoHistory* AlertInfo::mutable_history(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.history)
  return history_.Mutable(index);
}
::mtm::alert::model::AlertInfoHistory* AlertInfo::add_history() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfo.history)
  return history_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory >*
AlertInfo::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfo.history)
  return &history_;
}
const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory >&
AlertInfo::history() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfo.history)
  return history_;
}

// map<uint32, uint32> roles_acknowledged_count = 13;
int AlertInfo::roles_acknowledged_count_size() const {
  return roles_acknowledged_count_.size();
}
void AlertInfo::clear_roles_acknowledged_count() {
  roles_acknowledged_count_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AlertInfo::roles_acknowledged_count() const {
  // @@protoc_insertion_point(field_map:mtm.alert.model.AlertInfo.roles_acknowledged_count)
  return roles_acknowledged_count_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AlertInfo::mutable_roles_acknowledged_count() {
  // @@protoc_insertion_point(field_mutable_map:mtm.alert.model.AlertInfo.roles_acknowledged_count)
  return roles_acknowledged_count_.MutableMap();
}

// repeated uint32 accounts_acknowledged = 14;
int AlertInfo::accounts_acknowledged_size() const {
  return accounts_acknowledged_.size();
}
void AlertInfo::clear_accounts_acknowledged() {
  accounts_acknowledged_.Clear();
}
 ::google::protobuf::uint32 AlertInfo::accounts_acknowledged(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.accounts_acknowledged)
  return accounts_acknowledged_.Get(index);
}
 void AlertInfo::set_accounts_acknowledged(int index, ::google::protobuf::uint32 value) {
  accounts_acknowledged_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.accounts_acknowledged)
}
 void AlertInfo::add_accounts_acknowledged(::google::protobuf::uint32 value) {
  accounts_acknowledged_.Add(value);
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfo.accounts_acknowledged)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AlertInfo::accounts_acknowledged() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfo.accounts_acknowledged)
  return accounts_acknowledged_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AlertInfo::mutable_accounts_acknowledged() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfo.accounts_acknowledged)
  return &accounts_acknowledged_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertLevelValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertLevelValue::AlertLevelValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.AlertLevelValue)
}

void AlertLevelValue::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AlertLevelValue::AlertLevelValue(const AlertLevelValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.AlertLevelValue)
}

void AlertLevelValue::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  value_ = 0;
}

AlertLevelValue::~AlertLevelValue() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.AlertLevelValue)
  SharedDtor();
}

void AlertLevelValue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AlertLevelValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlertLevelValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlertLevelValue_descriptor_;
}

const AlertLevelValue& AlertLevelValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

AlertLevelValue* AlertLevelValue::default_instance_ = NULL;

AlertLevelValue* AlertLevelValue::New(::google::protobuf::Arena* arena) const {
  AlertLevelValue* n = new AlertLevelValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlertLevelValue::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.AlertLevelValue)
  value_ = 0;
}

bool AlertLevelValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.AlertLevelValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mtm.alert.model.AlertLevel value = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::mtm::alert::model::AlertLevel >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.AlertLevelValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.AlertLevelValue)
  return false;
#undef DO_
}

void AlertLevelValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.AlertLevelValue)
  // optional .mtm.alert.model.AlertLevel value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.alert.model.AlertLevelValue)
}

::google::protobuf::uint8* AlertLevelValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.AlertLevelValue)
  // optional .mtm.alert.model.AlertLevel value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.AlertLevelValue)
  return target;
}

int AlertLevelValue::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.AlertLevelValue)
  int total_size = 0;

  // optional .mtm.alert.model.AlertLevel value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlertLevelValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.AlertLevelValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AlertLevelValue* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertLevelValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.AlertLevelValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.AlertLevelValue)
    MergeFrom(*source);
  }
}

void AlertLevelValue::MergeFrom(const AlertLevelValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.AlertLevelValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void AlertLevelValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.AlertLevelValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertLevelValue::CopyFrom(const AlertLevelValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.AlertLevelValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertLevelValue::IsInitialized() const {

  return true;
}

void AlertLevelValue::Swap(AlertLevelValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertLevelValue::InternalSwap(AlertLevelValue* other) {
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlertLevelValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlertLevelValue_descriptor_;
  metadata.reflection = AlertLevelValue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlertLevelValue

// optional .mtm.alert.model.AlertLevel value = 1;
void AlertLevelValue::clear_value() {
  value_ = 0;
}
 ::mtm::alert::model::AlertLevel AlertLevelValue::value() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertLevelValue.value)
  return static_cast< ::mtm::alert::model::AlertLevel >(value_);
}
 void AlertLevelValue::set_value(::mtm::alert::model::AlertLevel value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertLevelValue.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertInfoList::kAlertInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertInfoList::AlertInfoList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.AlertInfoList)
}

void AlertInfoList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AlertInfoList::AlertInfoList(const AlertInfoList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.AlertInfoList)
}

void AlertInfoList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

AlertInfoList::~AlertInfoList() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.AlertInfoList)
  SharedDtor();
}

void AlertInfoList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AlertInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlertInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlertInfoList_descriptor_;
}

const AlertInfoList& AlertInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

AlertInfoList* AlertInfoList::default_instance_ = NULL;

AlertInfoList* AlertInfoList::New(::google::protobuf::Arena* arena) const {
  AlertInfoList* n = new AlertInfoList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlertInfoList::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.AlertInfoList)
  alert_infos_.Clear();
}

bool AlertInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.AlertInfoList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mtm.alert.model.AlertInfo alert_infos = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_alert_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_alert_infos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_alert_infos;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.AlertInfoList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.AlertInfoList)
  return false;
#undef DO_
}

void AlertInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.AlertInfoList)
  // repeated .mtm.alert.model.AlertInfo alert_infos = 1;
  for (unsigned int i = 0, n = this->alert_infos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->alert_infos(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.alert.model.AlertInfoList)
}

::google::protobuf::uint8* AlertInfoList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.AlertInfoList)
  // repeated .mtm.alert.model.AlertInfo alert_infos = 1;
  for (unsigned int i = 0, n = this->alert_infos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->alert_infos(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.AlertInfoList)
  return target;
}

int AlertInfoList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.AlertInfoList)
  int total_size = 0;

  // repeated .mtm.alert.model.AlertInfo alert_infos = 1;
  total_size += 1 * this->alert_infos_size();
  for (int i = 0; i < this->alert_infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->alert_infos(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlertInfoList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.AlertInfoList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AlertInfoList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertInfoList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.AlertInfoList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.AlertInfoList)
    MergeFrom(*source);
  }
}

void AlertInfoList::MergeFrom(const AlertInfoList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.AlertInfoList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  alert_infos_.MergeFrom(from.alert_infos_);
}

void AlertInfoList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.AlertInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertInfoList::CopyFrom(const AlertInfoList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.AlertInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertInfoList::IsInitialized() const {

  return true;
}

void AlertInfoList::Swap(AlertInfoList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertInfoList::InternalSwap(AlertInfoList* other) {
  alert_infos_.UnsafeArenaSwap(&other->alert_infos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlertInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlertInfoList_descriptor_;
  metadata.reflection = AlertInfoList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlertInfoList

// repeated .mtm.alert.model.AlertInfo alert_infos = 1;
int AlertInfoList::alert_infos_size() const {
  return alert_infos_.size();
}
void AlertInfoList::clear_alert_infos() {
  alert_infos_.Clear();
}
const ::mtm::alert::model::AlertInfo& AlertInfoList::alert_infos(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_.Get(index);
}
::mtm::alert::model::AlertInfo* AlertInfoList::mutable_alert_infos(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_.Mutable(index);
}
::mtm::alert::model::AlertInfo* AlertInfoList::add_alert_infos() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo >*
AlertInfoList::mutable_alert_infos() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfoList.alert_infos)
  return &alert_infos_;
}
const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo >&
AlertInfoList::alert_infos() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertInfoHistory::kTimestampFieldNumber;
const int AlertInfoHistory::kAccountIdFieldNumber;
const int AlertInfoHistory::kActivatedFieldNumber;
const int AlertInfoHistory::kDeactivatedFieldNumber;
const int AlertInfoHistory::kStateChangedFieldNumber;
const int AlertInfoHistory::kAcknowledgedFieldNumber;
const int AlertInfoHistory::kUnacknowledgedFieldNumber;
const int AlertInfoHistory::kCommentAddedFieldNumber;
const int AlertInfoHistory::kAutoRemoveEnabledFieldNumber;
const int AlertInfoHistory::kAutoRemoveDisabledFieldNumber;
const int AlertInfoHistory::kRemovedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertInfoHistory::AlertInfoHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.AlertInfoHistory)
}

void AlertInfoHistory::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  timestamp_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
  AlertInfoHistory_default_oneof_instance_->activated_ = const_cast< ::mtm::alert::model::Activated*>(&::mtm::alert::model::Activated::default_instance());
  AlertInfoHistory_default_oneof_instance_->deactivated_ = const_cast< ::mtm::alert::model::Deactivated*>(&::mtm::alert::model::Deactivated::default_instance());
  AlertInfoHistory_default_oneof_instance_->state_changed_ = const_cast< ::mtm::alert::model::StateChanged*>(&::mtm::alert::model::StateChanged::default_instance());
  AlertInfoHistory_default_oneof_instance_->acknowledged_ = const_cast< ::mtm::alert::model::Acknowledged*>(&::mtm::alert::model::Acknowledged::default_instance());
  AlertInfoHistory_default_oneof_instance_->unacknowledged_ = const_cast< ::mtm::alert::model::Unacknowledged*>(&::mtm::alert::model::Unacknowledged::default_instance());
  AlertInfoHistory_default_oneof_instance_->comment_added_ = const_cast< ::mtm::alert::model::CommentAdded*>(&::mtm::alert::model::CommentAdded::default_instance());
  AlertInfoHistory_default_oneof_instance_->auto_remove_enabled_ = const_cast< ::mtm::alert::model::AutoRemoveEnabled*>(&::mtm::alert::model::AutoRemoveEnabled::default_instance());
  AlertInfoHistory_default_oneof_instance_->auto_remove_disabled_ = const_cast< ::mtm::alert::model::AutoRemoveDisabled*>(&::mtm::alert::model::AutoRemoveDisabled::default_instance());
  AlertInfoHistory_default_oneof_instance_->removed_ = const_cast< ::mtm::alert::model::Removed*>(&::mtm::alert::model::Removed::default_instance());
}

AlertInfoHistory::AlertInfoHistory(const AlertInfoHistory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.AlertInfoHistory)
}

void AlertInfoHistory::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timestamp_ = NULL;
  account_id_ = 0u;
  clear_has_msg();
}

AlertInfoHistory::~AlertInfoHistory() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.AlertInfoHistory)
  SharedDtor();
}

void AlertInfoHistory::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
  if (this != default_instance_) {
    delete timestamp_;
  }
}

void AlertInfoHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlertInfoHistory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlertInfoHistory_descriptor_;
}

const AlertInfoHistory& AlertInfoHistory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

AlertInfoHistory* AlertInfoHistory::default_instance_ = NULL;

AlertInfoHistory* AlertInfoHistory::New(::google::protobuf::Arena* arena) const {
  AlertInfoHistory* n = new AlertInfoHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlertInfoHistory::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:mtm.alert.model.AlertInfoHistory)
  switch(msg_case()) {
    case kActivated: {
      delete msg_.activated_;
      break;
    }
    case kDeactivated: {
      delete msg_.deactivated_;
      break;
    }
    case kStateChanged: {
      delete msg_.state_changed_;
      break;
    }
    case kAcknowledged: {
      delete msg_.acknowledged_;
      break;
    }
    case kUnacknowledged: {
      delete msg_.unacknowledged_;
      break;
    }
    case kCommentAdded: {
      delete msg_.comment_added_;
      break;
    }
    case kAutoRemoveEnabled: {
      delete msg_.auto_remove_enabled_;
      break;
    }
    case kAutoRemoveDisabled: {
      delete msg_.auto_remove_disabled_;
      break;
    }
    case kRemoved: {
      delete msg_.removed_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void AlertInfoHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.AlertInfoHistory)
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
  account_id_ = 0u;
  clear_msg();
}

bool AlertInfoHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.AlertInfoHistory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Timestamp timestamp = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_account_id;
        break;
      }

      // optional uint32 account_id = 2;
      case 2: {
        if (tag == 16) {
         parse_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_activated;
        break;
      }

      // optional .mtm.alert.model.Activated activated = 10;
      case 10: {
        if (tag == 82) {
         parse_activated:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activated()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_deactivated;
        break;
      }

      // optional .mtm.alert.model.Deactivated deactivated = 11;
      case 11: {
        if (tag == 90) {
         parse_deactivated:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deactivated()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_state_changed;
        break;
      }

      // optional .mtm.alert.model.StateChanged state_changed = 12;
      case 12: {
        if (tag == 98) {
         parse_state_changed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_state_changed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_acknowledged;
        break;
      }

      // optional .mtm.alert.model.Acknowledged acknowledged = 13;
      case 13: {
        if (tag == 106) {
         parse_acknowledged:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_acknowledged()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_unacknowledged;
        break;
      }

      // optional .mtm.alert.model.Unacknowledged unacknowledged = 14;
      case 14: {
        if (tag == 114) {
         parse_unacknowledged:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unacknowledged()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_comment_added;
        break;
      }

      // optional .mtm.alert.model.CommentAdded comment_added = 15;
      case 15: {
        if (tag == 122) {
         parse_comment_added:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_comment_added()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_auto_remove_enabled;
        break;
      }

      // optional .mtm.alert.model.AutoRemoveEnabled auto_remove_enabled = 16;
      case 16: {
        if (tag == 130) {
         parse_auto_remove_enabled:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_auto_remove_enabled()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_auto_remove_disabled;
        break;
      }

      // optional .mtm.alert.model.AutoRemoveDisabled auto_remove_disabled = 17;
      case 17: {
        if (tag == 138) {
         parse_auto_remove_disabled:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_auto_remove_disabled()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_removed;
        break;
      }

      // optional .mtm.alert.model.Removed removed = 18;
      case 18: {
        if (tag == 146) {
         parse_removed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_removed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.AlertInfoHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.AlertInfoHistory)
  return false;
#undef DO_
}

void AlertInfoHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.AlertInfoHistory)
  // optional .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->timestamp_, output);
  }

  // optional uint32 account_id = 2;
  if (this->account_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->account_id(), output);
  }

  // optional .mtm.alert.model.Activated activated = 10;
  if (has_activated()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *msg_.activated_, output);
  }

  // optional .mtm.alert.model.Deactivated deactivated = 11;
  if (has_deactivated()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *msg_.deactivated_, output);
  }

  // optional .mtm.alert.model.StateChanged state_changed = 12;
  if (has_state_changed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *msg_.state_changed_, output);
  }

  // optional .mtm.alert.model.Acknowledged acknowledged = 13;
  if (has_acknowledged()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *msg_.acknowledged_, output);
  }

  // optional .mtm.alert.model.Unacknowledged unacknowledged = 14;
  if (has_unacknowledged()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *msg_.unacknowledged_, output);
  }

  // optional .mtm.alert.model.CommentAdded comment_added = 15;
  if (has_comment_added()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *msg_.comment_added_, output);
  }

  // optional .mtm.alert.model.AutoRemoveEnabled auto_remove_enabled = 16;
  if (has_auto_remove_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *msg_.auto_remove_enabled_, output);
  }

  // optional .mtm.alert.model.AutoRemoveDisabled auto_remove_disabled = 17;
  if (has_auto_remove_disabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *msg_.auto_remove_disabled_, output);
  }

  // optional .mtm.alert.model.Removed removed = 18;
  if (has_removed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *msg_.removed_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.alert.model.AlertInfoHistory)
}

::google::protobuf::uint8* AlertInfoHistory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.AlertInfoHistory)
  // optional .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->timestamp_, false, target);
  }

  // optional uint32 account_id = 2;
  if (this->account_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->account_id(), target);
  }

  // optional .mtm.alert.model.Activated activated = 10;
  if (has_activated()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *msg_.activated_, false, target);
  }

  // optional .mtm.alert.model.Deactivated deactivated = 11;
  if (has_deactivated()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *msg_.deactivated_, false, target);
  }

  // optional .mtm.alert.model.StateChanged state_changed = 12;
  if (has_state_changed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *msg_.state_changed_, false, target);
  }

  // optional .mtm.alert.model.Acknowledged acknowledged = 13;
  if (has_acknowledged()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *msg_.acknowledged_, false, target);
  }

  // optional .mtm.alert.model.Unacknowledged unacknowledged = 14;
  if (has_unacknowledged()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *msg_.unacknowledged_, false, target);
  }

  // optional .mtm.alert.model.CommentAdded comment_added = 15;
  if (has_comment_added()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *msg_.comment_added_, false, target);
  }

  // optional .mtm.alert.model.AutoRemoveEnabled auto_remove_enabled = 16;
  if (has_auto_remove_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *msg_.auto_remove_enabled_, false, target);
  }

  // optional .mtm.alert.model.AutoRemoveDisabled auto_remove_disabled = 17;
  if (has_auto_remove_disabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *msg_.auto_remove_disabled_, false, target);
  }

  // optional .mtm.alert.model.Removed removed = 18;
  if (has_removed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *msg_.removed_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.AlertInfoHistory)
  return target;
}

int AlertInfoHistory::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.AlertInfoHistory)
  int total_size = 0;

  // optional .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timestamp_);
  }

  // optional uint32 account_id = 2;
  if (this->account_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_id());
  }

  switch (msg_case()) {
    // optional .mtm.alert.model.Activated activated = 10;
    case kActivated: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.activated_);
      break;
    }
    // optional .mtm.alert.model.Deactivated deactivated = 11;
    case kDeactivated: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.deactivated_);
      break;
    }
    // optional .mtm.alert.model.StateChanged state_changed = 12;
    case kStateChanged: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.state_changed_);
      break;
    }
    // optional .mtm.alert.model.Acknowledged acknowledged = 13;
    case kAcknowledged: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.acknowledged_);
      break;
    }
    // optional .mtm.alert.model.Unacknowledged unacknowledged = 14;
    case kUnacknowledged: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.unacknowledged_);
      break;
    }
    // optional .mtm.alert.model.CommentAdded comment_added = 15;
    case kCommentAdded: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.comment_added_);
      break;
    }
    // optional .mtm.alert.model.AutoRemoveEnabled auto_remove_enabled = 16;
    case kAutoRemoveEnabled: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.auto_remove_enabled_);
      break;
    }
    // optional .mtm.alert.model.AutoRemoveDisabled auto_remove_disabled = 17;
    case kAutoRemoveDisabled: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.auto_remove_disabled_);
      break;
    }
    // optional .mtm.alert.model.Removed removed = 18;
    case kRemoved: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.removed_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlertInfoHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.AlertInfoHistory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AlertInfoHistory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertInfoHistory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.AlertInfoHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.AlertInfoHistory)
    MergeFrom(*source);
  }
}

void AlertInfoHistory::MergeFrom(const AlertInfoHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.AlertInfoHistory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.msg_case()) {
    case kActivated: {
      mutable_activated()->::mtm::alert::model::Activated::MergeFrom(from.activated());
      break;
    }
    case kDeactivated: {
      mutable_deactivated()->::mtm::alert::model::Deactivated::MergeFrom(from.deactivated());
      break;
    }
    case kStateChanged: {
      mutable_state_changed()->::mtm::alert::model::StateChanged::MergeFrom(from.state_changed());
      break;
    }
    case kAcknowledged: {
      mutable_acknowledged()->::mtm::alert::model::Acknowledged::MergeFrom(from.acknowledged());
      break;
    }
    case kUnacknowledged: {
      mutable_unacknowledged()->::mtm::alert::model::Unacknowledged::MergeFrom(from.unacknowledged());
      break;
    }
    case kCommentAdded: {
      mutable_comment_added()->::mtm::alert::model::CommentAdded::MergeFrom(from.comment_added());
      break;
    }
    case kAutoRemoveEnabled: {
      mutable_auto_remove_enabled()->::mtm::alert::model::AutoRemoveEnabled::MergeFrom(from.auto_remove_enabled());
      break;
    }
    case kAutoRemoveDisabled: {
      mutable_auto_remove_disabled()->::mtm::alert::model::AutoRemoveDisabled::MergeFrom(from.auto_remove_disabled());
      break;
    }
    case kRemoved: {
      mutable_removed()->::mtm::alert::model::Removed::MergeFrom(from.removed());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.account_id() != 0) {
    set_account_id(from.account_id());
  }
}

void AlertInfoHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.AlertInfoHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertInfoHistory::CopyFrom(const AlertInfoHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.AlertInfoHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertInfoHistory::IsInitialized() const {

  return true;
}

void AlertInfoHistory::Swap(AlertInfoHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertInfoHistory::InternalSwap(AlertInfoHistory* other) {
  std::swap(timestamp_, other->timestamp_);
  std::swap(account_id_, other->account_id_);
  std::swap(msg_, other->msg_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlertInfoHistory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlertInfoHistory_descriptor_;
  metadata.reflection = AlertInfoHistory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlertInfoHistory

// optional .google.protobuf.Timestamp timestamp = 1;
bool AlertInfoHistory::has_timestamp() const {
  return !_is_default_instance_ && timestamp_ != NULL;
}
void AlertInfoHistory::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
const ::google::protobuf::Timestamp& AlertInfoHistory::timestamp() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.timestamp)
  return timestamp_ != NULL ? *timestamp_ : *default_instance_->timestamp_;
}
::google::protobuf::Timestamp* AlertInfoHistory::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.timestamp)
  return timestamp_;
}
::google::protobuf::Timestamp* AlertInfoHistory::release_timestamp() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
void AlertInfoHistory::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  delete timestamp_;
  if (timestamp != NULL && timestamp->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_timestamp = new ::google::protobuf::Timestamp;
    new_timestamp->CopyFrom(*timestamp);
    timestamp = new_timestamp;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.timestamp)
}

// optional uint32 account_id = 2;
void AlertInfoHistory::clear_account_id() {
  account_id_ = 0u;
}
 ::google::protobuf::uint32 AlertInfoHistory::account_id() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.account_id)
  return account_id_;
}
 void AlertInfoHistory::set_account_id(::google::protobuf::uint32 value) {
  
  account_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfoHistory.account_id)
}

// optional .mtm.alert.model.Activated activated = 10;
bool AlertInfoHistory::has_activated() const {
  return msg_case() == kActivated;
}
void AlertInfoHistory::set_has_activated() {
  _oneof_case_[0] = kActivated;
}
void AlertInfoHistory::clear_activated() {
  if (has_activated()) {
    delete msg_.activated_;
    clear_has_msg();
  }
}
 const ::mtm::alert::model::Activated& AlertInfoHistory::activated() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.activated)
  return has_activated()
      ? *msg_.activated_
      : ::mtm::alert::model::Activated::default_instance();
}
::mtm::alert::model::Activated* AlertInfoHistory::mutable_activated() {
  if (!has_activated()) {
    clear_msg();
    set_has_activated();
    msg_.activated_ = new ::mtm::alert::model::Activated;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.activated)
  return msg_.activated_;
}
::mtm::alert::model::Activated* AlertInfoHistory::release_activated() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.activated)
  if (has_activated()) {
    clear_has_msg();
    ::mtm::alert::model::Activated* temp = msg_.activated_;
    msg_.activated_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AlertInfoHistory::set_allocated_activated(::mtm::alert::model::Activated* activated) {
  clear_msg();
  if (activated) {
    set_has_activated();
    msg_.activated_ = activated;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.activated)
}

// optional .mtm.alert.model.Deactivated deactivated = 11;
bool AlertInfoHistory::has_deactivated() const {
  return msg_case() == kDeactivated;
}
void AlertInfoHistory::set_has_deactivated() {
  _oneof_case_[0] = kDeactivated;
}
void AlertInfoHistory::clear_deactivated() {
  if (has_deactivated()) {
    delete msg_.deactivated_;
    clear_has_msg();
  }
}
 const ::mtm::alert::model::Deactivated& AlertInfoHistory::deactivated() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.deactivated)
  return has_deactivated()
      ? *msg_.deactivated_
      : ::mtm::alert::model::Deactivated::default_instance();
}
::mtm::alert::model::Deactivated* AlertInfoHistory::mutable_deactivated() {
  if (!has_deactivated()) {
    clear_msg();
    set_has_deactivated();
    msg_.deactivated_ = new ::mtm::alert::model::Deactivated;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.deactivated)
  return msg_.deactivated_;
}
::mtm::alert::model::Deactivated* AlertInfoHistory::release_deactivated() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.deactivated)
  if (has_deactivated()) {
    clear_has_msg();
    ::mtm::alert::model::Deactivated* temp = msg_.deactivated_;
    msg_.deactivated_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AlertInfoHistory::set_allocated_deactivated(::mtm::alert::model::Deactivated* deactivated) {
  clear_msg();
  if (deactivated) {
    set_has_deactivated();
    msg_.deactivated_ = deactivated;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.deactivated)
}

// optional .mtm.alert.model.StateChanged state_changed = 12;
bool AlertInfoHistory::has_state_changed() const {
  return msg_case() == kStateChanged;
}
void AlertInfoHistory::set_has_state_changed() {
  _oneof_case_[0] = kStateChanged;
}
void AlertInfoHistory::clear_state_changed() {
  if (has_state_changed()) {
    delete msg_.state_changed_;
    clear_has_msg();
  }
}
 const ::mtm::alert::model::StateChanged& AlertInfoHistory::state_changed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.state_changed)
  return has_state_changed()
      ? *msg_.state_changed_
      : ::mtm::alert::model::StateChanged::default_instance();
}
::mtm::alert::model::StateChanged* AlertInfoHistory::mutable_state_changed() {
  if (!has_state_changed()) {
    clear_msg();
    set_has_state_changed();
    msg_.state_changed_ = new ::mtm::alert::model::StateChanged;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.state_changed)
  return msg_.state_changed_;
}
::mtm::alert::model::StateChanged* AlertInfoHistory::release_state_changed() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.state_changed)
  if (has_state_changed()) {
    clear_has_msg();
    ::mtm::alert::model::StateChanged* temp = msg_.state_changed_;
    msg_.state_changed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AlertInfoHistory::set_allocated_state_changed(::mtm::alert::model::StateChanged* state_changed) {
  clear_msg();
  if (state_changed) {
    set_has_state_changed();
    msg_.state_changed_ = state_changed;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.state_changed)
}

// optional .mtm.alert.model.Acknowledged acknowledged = 13;
bool AlertInfoHistory::has_acknowledged() const {
  return msg_case() == kAcknowledged;
}
void AlertInfoHistory::set_has_acknowledged() {
  _oneof_case_[0] = kAcknowledged;
}
void AlertInfoHistory::clear_acknowledged() {
  if (has_acknowledged()) {
    delete msg_.acknowledged_;
    clear_has_msg();
  }
}
 const ::mtm::alert::model::Acknowledged& AlertInfoHistory::acknowledged() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.acknowledged)
  return has_acknowledged()
      ? *msg_.acknowledged_
      : ::mtm::alert::model::Acknowledged::default_instance();
}
::mtm::alert::model::Acknowledged* AlertInfoHistory::mutable_acknowledged() {
  if (!has_acknowledged()) {
    clear_msg();
    set_has_acknowledged();
    msg_.acknowledged_ = new ::mtm::alert::model::Acknowledged;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.acknowledged)
  return msg_.acknowledged_;
}
::mtm::alert::model::Acknowledged* AlertInfoHistory::release_acknowledged() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.acknowledged)
  if (has_acknowledged()) {
    clear_has_msg();
    ::mtm::alert::model::Acknowledged* temp = msg_.acknowledged_;
    msg_.acknowledged_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AlertInfoHistory::set_allocated_acknowledged(::mtm::alert::model::Acknowledged* acknowledged) {
  clear_msg();
  if (acknowledged) {
    set_has_acknowledged();
    msg_.acknowledged_ = acknowledged;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.acknowledged)
}

// optional .mtm.alert.model.Unacknowledged unacknowledged = 14;
bool AlertInfoHistory::has_unacknowledged() const {
  return msg_case() == kUnacknowledged;
}
void AlertInfoHistory::set_has_unacknowledged() {
  _oneof_case_[0] = kUnacknowledged;
}
void AlertInfoHistory::clear_unacknowledged() {
  if (has_unacknowledged()) {
    delete msg_.unacknowledged_;
    clear_has_msg();
  }
}
 const ::mtm::alert::model::Unacknowledged& AlertInfoHistory::unacknowledged() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.unacknowledged)
  return has_unacknowledged()
      ? *msg_.unacknowledged_
      : ::mtm::alert::model::Unacknowledged::default_instance();
}
::mtm::alert::model::Unacknowledged* AlertInfoHistory::mutable_unacknowledged() {
  if (!has_unacknowledged()) {
    clear_msg();
    set_has_unacknowledged();
    msg_.unacknowledged_ = new ::mtm::alert::model::Unacknowledged;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.unacknowledged)
  return msg_.unacknowledged_;
}
::mtm::alert::model::Unacknowledged* AlertInfoHistory::release_unacknowledged() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.unacknowledged)
  if (has_unacknowledged()) {
    clear_has_msg();
    ::mtm::alert::model::Unacknowledged* temp = msg_.unacknowledged_;
    msg_.unacknowledged_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AlertInfoHistory::set_allocated_unacknowledged(::mtm::alert::model::Unacknowledged* unacknowledged) {
  clear_msg();
  if (unacknowledged) {
    set_has_unacknowledged();
    msg_.unacknowledged_ = unacknowledged;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.unacknowledged)
}

// optional .mtm.alert.model.CommentAdded comment_added = 15;
bool AlertInfoHistory::has_comment_added() const {
  return msg_case() == kCommentAdded;
}
void AlertInfoHistory::set_has_comment_added() {
  _oneof_case_[0] = kCommentAdded;
}
void AlertInfoHistory::clear_comment_added() {
  if (has_comment_added()) {
    delete msg_.comment_added_;
    clear_has_msg();
  }
}
 const ::mtm::alert::model::CommentAdded& AlertInfoHistory::comment_added() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.comment_added)
  return has_comment_added()
      ? *msg_.comment_added_
      : ::mtm::alert::model::CommentAdded::default_instance();
}
::mtm::alert::model::CommentAdded* AlertInfoHistory::mutable_comment_added() {
  if (!has_comment_added()) {
    clear_msg();
    set_has_comment_added();
    msg_.comment_added_ = new ::mtm::alert::model::CommentAdded;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.comment_added)
  return msg_.comment_added_;
}
::mtm::alert::model::CommentAdded* AlertInfoHistory::release_comment_added() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.comment_added)
  if (has_comment_added()) {
    clear_has_msg();
    ::mtm::alert::model::CommentAdded* temp = msg_.comment_added_;
    msg_.comment_added_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AlertInfoHistory::set_allocated_comment_added(::mtm::alert::model::CommentAdded* comment_added) {
  clear_msg();
  if (comment_added) {
    set_has_comment_added();
    msg_.comment_added_ = comment_added;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.comment_added)
}

// optional .mtm.alert.model.AutoRemoveEnabled auto_remove_enabled = 16;
bool AlertInfoHistory::has_auto_remove_enabled() const {
  return msg_case() == kAutoRemoveEnabled;
}
void AlertInfoHistory::set_has_auto_remove_enabled() {
  _oneof_case_[0] = kAutoRemoveEnabled;
}
void AlertInfoHistory::clear_auto_remove_enabled() {
  if (has_auto_remove_enabled()) {
    delete msg_.auto_remove_enabled_;
    clear_has_msg();
  }
}
 const ::mtm::alert::model::AutoRemoveEnabled& AlertInfoHistory::auto_remove_enabled() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
  return has_auto_remove_enabled()
      ? *msg_.auto_remove_enabled_
      : ::mtm::alert::model::AutoRemoveEnabled::default_instance();
}
::mtm::alert::model::AutoRemoveEnabled* AlertInfoHistory::mutable_auto_remove_enabled() {
  if (!has_auto_remove_enabled()) {
    clear_msg();
    set_has_auto_remove_enabled();
    msg_.auto_remove_enabled_ = new ::mtm::alert::model::AutoRemoveEnabled;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
  return msg_.auto_remove_enabled_;
}
::mtm::alert::model::AutoRemoveEnabled* AlertInfoHistory::release_auto_remove_enabled() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
  if (has_auto_remove_enabled()) {
    clear_has_msg();
    ::mtm::alert::model::AutoRemoveEnabled* temp = msg_.auto_remove_enabled_;
    msg_.auto_remove_enabled_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AlertInfoHistory::set_allocated_auto_remove_enabled(::mtm::alert::model::AutoRemoveEnabled* auto_remove_enabled) {
  clear_msg();
  if (auto_remove_enabled) {
    set_has_auto_remove_enabled();
    msg_.auto_remove_enabled_ = auto_remove_enabled;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
}

// optional .mtm.alert.model.AutoRemoveDisabled auto_remove_disabled = 17;
bool AlertInfoHistory::has_auto_remove_disabled() const {
  return msg_case() == kAutoRemoveDisabled;
}
void AlertInfoHistory::set_has_auto_remove_disabled() {
  _oneof_case_[0] = kAutoRemoveDisabled;
}
void AlertInfoHistory::clear_auto_remove_disabled() {
  if (has_auto_remove_disabled()) {
    delete msg_.auto_remove_disabled_;
    clear_has_msg();
  }
}
 const ::mtm::alert::model::AutoRemoveDisabled& AlertInfoHistory::auto_remove_disabled() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
  return has_auto_remove_disabled()
      ? *msg_.auto_remove_disabled_
      : ::mtm::alert::model::AutoRemoveDisabled::default_instance();
}
::mtm::alert::model::AutoRemoveDisabled* AlertInfoHistory::mutable_auto_remove_disabled() {
  if (!has_auto_remove_disabled()) {
    clear_msg();
    set_has_auto_remove_disabled();
    msg_.auto_remove_disabled_ = new ::mtm::alert::model::AutoRemoveDisabled;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
  return msg_.auto_remove_disabled_;
}
::mtm::alert::model::AutoRemoveDisabled* AlertInfoHistory::release_auto_remove_disabled() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
  if (has_auto_remove_disabled()) {
    clear_has_msg();
    ::mtm::alert::model::AutoRemoveDisabled* temp = msg_.auto_remove_disabled_;
    msg_.auto_remove_disabled_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AlertInfoHistory::set_allocated_auto_remove_disabled(::mtm::alert::model::AutoRemoveDisabled* auto_remove_disabled) {
  clear_msg();
  if (auto_remove_disabled) {
    set_has_auto_remove_disabled();
    msg_.auto_remove_disabled_ = auto_remove_disabled;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
}

// optional .mtm.alert.model.Removed removed = 18;
bool AlertInfoHistory::has_removed() const {
  return msg_case() == kRemoved;
}
void AlertInfoHistory::set_has_removed() {
  _oneof_case_[0] = kRemoved;
}
void AlertInfoHistory::clear_removed() {
  if (has_removed()) {
    delete msg_.removed_;
    clear_has_msg();
  }
}
 const ::mtm::alert::model::Removed& AlertInfoHistory::removed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.removed)
  return has_removed()
      ? *msg_.removed_
      : ::mtm::alert::model::Removed::default_instance();
}
::mtm::alert::model::Removed* AlertInfoHistory::mutable_removed() {
  if (!has_removed()) {
    clear_msg();
    set_has_removed();
    msg_.removed_ = new ::mtm::alert::model::Removed;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.removed)
  return msg_.removed_;
}
::mtm::alert::model::Removed* AlertInfoHistory::release_removed() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.removed)
  if (has_removed()) {
    clear_has_msg();
    ::mtm::alert::model::Removed* temp = msg_.removed_;
    msg_.removed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AlertInfoHistory::set_allocated_removed(::mtm::alert::model::Removed* removed) {
  clear_msg();
  if (removed) {
    set_has_removed();
    msg_.removed_ = removed;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.removed)
}

bool AlertInfoHistory::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
void AlertInfoHistory::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
AlertInfoHistory::MsgCase AlertInfoHistory::msg_case() const {
  return AlertInfoHistory::MsgCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Activated::Activated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.Activated)
}

void Activated::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Activated::Activated(const Activated& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.Activated)
}

void Activated::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Activated::~Activated() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.Activated)
  SharedDtor();
}

void Activated::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Activated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Activated::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Activated_descriptor_;
}

const Activated& Activated::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

Activated* Activated::default_instance_ = NULL;

Activated* Activated::New(::google::protobuf::Arena* arena) const {
  Activated* n = new Activated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Activated::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.Activated)
}

bool Activated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.Activated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.Activated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.Activated)
  return false;
#undef DO_
}

void Activated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.Activated)
  // @@protoc_insertion_point(serialize_end:mtm.alert.model.Activated)
}

::google::protobuf::uint8* Activated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.Activated)
  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.Activated)
  return target;
}

int Activated::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.Activated)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Activated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.Activated)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Activated* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Activated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.Activated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.Activated)
    MergeFrom(*source);
  }
}

void Activated::MergeFrom(const Activated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.Activated)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Activated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.Activated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Activated::CopyFrom(const Activated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.Activated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Activated::IsInitialized() const {

  return true;
}

void Activated::Swap(Activated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Activated::InternalSwap(Activated* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Activated::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Activated_descriptor_;
  metadata.reflection = Activated_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Activated

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Deactivated::Deactivated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.Deactivated)
}

void Deactivated::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Deactivated::Deactivated(const Deactivated& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.Deactivated)
}

void Deactivated::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Deactivated::~Deactivated() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.Deactivated)
  SharedDtor();
}

void Deactivated::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deactivated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deactivated::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deactivated_descriptor_;
}

const Deactivated& Deactivated::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

Deactivated* Deactivated::default_instance_ = NULL;

Deactivated* Deactivated::New(::google::protobuf::Arena* arena) const {
  Deactivated* n = new Deactivated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Deactivated::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.Deactivated)
}

bool Deactivated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.Deactivated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.Deactivated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.Deactivated)
  return false;
#undef DO_
}

void Deactivated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.Deactivated)
  // @@protoc_insertion_point(serialize_end:mtm.alert.model.Deactivated)
}

::google::protobuf::uint8* Deactivated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.Deactivated)
  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.Deactivated)
  return target;
}

int Deactivated::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.Deactivated)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deactivated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.Deactivated)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Deactivated* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Deactivated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.Deactivated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.Deactivated)
    MergeFrom(*source);
  }
}

void Deactivated::MergeFrom(const Deactivated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.Deactivated)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Deactivated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.Deactivated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deactivated::CopyFrom(const Deactivated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.Deactivated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deactivated::IsInitialized() const {

  return true;
}

void Deactivated::Swap(Deactivated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Deactivated::InternalSwap(Deactivated* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Deactivated::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deactivated_descriptor_;
  metadata.reflection = Deactivated_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Deactivated

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateChanged::kNewLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateChanged::StateChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.StateChanged)
}

void StateChanged::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StateChanged::StateChanged(const StateChanged& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.StateChanged)
}

void StateChanged::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  new_level_ = 0;
}

StateChanged::~StateChanged() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.StateChanged)
  SharedDtor();
}

void StateChanged::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StateChanged::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateChanged::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StateChanged_descriptor_;
}

const StateChanged& StateChanged::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

StateChanged* StateChanged::default_instance_ = NULL;

StateChanged* StateChanged::New(::google::protobuf::Arena* arena) const {
  StateChanged* n = new StateChanged;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StateChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.StateChanged)
  new_level_ = 0;
}

bool StateChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.StateChanged)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mtm.alert.model.AlertLevel new_level = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_new_level(static_cast< ::mtm::alert::model::AlertLevel >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.StateChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.StateChanged)
  return false;
#undef DO_
}

void StateChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.StateChanged)
  // optional .mtm.alert.model.AlertLevel new_level = 1;
  if (this->new_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->new_level(), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.alert.model.StateChanged)
}

::google::protobuf::uint8* StateChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.StateChanged)
  // optional .mtm.alert.model.AlertLevel new_level = 1;
  if (this->new_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->new_level(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.StateChanged)
  return target;
}

int StateChanged::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.StateChanged)
  int total_size = 0;

  // optional .mtm.alert.model.AlertLevel new_level = 1;
  if (this->new_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->new_level());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.StateChanged)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StateChanged* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StateChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.StateChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.StateChanged)
    MergeFrom(*source);
  }
}

void StateChanged::MergeFrom(const StateChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.StateChanged)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.new_level() != 0) {
    set_new_level(from.new_level());
  }
}

void StateChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.StateChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateChanged::CopyFrom(const StateChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.StateChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateChanged::IsInitialized() const {

  return true;
}

void StateChanged::Swap(StateChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateChanged::InternalSwap(StateChanged* other) {
  std::swap(new_level_, other->new_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateChanged::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StateChanged_descriptor_;
  metadata.reflection = StateChanged_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StateChanged

// optional .mtm.alert.model.AlertLevel new_level = 1;
void StateChanged::clear_new_level() {
  new_level_ = 0;
}
 ::mtm::alert::model::AlertLevel StateChanged::new_level() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.StateChanged.new_level)
  return static_cast< ::mtm::alert::model::AlertLevel >(new_level_);
}
 void StateChanged::set_new_level(::mtm::alert::model::AlertLevel value) {
  
  new_level_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.StateChanged.new_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acknowledged::Acknowledged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.Acknowledged)
}

void Acknowledged::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Acknowledged::Acknowledged(const Acknowledged& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.Acknowledged)
}

void Acknowledged::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Acknowledged::~Acknowledged() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.Acknowledged)
  SharedDtor();
}

void Acknowledged::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Acknowledged::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acknowledged::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Acknowledged_descriptor_;
}

const Acknowledged& Acknowledged::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

Acknowledged* Acknowledged::default_instance_ = NULL;

Acknowledged* Acknowledged::New(::google::protobuf::Arena* arena) const {
  Acknowledged* n = new Acknowledged;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acknowledged::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.Acknowledged)
}

bool Acknowledged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.Acknowledged)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.Acknowledged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.Acknowledged)
  return false;
#undef DO_
}

void Acknowledged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.Acknowledged)
  // @@protoc_insertion_point(serialize_end:mtm.alert.model.Acknowledged)
}

::google::protobuf::uint8* Acknowledged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.Acknowledged)
  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.Acknowledged)
  return target;
}

int Acknowledged::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.Acknowledged)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acknowledged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.Acknowledged)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Acknowledged* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Acknowledged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.Acknowledged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.Acknowledged)
    MergeFrom(*source);
  }
}

void Acknowledged::MergeFrom(const Acknowledged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.Acknowledged)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Acknowledged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.Acknowledged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acknowledged::CopyFrom(const Acknowledged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.Acknowledged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acknowledged::IsInitialized() const {

  return true;
}

void Acknowledged::Swap(Acknowledged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acknowledged::InternalSwap(Acknowledged* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acknowledged::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Acknowledged_descriptor_;
  metadata.reflection = Acknowledged_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Acknowledged

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Unacknowledged::Unacknowledged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.Unacknowledged)
}

void Unacknowledged::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Unacknowledged::Unacknowledged(const Unacknowledged& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.Unacknowledged)
}

void Unacknowledged::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Unacknowledged::~Unacknowledged() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.Unacknowledged)
  SharedDtor();
}

void Unacknowledged::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Unacknowledged::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Unacknowledged::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Unacknowledged_descriptor_;
}

const Unacknowledged& Unacknowledged::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

Unacknowledged* Unacknowledged::default_instance_ = NULL;

Unacknowledged* Unacknowledged::New(::google::protobuf::Arena* arena) const {
  Unacknowledged* n = new Unacknowledged;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Unacknowledged::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.Unacknowledged)
}

bool Unacknowledged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.Unacknowledged)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.Unacknowledged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.Unacknowledged)
  return false;
#undef DO_
}

void Unacknowledged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.Unacknowledged)
  // @@protoc_insertion_point(serialize_end:mtm.alert.model.Unacknowledged)
}

::google::protobuf::uint8* Unacknowledged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.Unacknowledged)
  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.Unacknowledged)
  return target;
}

int Unacknowledged::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.Unacknowledged)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Unacknowledged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.Unacknowledged)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Unacknowledged* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Unacknowledged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.Unacknowledged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.Unacknowledged)
    MergeFrom(*source);
  }
}

void Unacknowledged::MergeFrom(const Unacknowledged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.Unacknowledged)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Unacknowledged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.Unacknowledged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unacknowledged::CopyFrom(const Unacknowledged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.Unacknowledged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unacknowledged::IsInitialized() const {

  return true;
}

void Unacknowledged::Swap(Unacknowledged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Unacknowledged::InternalSwap(Unacknowledged* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Unacknowledged::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Unacknowledged_descriptor_;
  metadata.reflection = Unacknowledged_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Unacknowledged

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommentAdded::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommentAdded::CommentAdded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.CommentAdded)
}

void CommentAdded::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CommentAdded::CommentAdded(const CommentAdded& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.CommentAdded)
}

void CommentAdded::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CommentAdded::~CommentAdded() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.CommentAdded)
  SharedDtor();
}

void CommentAdded::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CommentAdded::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommentAdded::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommentAdded_descriptor_;
}

const CommentAdded& CommentAdded::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

CommentAdded* CommentAdded::default_instance_ = NULL;

CommentAdded* CommentAdded::New(::google::protobuf::Arena* arena) const {
  CommentAdded* n = new CommentAdded;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommentAdded::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.CommentAdded)
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CommentAdded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.CommentAdded)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string comment = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mtm.alert.model.CommentAdded.comment"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.CommentAdded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.CommentAdded)
  return false;
#undef DO_
}

void CommentAdded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.CommentAdded)
  // optional string comment = 1;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.alert.model.CommentAdded.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->comment(), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.alert.model.CommentAdded)
}

::google::protobuf::uint8* CommentAdded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.CommentAdded)
  // optional string comment = 1;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.alert.model.CommentAdded.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->comment(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.CommentAdded)
  return target;
}

int CommentAdded::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.CommentAdded)
  int total_size = 0;

  // optional string comment = 1;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommentAdded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.CommentAdded)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CommentAdded* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommentAdded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.CommentAdded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.CommentAdded)
    MergeFrom(*source);
  }
}

void CommentAdded::MergeFrom(const CommentAdded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.CommentAdded)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
}

void CommentAdded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.CommentAdded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommentAdded::CopyFrom(const CommentAdded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.CommentAdded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommentAdded::IsInitialized() const {

  return true;
}

void CommentAdded::Swap(CommentAdded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommentAdded::InternalSwap(CommentAdded* other) {
  comment_.Swap(&other->comment_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommentAdded::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommentAdded_descriptor_;
  metadata.reflection = CommentAdded_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommentAdded

// optional string comment = 1;
void CommentAdded::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CommentAdded::comment() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.CommentAdded.comment)
  return comment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommentAdded::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.CommentAdded.comment)
}
 void CommentAdded::set_comment(const char* value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.alert.model.CommentAdded.comment)
}
 void CommentAdded::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.alert.model.CommentAdded.comment)
}
 ::std::string* CommentAdded::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.CommentAdded.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CommentAdded::release_comment() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.CommentAdded.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommentAdded::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.CommentAdded.comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoRemoveEnabled::AutoRemoveEnabled()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.AutoRemoveEnabled)
}

void AutoRemoveEnabled::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AutoRemoveEnabled::AutoRemoveEnabled(const AutoRemoveEnabled& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.AutoRemoveEnabled)
}

void AutoRemoveEnabled::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

AutoRemoveEnabled::~AutoRemoveEnabled() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.AutoRemoveEnabled)
  SharedDtor();
}

void AutoRemoveEnabled::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AutoRemoveEnabled::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AutoRemoveEnabled::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AutoRemoveEnabled_descriptor_;
}

const AutoRemoveEnabled& AutoRemoveEnabled::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

AutoRemoveEnabled* AutoRemoveEnabled::default_instance_ = NULL;

AutoRemoveEnabled* AutoRemoveEnabled::New(::google::protobuf::Arena* arena) const {
  AutoRemoveEnabled* n = new AutoRemoveEnabled;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AutoRemoveEnabled::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.AutoRemoveEnabled)
}

bool AutoRemoveEnabled::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.AutoRemoveEnabled)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.AutoRemoveEnabled)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.AutoRemoveEnabled)
  return false;
#undef DO_
}

void AutoRemoveEnabled::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.AutoRemoveEnabled)
  // @@protoc_insertion_point(serialize_end:mtm.alert.model.AutoRemoveEnabled)
}

::google::protobuf::uint8* AutoRemoveEnabled::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.AutoRemoveEnabled)
  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.AutoRemoveEnabled)
  return target;
}

int AutoRemoveEnabled::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.AutoRemoveEnabled)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutoRemoveEnabled::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.AutoRemoveEnabled)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AutoRemoveEnabled* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AutoRemoveEnabled>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.AutoRemoveEnabled)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.AutoRemoveEnabled)
    MergeFrom(*source);
  }
}

void AutoRemoveEnabled::MergeFrom(const AutoRemoveEnabled& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.AutoRemoveEnabled)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void AutoRemoveEnabled::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.AutoRemoveEnabled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoRemoveEnabled::CopyFrom(const AutoRemoveEnabled& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.AutoRemoveEnabled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoRemoveEnabled::IsInitialized() const {

  return true;
}

void AutoRemoveEnabled::Swap(AutoRemoveEnabled* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoRemoveEnabled::InternalSwap(AutoRemoveEnabled* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AutoRemoveEnabled::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AutoRemoveEnabled_descriptor_;
  metadata.reflection = AutoRemoveEnabled_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AutoRemoveEnabled

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoRemoveDisabled::AutoRemoveDisabled()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.AutoRemoveDisabled)
}

void AutoRemoveDisabled::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AutoRemoveDisabled::AutoRemoveDisabled(const AutoRemoveDisabled& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.AutoRemoveDisabled)
}

void AutoRemoveDisabled::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

AutoRemoveDisabled::~AutoRemoveDisabled() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.AutoRemoveDisabled)
  SharedDtor();
}

void AutoRemoveDisabled::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AutoRemoveDisabled::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AutoRemoveDisabled::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AutoRemoveDisabled_descriptor_;
}

const AutoRemoveDisabled& AutoRemoveDisabled::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

AutoRemoveDisabled* AutoRemoveDisabled::default_instance_ = NULL;

AutoRemoveDisabled* AutoRemoveDisabled::New(::google::protobuf::Arena* arena) const {
  AutoRemoveDisabled* n = new AutoRemoveDisabled;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AutoRemoveDisabled::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.AutoRemoveDisabled)
}

bool AutoRemoveDisabled::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.AutoRemoveDisabled)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.AutoRemoveDisabled)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.AutoRemoveDisabled)
  return false;
#undef DO_
}

void AutoRemoveDisabled::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.AutoRemoveDisabled)
  // @@protoc_insertion_point(serialize_end:mtm.alert.model.AutoRemoveDisabled)
}

::google::protobuf::uint8* AutoRemoveDisabled::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.AutoRemoveDisabled)
  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.AutoRemoveDisabled)
  return target;
}

int AutoRemoveDisabled::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.AutoRemoveDisabled)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutoRemoveDisabled::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.AutoRemoveDisabled)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AutoRemoveDisabled* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AutoRemoveDisabled>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.AutoRemoveDisabled)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.AutoRemoveDisabled)
    MergeFrom(*source);
  }
}

void AutoRemoveDisabled::MergeFrom(const AutoRemoveDisabled& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.AutoRemoveDisabled)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void AutoRemoveDisabled::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.AutoRemoveDisabled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoRemoveDisabled::CopyFrom(const AutoRemoveDisabled& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.AutoRemoveDisabled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoRemoveDisabled::IsInitialized() const {

  return true;
}

void AutoRemoveDisabled::Swap(AutoRemoveDisabled* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoRemoveDisabled::InternalSwap(AutoRemoveDisabled* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AutoRemoveDisabled::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AutoRemoveDisabled_descriptor_;
  metadata.reflection = AutoRemoveDisabled_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AutoRemoveDisabled

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Removed::Removed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.Removed)
}

void Removed::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Removed::Removed(const Removed& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.Removed)
}

void Removed::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Removed::~Removed() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.Removed)
  SharedDtor();
}

void Removed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Removed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Removed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Removed_descriptor_;
}

const Removed& Removed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  return *default_instance_;
}

Removed* Removed::default_instance_ = NULL;

Removed* Removed::New(::google::protobuf::Arena* arena) const {
  Removed* n = new Removed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Removed::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.Removed)
}

bool Removed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.Removed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.Removed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.Removed)
  return false;
#undef DO_
}

void Removed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.Removed)
  // @@protoc_insertion_point(serialize_end:mtm.alert.model.Removed)
}

::google::protobuf::uint8* Removed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.Removed)
  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.Removed)
  return target;
}

int Removed::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.Removed)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Removed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.Removed)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Removed* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Removed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.Removed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.Removed)
    MergeFrom(*source);
  }
}

void Removed::MergeFrom(const Removed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.Removed)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Removed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.Removed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Removed::CopyFrom(const Removed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.Removed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Removed::IsInitialized() const {

  return true;
}

void Removed::Swap(Removed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Removed::InternalSwap(Removed* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Removed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Removed_descriptor_;
  metadata.reflection = Removed_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Removed

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace alert
}  // namespace mtm

// @@protoc_insertion_point(global_scope)
