// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/alert/model/alert_descriptor.proto

#ifndef PROTOBUF_INCLUDED_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto
#define PROTOBUF_INCLUDED_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/duration.pb.h>
#include "mtm/common_types.pb.h"
#include "mtm/event/argument_descriptor.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto 

namespace protobuf_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto
namespace mtm {
namespace alert {
namespace model {
class AlertDescriptor;
class AlertDescriptorDefaultTypeInternal;
extern AlertDescriptorDefaultTypeInternal _AlertDescriptor_default_instance_;
class AlertDescriptorList;
class AlertDescriptorListDefaultTypeInternal;
extern AlertDescriptorListDefaultTypeInternal _AlertDescriptorList_default_instance_;
class AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse;
class AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUseDefaultTypeInternal;
extern AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUseDefaultTypeInternal _AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse_default_instance_;
}  // namespace model
}  // namespace alert
}  // namespace mtm
namespace google {
namespace protobuf {
template<> ::mtm::alert::model::AlertDescriptor* Arena::CreateMaybeMessage<::mtm::alert::model::AlertDescriptor>(Arena*);
template<> ::mtm::alert::model::AlertDescriptorList* Arena::CreateMaybeMessage<::mtm::alert::model::AlertDescriptorList>(Arena*);
template<> ::mtm::alert::model::AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse* Arena::CreateMaybeMessage<::mtm::alert::model::AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mtm {
namespace alert {
namespace model {

// ===================================================================

class AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse, 
    ::google::protobuf::uint32, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse, 
    ::google::protobuf::uint32, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > SuperType;
  AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse();
  AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse& other);
  static const AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse*>(&_AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class AlertDescriptor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AlertDescriptor) */ {
 public:
  AlertDescriptor();
  virtual ~AlertDescriptor();

  AlertDescriptor(const AlertDescriptor& from);

  inline AlertDescriptor& operator=(const AlertDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlertDescriptor(AlertDescriptor&& from) noexcept
    : AlertDescriptor() {
    *this = ::std::move(from);
  }

  inline AlertDescriptor& operator=(AlertDescriptor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlertDescriptor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlertDescriptor* internal_default_instance() {
    return reinterpret_cast<const AlertDescriptor*>(
               &_AlertDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AlertDescriptor* other);
  friend void swap(AlertDescriptor& a, AlertDescriptor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlertDescriptor* New() const final {
    return CreateMaybeMessage<AlertDescriptor>(NULL);
  }

  AlertDescriptor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlertDescriptor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlertDescriptor& from);
  void MergeFrom(const AlertDescriptor& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlertDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .mtm.event.ArgumentDescriptor arguments = 8;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 8;
  ::mtm::event::ArgumentDescriptor* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >*
      mutable_arguments();
  const ::mtm::event::ArgumentDescriptor& arguments(int index) const;
  ::mtm::event::ArgumentDescriptor* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >&
      arguments() const;

  // map<uint32, uint32> roles_acknowledge_limit = 11;
  int roles_acknowledge_limit_size() const;
  void clear_roles_acknowledge_limit();
  static const int kRolesAcknowledgeLimitFieldNumber = 11;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      roles_acknowledge_limit() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_roles_acknowledge_limit();

  // repeated uint32 read_access_groups = 13;
  int read_access_groups_size() const;
  void clear_read_access_groups();
  static const int kReadAccessGroupsFieldNumber = 13;
  ::google::protobuf::uint32 read_access_groups(int index) const;
  void set_read_access_groups(int index, ::google::protobuf::uint32 value);
  void add_read_access_groups(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      read_access_groups() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_read_access_groups();

  // repeated uint32 write_access_groups = 14;
  int write_access_groups_size() const;
  void clear_write_access_groups();
  static const int kWriteAccessGroupsFieldNumber = 14;
  ::google::protobuf::uint32 write_access_groups(int index) const;
  void set_write_access_groups(int index, ::google::protobuf::uint32 value);
  void add_write_access_groups(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      write_access_groups() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_write_access_groups();

  // repeated uint32 execute_access_groups = 15;
  int execute_access_groups_size() const;
  void clear_execute_access_groups();
  static const int kExecuteAccessGroupsFieldNumber = 15;
  ::google::protobuf::uint32 execute_access_groups(int index) const;
  void set_execute_access_groups(int index, ::google::protobuf::uint32 value);
  void add_execute_access_groups(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      execute_access_groups() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_execute_access_groups();

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);

  // string format_string = 3;
  void clear_format_string();
  static const int kFormatStringFieldNumber = 3;
  const ::std::string& format_string() const;
  void set_format_string(const ::std::string& value);
  #if LANG_CXX11
  void set_format_string(::std::string&& value);
  #endif
  void set_format_string(const char* value);
  void set_format_string(const char* value, size_t size);
  ::std::string* mutable_format_string();
  ::std::string* release_format_string();
  void set_allocated_format_string(::std::string* format_string);

  // .mtm.Uuid type_id = 1;
  bool has_type_id() const;
  void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  private:
  const ::mtm::Uuid& _internal_type_id() const;
  public:
  const ::mtm::Uuid& type_id() const;
  ::mtm::Uuid* release_type_id();
  ::mtm::Uuid* mutable_type_id();
  void set_allocated_type_id(::mtm::Uuid* type_id);

  // .google.protobuf.Duration auto_remove_timeSpan = 5;
  bool has_auto_remove_timespan() const;
  void clear_auto_remove_timespan();
  static const int kAutoRemoveTimeSpanFieldNumber = 5;
  private:
  const ::google::protobuf::Duration& _internal_auto_remove_timespan() const;
  public:
  const ::google::protobuf::Duration& auto_remove_timespan() const;
  ::google::protobuf::Duration* release_auto_remove_timespan();
  ::google::protobuf::Duration* mutable_auto_remove_timespan();
  void set_allocated_auto_remove_timespan(::google::protobuf::Duration* auto_remove_timespan);

  // .google.protobuf.Timestamp message_time = 9;
  bool has_message_time() const;
  void clear_message_time();
  static const int kMessageTimeFieldNumber = 9;
  private:
  const ::google::protobuf::Timestamp& _internal_message_time() const;
  public:
  const ::google::protobuf::Timestamp& message_time() const;
  ::google::protobuf::Timestamp* release_message_time();
  ::google::protobuf::Timestamp* mutable_message_time();
  void set_allocated_message_time(::google::protobuf::Timestamp* message_time);

  // .mtm.Uuid category = 16;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 16;
  private:
  const ::mtm::Uuid& _internal_category() const;
  public:
  const ::mtm::Uuid& category() const;
  ::mtm::Uuid* release_category();
  ::mtm::Uuid* mutable_category();
  void set_allocated_category(::mtm::Uuid* category);

  // uint32 version = 6;
  void clear_version();
  static const int kVersionFieldNumber = 6;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // bool auto_remove = 4;
  void clear_auto_remove();
  static const int kAutoRemoveFieldNumber = 4;
  bool auto_remove() const;
  void set_auto_remove(bool value);

  // bool removed = 7;
  void clear_removed();
  static const int kRemovedFieldNumber = 7;
  bool removed() const;
  void set_removed(bool value);

  // bool auto_created = 12;
  void clear_auto_created();
  static const int kAutoCreatedFieldNumber = 12;
  bool auto_created() const;
  void set_auto_created(bool value);

  // uint32 alert_server_id = 10;
  void clear_alert_server_id();
  static const int kAlertServerIdFieldNumber = 10;
  ::google::protobuf::uint32 alert_server_id() const;
  void set_alert_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AlertDescriptor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor > arguments_;
  ::google::protobuf::internal::MapField<
      AlertDescriptor_RolesAcknowledgeLimitEntry_DoNotUse,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > roles_acknowledge_limit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > read_access_groups_;
  mutable int _read_access_groups_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > write_access_groups_;
  mutable int _write_access_groups_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > execute_access_groups_;
  mutable int _execute_access_groups_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr format_string_;
  ::mtm::Uuid* type_id_;
  ::google::protobuf::Duration* auto_remove_timespan_;
  ::google::protobuf::Timestamp* message_time_;
  ::mtm::Uuid* category_;
  ::google::protobuf::uint32 version_;
  bool auto_remove_;
  bool removed_;
  bool auto_created_;
  ::google::protobuf::uint32 alert_server_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlertDescriptorList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AlertDescriptorList) */ {
 public:
  AlertDescriptorList();
  virtual ~AlertDescriptorList();

  AlertDescriptorList(const AlertDescriptorList& from);

  inline AlertDescriptorList& operator=(const AlertDescriptorList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlertDescriptorList(AlertDescriptorList&& from) noexcept
    : AlertDescriptorList() {
    *this = ::std::move(from);
  }

  inline AlertDescriptorList& operator=(AlertDescriptorList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlertDescriptorList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlertDescriptorList* internal_default_instance() {
    return reinterpret_cast<const AlertDescriptorList*>(
               &_AlertDescriptorList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AlertDescriptorList* other);
  friend void swap(AlertDescriptorList& a, AlertDescriptorList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlertDescriptorList* New() const final {
    return CreateMaybeMessage<AlertDescriptorList>(NULL);
  }

  AlertDescriptorList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlertDescriptorList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlertDescriptorList& from);
  void MergeFrom(const AlertDescriptorList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlertDescriptorList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtm.alert.model.AlertDescriptor alert_descriptors = 1;
  int alert_descriptors_size() const;
  void clear_alert_descriptors();
  static const int kAlertDescriptorsFieldNumber = 1;
  ::mtm::alert::model::AlertDescriptor* mutable_alert_descriptors(int index);
  ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertDescriptor >*
      mutable_alert_descriptors();
  const ::mtm::alert::model::AlertDescriptor& alert_descriptors(int index) const;
  ::mtm::alert::model::AlertDescriptor* add_alert_descriptors();
  const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertDescriptor >&
      alert_descriptors() const;

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AlertDescriptorList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertDescriptor > alert_descriptors_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AlertDescriptor

// .mtm.Uuid type_id = 1;
inline bool AlertDescriptor::has_type_id() const {
  return this != internal_default_instance() && type_id_ != NULL;
}
inline const ::mtm::Uuid& AlertDescriptor::_internal_type_id() const {
  return *type_id_;
}
inline const ::mtm::Uuid& AlertDescriptor::type_id() const {
  const ::mtm::Uuid* p = type_id_;
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.type_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtm::Uuid*>(
      &::mtm::_Uuid_default_instance_);
}
inline ::mtm::Uuid* AlertDescriptor::release_type_id() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.type_id)
  
  ::mtm::Uuid* temp = type_id_;
  type_id_ = NULL;
  return temp;
}
inline ::mtm::Uuid* AlertDescriptor::mutable_type_id() {
  
  if (type_id_ == NULL) {
    auto* p = CreateMaybeMessage<::mtm::Uuid>(GetArenaNoVirtual());
    type_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.type_id)
  return type_id_;
}
inline void AlertDescriptor::set_allocated_type_id(::mtm::Uuid* type_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_id_);
  }
  if (type_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type_id, submessage_arena);
    }
    
  } else {
    
  }
  type_id_ = type_id;
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.type_id)
}

// string display_name = 2;
inline void AlertDescriptor::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertDescriptor::display_name() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.display_name)
  return display_name_.GetNoArena();
}
inline void AlertDescriptor::set_display_name(const ::std::string& value) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.display_name)
}
#if LANG_CXX11
inline void AlertDescriptor::set_display_name(::std::string&& value) {
  
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtm.alert.model.AlertDescriptor.display_name)
}
#endif
inline void AlertDescriptor::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.alert.model.AlertDescriptor.display_name)
}
inline void AlertDescriptor::set_display_name(const char* value, size_t size) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.alert.model.AlertDescriptor.display_name)
}
inline ::std::string* AlertDescriptor::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertDescriptor::release_display_name() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.display_name)
  
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertDescriptor::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.display_name)
}

// string format_string = 3;
inline void AlertDescriptor::clear_format_string() {
  format_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlertDescriptor::format_string() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.format_string)
  return format_string_.GetNoArena();
}
inline void AlertDescriptor::set_format_string(const ::std::string& value) {
  
  format_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.format_string)
}
#if LANG_CXX11
inline void AlertDescriptor::set_format_string(::std::string&& value) {
  
  format_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtm.alert.model.AlertDescriptor.format_string)
}
#endif
inline void AlertDescriptor::set_format_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  format_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.alert.model.AlertDescriptor.format_string)
}
inline void AlertDescriptor::set_format_string(const char* value, size_t size) {
  
  format_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.alert.model.AlertDescriptor.format_string)
}
inline ::std::string* AlertDescriptor::mutable_format_string() {
  
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.format_string)
  return format_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlertDescriptor::release_format_string() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.format_string)
  
  return format_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlertDescriptor::set_allocated_format_string(::std::string* format_string) {
  if (format_string != NULL) {
    
  } else {
    
  }
  format_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format_string);
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.format_string)
}

// bool auto_remove = 4;
inline void AlertDescriptor::clear_auto_remove() {
  auto_remove_ = false;
}
inline bool AlertDescriptor::auto_remove() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.auto_remove)
  return auto_remove_;
}
inline void AlertDescriptor::set_auto_remove(bool value) {
  
  auto_remove_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.auto_remove)
}

// .google.protobuf.Duration auto_remove_timeSpan = 5;
inline bool AlertDescriptor::has_auto_remove_timespan() const {
  return this != internal_default_instance() && auto_remove_timespan_ != NULL;
}
inline const ::google::protobuf::Duration& AlertDescriptor::_internal_auto_remove_timespan() const {
  return *auto_remove_timespan_;
}
inline const ::google::protobuf::Duration& AlertDescriptor::auto_remove_timespan() const {
  const ::google::protobuf::Duration* p = auto_remove_timespan_;
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.auto_remove_timeSpan)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* AlertDescriptor::release_auto_remove_timespan() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.auto_remove_timeSpan)
  
  ::google::protobuf::Duration* temp = auto_remove_timespan_;
  auto_remove_timespan_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* AlertDescriptor::mutable_auto_remove_timespan() {
  
  if (auto_remove_timespan_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    auto_remove_timespan_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.auto_remove_timeSpan)
  return auto_remove_timespan_;
}
inline void AlertDescriptor::set_allocated_auto_remove_timespan(::google::protobuf::Duration* auto_remove_timespan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(auto_remove_timespan_);
  }
  if (auto_remove_timespan) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(auto_remove_timespan)->GetArena();
    if (message_arena != submessage_arena) {
      auto_remove_timespan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auto_remove_timespan, submessage_arena);
    }
    
  } else {
    
  }
  auto_remove_timespan_ = auto_remove_timespan;
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.auto_remove_timeSpan)
}

// uint32 version = 6;
inline void AlertDescriptor::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 AlertDescriptor::version() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.version)
  return version_;
}
inline void AlertDescriptor::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.version)
}

// bool removed = 7;
inline void AlertDescriptor::clear_removed() {
  removed_ = false;
}
inline bool AlertDescriptor::removed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.removed)
  return removed_;
}
inline void AlertDescriptor::set_removed(bool value) {
  
  removed_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.removed)
}

// repeated .mtm.event.ArgumentDescriptor arguments = 8;
inline int AlertDescriptor::arguments_size() const {
  return arguments_.size();
}
inline ::mtm::event::ArgumentDescriptor* AlertDescriptor::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >*
AlertDescriptor::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertDescriptor.arguments)
  return &arguments_;
}
inline const ::mtm::event::ArgumentDescriptor& AlertDescriptor::arguments(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.arguments)
  return arguments_.Get(index);
}
inline ::mtm::event::ArgumentDescriptor* AlertDescriptor::add_arguments() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertDescriptor.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >&
AlertDescriptor::arguments() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertDescriptor.arguments)
  return arguments_;
}

// .google.protobuf.Timestamp message_time = 9;
inline bool AlertDescriptor::has_message_time() const {
  return this != internal_default_instance() && message_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& AlertDescriptor::_internal_message_time() const {
  return *message_time_;
}
inline const ::google::protobuf::Timestamp& AlertDescriptor::message_time() const {
  const ::google::protobuf::Timestamp* p = message_time_;
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.message_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* AlertDescriptor::release_message_time() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.message_time)
  
  ::google::protobuf::Timestamp* temp = message_time_;
  message_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* AlertDescriptor::mutable_message_time() {
  
  if (message_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    message_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.message_time)
  return message_time_;
}
inline void AlertDescriptor::set_allocated_message_time(::google::protobuf::Timestamp* message_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(message_time_);
  }
  if (message_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(message_time)->GetArena();
    if (message_arena != submessage_arena) {
      message_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message_time, submessage_arena);
    }
    
  } else {
    
  }
  message_time_ = message_time;
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.message_time)
}

// uint32 alert_server_id = 10;
inline void AlertDescriptor::clear_alert_server_id() {
  alert_server_id_ = 0u;
}
inline ::google::protobuf::uint32 AlertDescriptor::alert_server_id() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.alert_server_id)
  return alert_server_id_;
}
inline void AlertDescriptor::set_alert_server_id(::google::protobuf::uint32 value) {
  
  alert_server_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.alert_server_id)
}

// map<uint32, uint32> roles_acknowledge_limit = 11;
inline int AlertDescriptor::roles_acknowledge_limit_size() const {
  return roles_acknowledge_limit_.size();
}
inline void AlertDescriptor::clear_roles_acknowledge_limit() {
  roles_acknowledge_limit_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AlertDescriptor::roles_acknowledge_limit() const {
  // @@protoc_insertion_point(field_map:mtm.alert.model.AlertDescriptor.roles_acknowledge_limit)
  return roles_acknowledge_limit_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AlertDescriptor::mutable_roles_acknowledge_limit() {
  // @@protoc_insertion_point(field_mutable_map:mtm.alert.model.AlertDescriptor.roles_acknowledge_limit)
  return roles_acknowledge_limit_.MutableMap();
}

// bool auto_created = 12;
inline void AlertDescriptor::clear_auto_created() {
  auto_created_ = false;
}
inline bool AlertDescriptor::auto_created() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.auto_created)
  return auto_created_;
}
inline void AlertDescriptor::set_auto_created(bool value) {
  
  auto_created_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.auto_created)
}

// repeated uint32 read_access_groups = 13;
inline int AlertDescriptor::read_access_groups_size() const {
  return read_access_groups_.size();
}
inline void AlertDescriptor::clear_read_access_groups() {
  read_access_groups_.Clear();
}
inline ::google::protobuf::uint32 AlertDescriptor::read_access_groups(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.read_access_groups)
  return read_access_groups_.Get(index);
}
inline void AlertDescriptor::set_read_access_groups(int index, ::google::protobuf::uint32 value) {
  read_access_groups_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.read_access_groups)
}
inline void AlertDescriptor::add_read_access_groups(::google::protobuf::uint32 value) {
  read_access_groups_.Add(value);
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertDescriptor.read_access_groups)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AlertDescriptor::read_access_groups() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertDescriptor.read_access_groups)
  return read_access_groups_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AlertDescriptor::mutable_read_access_groups() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertDescriptor.read_access_groups)
  return &read_access_groups_;
}

// repeated uint32 write_access_groups = 14;
inline int AlertDescriptor::write_access_groups_size() const {
  return write_access_groups_.size();
}
inline void AlertDescriptor::clear_write_access_groups() {
  write_access_groups_.Clear();
}
inline ::google::protobuf::uint32 AlertDescriptor::write_access_groups(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.write_access_groups)
  return write_access_groups_.Get(index);
}
inline void AlertDescriptor::set_write_access_groups(int index, ::google::protobuf::uint32 value) {
  write_access_groups_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.write_access_groups)
}
inline void AlertDescriptor::add_write_access_groups(::google::protobuf::uint32 value) {
  write_access_groups_.Add(value);
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertDescriptor.write_access_groups)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AlertDescriptor::write_access_groups() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertDescriptor.write_access_groups)
  return write_access_groups_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AlertDescriptor::mutable_write_access_groups() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertDescriptor.write_access_groups)
  return &write_access_groups_;
}

// repeated uint32 execute_access_groups = 15;
inline int AlertDescriptor::execute_access_groups_size() const {
  return execute_access_groups_.size();
}
inline void AlertDescriptor::clear_execute_access_groups() {
  execute_access_groups_.Clear();
}
inline ::google::protobuf::uint32 AlertDescriptor::execute_access_groups(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.execute_access_groups)
  return execute_access_groups_.Get(index);
}
inline void AlertDescriptor::set_execute_access_groups(int index, ::google::protobuf::uint32 value) {
  execute_access_groups_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.execute_access_groups)
}
inline void AlertDescriptor::add_execute_access_groups(::google::protobuf::uint32 value) {
  execute_access_groups_.Add(value);
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertDescriptor.execute_access_groups)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AlertDescriptor::execute_access_groups() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertDescriptor.execute_access_groups)
  return execute_access_groups_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AlertDescriptor::mutable_execute_access_groups() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertDescriptor.execute_access_groups)
  return &execute_access_groups_;
}

// .mtm.Uuid category = 16;
inline bool AlertDescriptor::has_category() const {
  return this != internal_default_instance() && category_ != NULL;
}
inline const ::mtm::Uuid& AlertDescriptor::_internal_category() const {
  return *category_;
}
inline const ::mtm::Uuid& AlertDescriptor::category() const {
  const ::mtm::Uuid* p = category_;
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.category)
  return p != NULL ? *p : *reinterpret_cast<const ::mtm::Uuid*>(
      &::mtm::_Uuid_default_instance_);
}
inline ::mtm::Uuid* AlertDescriptor::release_category() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.category)
  
  ::mtm::Uuid* temp = category_;
  category_ = NULL;
  return temp;
}
inline ::mtm::Uuid* AlertDescriptor::mutable_category() {
  
  if (category_ == NULL) {
    auto* p = CreateMaybeMessage<::mtm::Uuid>(GetArenaNoVirtual());
    category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.category)
  return category_;
}
inline void AlertDescriptor::set_allocated_category(::mtm::Uuid* category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(category_);
  }
  if (category) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, category, submessage_arena);
    }
    
  } else {
    
  }
  category_ = category;
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.category)
}

// -------------------------------------------------------------------

// AlertDescriptorList

// repeated .mtm.alert.model.AlertDescriptor alert_descriptors = 1;
inline int AlertDescriptorList::alert_descriptors_size() const {
  return alert_descriptors_.size();
}
inline void AlertDescriptorList::clear_alert_descriptors() {
  alert_descriptors_.Clear();
}
inline ::mtm::alert::model::AlertDescriptor* AlertDescriptorList::mutable_alert_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptorList.alert_descriptors)
  return alert_descriptors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertDescriptor >*
AlertDescriptorList::mutable_alert_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertDescriptorList.alert_descriptors)
  return &alert_descriptors_;
}
inline const ::mtm::alert::model::AlertDescriptor& AlertDescriptorList::alert_descriptors(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptorList.alert_descriptors)
  return alert_descriptors_.Get(index);
}
inline ::mtm::alert::model::AlertDescriptor* AlertDescriptorList::add_alert_descriptors() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertDescriptorList.alert_descriptors)
  return alert_descriptors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertDescriptor >&
AlertDescriptorList::alert_descriptors() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertDescriptorList.alert_descriptors)
  return alert_descriptors_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace alert
}  // namespace mtm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto
