// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/alert/model/alert_descriptor.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mtm/alert/model/alert_descriptor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mtm {
namespace alert {
namespace model {

namespace {

const ::google::protobuf::Descriptor* AlertDescriptor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlertDescriptor_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlertDescriptor_RolesAcknowledgeLimitEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AlertDescriptorList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlertDescriptorList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto() {
  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mtm/alert/model/alert_descriptor.proto");
  GOOGLE_CHECK(file != NULL);
  AlertDescriptor_descriptor_ = file->message_type(0);
  static const int AlertDescriptor_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, type_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, display_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, format_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, auto_remove_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, auto_remove_timespan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, removed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, arguments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, message_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, alert_server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, roles_acknowledge_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, auto_created_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, read_access_groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, write_access_groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, execute_access_groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, category_),
  };
  AlertDescriptor_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AlertDescriptor_descriptor_,
      AlertDescriptor::default_instance_,
      AlertDescriptor_offsets_,
      -1,
      -1,
      -1,
      sizeof(AlertDescriptor),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptor, _is_default_instance_));
  AlertDescriptor_RolesAcknowledgeLimitEntry_descriptor_ = AlertDescriptor_descriptor_->nested_type(0);
  AlertDescriptorList_descriptor_ = file->message_type(1);
  static const int AlertDescriptorList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptorList, alert_descriptors_),
  };
  AlertDescriptorList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AlertDescriptorList_descriptor_,
      AlertDescriptorList::default_instance_,
      AlertDescriptorList_offsets_,
      -1,
      -1,
      -1,
      sizeof(AlertDescriptorList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptorList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlertDescriptorList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AlertDescriptor_descriptor_, &AlertDescriptor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        AlertDescriptor_RolesAcknowledgeLimitEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::uint32,
            ::google::protobuf::uint32,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
            0>::CreateDefaultInstance(
                AlertDescriptor_RolesAcknowledgeLimitEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AlertDescriptorList_descriptor_, &AlertDescriptorList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto() {
  delete AlertDescriptor::default_instance_;
  delete AlertDescriptor_reflection_;
  delete AlertDescriptorList::default_instance_;
  delete AlertDescriptorList_reflection_;
}

void protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::mtm::protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto();
  ::mtm::event::protobuf_AddDesc_mtm_2fevent_2fargument_5fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&mtm/alert/model/alert_descriptor.proto"
    "\022\017mtm.alert.model\032\037google/protobuf/times"
    "tamp.proto\032\036google/protobuf/duration.pro"
    "to\032\026mtm/common_types.proto\032#mtm/event/ar"
    "gument_descriptor.proto\"\356\004\n\017AlertDescrip"
    "tor\022\032\n\007type_id\030\001 \001(\0132\t.mtm.Uuid\022\024\n\014displ"
    "ay_name\030\002 \001(\t\022\025\n\rformat_string\030\003 \001(\t\022\023\n\013"
    "auto_remove\030\004 \001(\010\0227\n\024auto_remove_timeSpa"
    "n\030\005 \001(\0132\031.google.protobuf.Duration\022\017\n\007ve"
    "rsion\030\006 \001(\r\022\017\n\007removed\030\007 \001(\010\0220\n\targument"
    "s\030\010 \003(\0132\035.mtm.event.ArgumentDescriptor\0220"
    "\n\014message_time\030\t \001(\0132\032.google.protobuf.T"
    "imestamp\022\027\n\017alert_server_id\030\n \001(\r\022\\\n\027rol"
    "es_acknowledge_limit\030\013 \003(\0132;.mtm.alert.m"
    "odel.AlertDescriptor.RolesAcknowledgeLim"
    "itEntry\022\024\n\014auto_created\030\014 \001(\010\022\032\n\022read_ac"
    "cess_groups\030\r \003(\r\022\033\n\023write_access_groups"
    "\030\016 \003(\r\022\035\n\025execute_access_groups\030\017 \003(\r\022\033\n"
    "\010category\030\020 \001(\0132\t.mtm.Uuid\032<\n\032RolesAckno"
    "wledgeLimitEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002"
    " \001(\r:\0028\001\"R\n\023AlertDescriptorList\022;\n\021alert"
    "_descriptors\030\001 \003(\0132 .mtm.alert.model.Ale"
    "rtDescriptorb\006proto3", 900);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mtm/alert/model/alert_descriptor.proto", &protobuf_RegisterTypes);
  AlertDescriptor::default_instance_ = new AlertDescriptor();
  AlertDescriptorList::default_instance_ = new AlertDescriptorList();
  AlertDescriptor::default_instance_->InitAsDefaultInstance();
  AlertDescriptorList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto {
  StaticDescriptorInitializer_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto() {
    protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto();
  }
} static_descriptor_initializer_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertDescriptor::kTypeIdFieldNumber;
const int AlertDescriptor::kDisplayNameFieldNumber;
const int AlertDescriptor::kFormatStringFieldNumber;
const int AlertDescriptor::kAutoRemoveFieldNumber;
const int AlertDescriptor::kAutoRemoveTimeSpanFieldNumber;
const int AlertDescriptor::kVersionFieldNumber;
const int AlertDescriptor::kRemovedFieldNumber;
const int AlertDescriptor::kArgumentsFieldNumber;
const int AlertDescriptor::kMessageTimeFieldNumber;
const int AlertDescriptor::kAlertServerIdFieldNumber;
const int AlertDescriptor::kRolesAcknowledgeLimitFieldNumber;
const int AlertDescriptor::kAutoCreatedFieldNumber;
const int AlertDescriptor::kReadAccessGroupsFieldNumber;
const int AlertDescriptor::kWriteAccessGroupsFieldNumber;
const int AlertDescriptor::kExecuteAccessGroupsFieldNumber;
const int AlertDescriptor::kCategoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertDescriptor::AlertDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.AlertDescriptor)
}

void AlertDescriptor::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  type_id_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
  auto_remove_timespan_ = const_cast< ::google::protobuf::Duration*>(&::google::protobuf::Duration::default_instance());
  message_time_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
  category_ = const_cast< ::mtm::Uuid*>(&::mtm::Uuid::default_instance());
}

AlertDescriptor::AlertDescriptor(const AlertDescriptor& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.AlertDescriptor)
}

void AlertDescriptor::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_id_ = NULL;
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auto_remove_ = false;
  auto_remove_timespan_ = NULL;
  version_ = 0u;
  removed_ = false;
  message_time_ = NULL;
  alert_server_id_ = 0u;
  roles_acknowledge_limit_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  roles_acknowledge_limit_.SetEntryDescriptor(
      &::mtm::alert::model::AlertDescriptor_RolesAcknowledgeLimitEntry_descriptor_);
  auto_created_ = false;
  category_ = NULL;
}

AlertDescriptor::~AlertDescriptor() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.AlertDescriptor)
  SharedDtor();
}

void AlertDescriptor::SharedDtor() {
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete type_id_;
    delete auto_remove_timespan_;
    delete message_time_;
    delete category_;
  }
}

void AlertDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlertDescriptor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlertDescriptor_descriptor_;
}

const AlertDescriptor& AlertDescriptor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto();
  return *default_instance_;
}

AlertDescriptor* AlertDescriptor::default_instance_ = NULL;

AlertDescriptor* AlertDescriptor::New(::google::protobuf::Arena* arena) const {
  AlertDescriptor* n = new AlertDescriptor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlertDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.AlertDescriptor)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AlertDescriptor, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AlertDescriptor*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(version_, removed_);
  if (GetArenaNoVirtual() == NULL && type_id_ != NULL) delete type_id_;
  type_id_ = NULL;
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && auto_remove_timespan_ != NULL) delete auto_remove_timespan_;
  auto_remove_timespan_ = NULL;
  if (GetArenaNoVirtual() == NULL && message_time_ != NULL) delete message_time_;
  message_time_ = NULL;
  alert_server_id_ = 0u;
  auto_created_ = false;
  if (GetArenaNoVirtual() == NULL && category_ != NULL) delete category_;
  category_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  arguments_.Clear();
  roles_acknowledge_limit_.Clear();
  read_access_groups_.Clear();
  write_access_groups_.Clear();
  execute_access_groups_.Clear();
}

bool AlertDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.AlertDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mtm.Uuid type_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_display_name;
        break;
      }

      // optional string display_name = 2;
      case 2: {
        if (tag == 18) {
         parse_display_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), this->display_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mtm.alert.model.AlertDescriptor.display_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_format_string;
        break;
      }

      // optional string format_string = 3;
      case 3: {
        if (tag == 26) {
         parse_format_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->format_string().data(), this->format_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mtm.alert.model.AlertDescriptor.format_string"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_auto_remove;
        break;
      }

      // optional bool auto_remove = 4;
      case 4: {
        if (tag == 32) {
         parse_auto_remove:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_remove_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_auto_remove_timeSpan;
        break;
      }

      // optional .google.protobuf.Duration auto_remove_timeSpan = 5;
      case 5: {
        if (tag == 42) {
         parse_auto_remove_timeSpan:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_auto_remove_timespan()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_version;
        break;
      }

      // optional uint32 version = 6;
      case 6: {
        if (tag == 48) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_removed;
        break;
      }

      // optional bool removed = 7;
      case 7: {
        if (tag == 56) {
         parse_removed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &removed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_arguments;
        break;
      }

      // repeated .mtm.event.ArgumentDescriptor arguments = 8;
      case 8: {
        if (tag == 66) {
         parse_arguments:
          DO_(input->IncrementRecursionDepth());
         parse_loop_arguments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_arguments;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(74)) goto parse_message_time;
        break;
      }

      // optional .google.protobuf.Timestamp message_time = 9;
      case 9: {
        if (tag == 74) {
         parse_message_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_alert_server_id;
        break;
      }

      // optional uint32 alert_server_id = 10;
      case 10: {
        if (tag == 80) {
         parse_alert_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alert_server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_roles_acknowledge_limit;
        break;
      }

      // map<uint32, uint32> roles_acknowledge_limit = 11;
      case 11: {
        if (tag == 90) {
         parse_roles_acknowledge_limit:
          DO_(input->IncrementRecursionDepth());
         parse_loop_roles_acknowledge_limit:
          AlertDescriptor_RolesAcknowledgeLimitEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&roles_acknowledge_limit_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_roles_acknowledge_limit;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(96)) goto parse_auto_created;
        break;
      }

      // optional bool auto_created = 12;
      case 12: {
        if (tag == 96) {
         parse_auto_created:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_created_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_read_access_groups;
        break;
      }

      // repeated uint32 read_access_groups = 13;
      case 13: {
        if (tag == 106) {
         parse_read_access_groups:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_read_access_groups())));
        } else if (tag == 104) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 106, input, this->mutable_read_access_groups())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_write_access_groups;
        break;
      }

      // repeated uint32 write_access_groups = 14;
      case 14: {
        if (tag == 114) {
         parse_write_access_groups:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_write_access_groups())));
        } else if (tag == 112) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 114, input, this->mutable_write_access_groups())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_execute_access_groups;
        break;
      }

      // repeated uint32 execute_access_groups = 15;
      case 15: {
        if (tag == 122) {
         parse_execute_access_groups:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_execute_access_groups())));
        } else if (tag == 120) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 122, input, this->mutable_execute_access_groups())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_category;
        break;
      }

      // optional .mtm.Uuid category = 16;
      case 16: {
        if (tag == 130) {
         parse_category:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_category()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.AlertDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.AlertDescriptor)
  return false;
#undef DO_
}

void AlertDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.AlertDescriptor)
  // optional .mtm.Uuid type_id = 1;
  if (this->has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->type_id_, output);
  }

  // optional string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), this->display_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.alert.model.AlertDescriptor.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // optional string format_string = 3;
  if (this->format_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format_string().data(), this->format_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.alert.model.AlertDescriptor.format_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->format_string(), output);
  }

  // optional bool auto_remove = 4;
  if (this->auto_remove() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->auto_remove(), output);
  }

  // optional .google.protobuf.Duration auto_remove_timeSpan = 5;
  if (this->has_auto_remove_timespan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->auto_remove_timespan_, output);
  }

  // optional uint32 version = 6;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->version(), output);
  }

  // optional bool removed = 7;
  if (this->removed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->removed(), output);
  }

  // repeated .mtm.event.ArgumentDescriptor arguments = 8;
  for (unsigned int i = 0, n = this->arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->arguments(i), output);
  }

  // optional .google.protobuf.Timestamp message_time = 9;
  if (this->has_message_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->message_time_, output);
  }

  // optional uint32 alert_server_id = 10;
  if (this->alert_server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->alert_server_id(), output);
  }

  // map<uint32, uint32> roles_acknowledge_limit = 11;
  if (!this->roles_acknowledge_limit().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterminstic() &&
        this->roles_acknowledge_limit().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->roles_acknowledge_limit().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->roles_acknowledge_limit().begin();
          it != this->roles_acknowledge_limit().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AlertDescriptor_RolesAcknowledgeLimitEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(roles_acknowledge_limit_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AlertDescriptor_RolesAcknowledgeLimitEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->roles_acknowledge_limit().begin();
          it != this->roles_acknowledge_limit().end(); ++it) {
        entry.reset(roles_acknowledge_limit_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
      }
    }
  }

  // optional bool auto_created = 12;
  if (this->auto_created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->auto_created(), output);
  }

  // repeated uint32 read_access_groups = 13;
  if (this->read_access_groups_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_read_access_groups_cached_byte_size_);
  }
  for (int i = 0; i < this->read_access_groups_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->read_access_groups(i), output);
  }

  // repeated uint32 write_access_groups = 14;
  if (this->write_access_groups_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_write_access_groups_cached_byte_size_);
  }
  for (int i = 0; i < this->write_access_groups_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->write_access_groups(i), output);
  }

  // repeated uint32 execute_access_groups = 15;
  if (this->execute_access_groups_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_execute_access_groups_cached_byte_size_);
  }
  for (int i = 0; i < this->execute_access_groups_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->execute_access_groups(i), output);
  }

  // optional .mtm.Uuid category = 16;
  if (this->has_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->category_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.alert.model.AlertDescriptor)
}

::google::protobuf::uint8* AlertDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.AlertDescriptor)
  // optional .mtm.Uuid type_id = 1;
  if (this->has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->type_id_, false, target);
  }

  // optional string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), this->display_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.alert.model.AlertDescriptor.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // optional string format_string = 3;
  if (this->format_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format_string().data(), this->format_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.alert.model.AlertDescriptor.format_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->format_string(), target);
  }

  // optional bool auto_remove = 4;
  if (this->auto_remove() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->auto_remove(), target);
  }

  // optional .google.protobuf.Duration auto_remove_timeSpan = 5;
  if (this->has_auto_remove_timespan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->auto_remove_timespan_, false, target);
  }

  // optional uint32 version = 6;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->version(), target);
  }

  // optional bool removed = 7;
  if (this->removed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->removed(), target);
  }

  // repeated .mtm.event.ArgumentDescriptor arguments = 8;
  for (unsigned int i = 0, n = this->arguments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->arguments(i), false, target);
  }

  // optional .google.protobuf.Timestamp message_time = 9;
  if (this->has_message_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->message_time_, false, target);
  }

  // optional uint32 alert_server_id = 10;
  if (this->alert_server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->alert_server_id(), target);
  }

  // map<uint32, uint32> roles_acknowledge_limit = 11;
  if (!this->roles_acknowledge_limit().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->roles_acknowledge_limit().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->roles_acknowledge_limit().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->roles_acknowledge_limit().begin();
          it != this->roles_acknowledge_limit().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AlertDescriptor_RolesAcknowledgeLimitEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(roles_acknowledge_limit_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AlertDescriptor_RolesAcknowledgeLimitEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->roles_acknowledge_limit().begin();
          it != this->roles_acknowledge_limit().end(); ++it) {
        entry.reset(roles_acknowledge_limit_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
      }
    }
  }

  // optional bool auto_created = 12;
  if (this->auto_created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->auto_created(), target);
  }

  // repeated uint32 read_access_groups = 13;
  if (this->read_access_groups_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _read_access_groups_cached_byte_size_, target);
  }
  for (int i = 0; i < this->read_access_groups_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->read_access_groups(i), target);
  }

  // repeated uint32 write_access_groups = 14;
  if (this->write_access_groups_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _write_access_groups_cached_byte_size_, target);
  }
  for (int i = 0; i < this->write_access_groups_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->write_access_groups(i), target);
  }

  // repeated uint32 execute_access_groups = 15;
  if (this->execute_access_groups_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _execute_access_groups_cached_byte_size_, target);
  }
  for (int i = 0; i < this->execute_access_groups_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->execute_access_groups(i), target);
  }

  // optional .mtm.Uuid category = 16;
  if (this->has_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->category_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.AlertDescriptor)
  return target;
}

int AlertDescriptor::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.AlertDescriptor)
  int total_size = 0;

  // optional .mtm.Uuid type_id = 1;
  if (this->has_type_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_id_);
  }

  // optional string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // optional string format_string = 3;
  if (this->format_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->format_string());
  }

  // optional bool auto_remove = 4;
  if (this->auto_remove() != 0) {
    total_size += 1 + 1;
  }

  // optional .google.protobuf.Duration auto_remove_timeSpan = 5;
  if (this->has_auto_remove_timespan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->auto_remove_timespan_);
  }

  // optional uint32 version = 6;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // optional bool removed = 7;
  if (this->removed() != 0) {
    total_size += 1 + 1;
  }

  // optional .google.protobuf.Timestamp message_time = 9;
  if (this->has_message_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->message_time_);
  }

  // optional uint32 alert_server_id = 10;
  if (this->alert_server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->alert_server_id());
  }

  // optional bool auto_created = 12;
  if (this->auto_created() != 0) {
    total_size += 1 + 1;
  }

  // optional .mtm.Uuid category = 16;
  if (this->has_category()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->category_);
  }

  // repeated .mtm.event.ArgumentDescriptor arguments = 8;
  total_size += 1 * this->arguments_size();
  for (int i = 0; i < this->arguments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arguments(i));
  }

  // map<uint32, uint32> roles_acknowledge_limit = 11;
  total_size += 1 * this->roles_acknowledge_limit_size();
  {
    ::google::protobuf::scoped_ptr<AlertDescriptor_RolesAcknowledgeLimitEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->roles_acknowledge_limit().begin();
        it != this->roles_acknowledge_limit().end(); ++it) {
      entry.reset(roles_acknowledge_limit_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 read_access_groups = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->read_access_groups_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->read_access_groups(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _read_access_groups_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 write_access_groups = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->write_access_groups_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->write_access_groups(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _write_access_groups_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 execute_access_groups = 15;
  {
    int data_size = 0;
    for (int i = 0; i < this->execute_access_groups_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->execute_access_groups(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _execute_access_groups_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlertDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.AlertDescriptor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AlertDescriptor* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.AlertDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.AlertDescriptor)
    MergeFrom(*source);
  }
}

void AlertDescriptor::MergeFrom(const AlertDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.AlertDescriptor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  arguments_.MergeFrom(from.arguments_);
  roles_acknowledge_limit_.MergeFrom(from.roles_acknowledge_limit_);
  read_access_groups_.MergeFrom(from.read_access_groups_);
  write_access_groups_.MergeFrom(from.write_access_groups_);
  execute_access_groups_.MergeFrom(from.execute_access_groups_);
  if (from.has_type_id()) {
    mutable_type_id()->::mtm::Uuid::MergeFrom(from.type_id());
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.format_string().size() > 0) {

    format_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_string_);
  }
  if (from.auto_remove() != 0) {
    set_auto_remove(from.auto_remove());
  }
  if (from.has_auto_remove_timespan()) {
    mutable_auto_remove_timespan()->::google::protobuf::Duration::MergeFrom(from.auto_remove_timespan());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.removed() != 0) {
    set_removed(from.removed());
  }
  if (from.has_message_time()) {
    mutable_message_time()->::google::protobuf::Timestamp::MergeFrom(from.message_time());
  }
  if (from.alert_server_id() != 0) {
    set_alert_server_id(from.alert_server_id());
  }
  if (from.auto_created() != 0) {
    set_auto_created(from.auto_created());
  }
  if (from.has_category()) {
    mutable_category()->::mtm::Uuid::MergeFrom(from.category());
  }
}

void AlertDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.AlertDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertDescriptor::CopyFrom(const AlertDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.AlertDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertDescriptor::IsInitialized() const {

  return true;
}

void AlertDescriptor::Swap(AlertDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertDescriptor::InternalSwap(AlertDescriptor* other) {
  std::swap(type_id_, other->type_id_);
  display_name_.Swap(&other->display_name_);
  format_string_.Swap(&other->format_string_);
  std::swap(auto_remove_, other->auto_remove_);
  std::swap(auto_remove_timespan_, other->auto_remove_timespan_);
  std::swap(version_, other->version_);
  std::swap(removed_, other->removed_);
  arguments_.UnsafeArenaSwap(&other->arguments_);
  std::swap(message_time_, other->message_time_);
  std::swap(alert_server_id_, other->alert_server_id_);
  roles_acknowledge_limit_.Swap(&other->roles_acknowledge_limit_);
  std::swap(auto_created_, other->auto_created_);
  read_access_groups_.UnsafeArenaSwap(&other->read_access_groups_);
  write_access_groups_.UnsafeArenaSwap(&other->write_access_groups_);
  execute_access_groups_.UnsafeArenaSwap(&other->execute_access_groups_);
  std::swap(category_, other->category_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlertDescriptor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlertDescriptor_descriptor_;
  metadata.reflection = AlertDescriptor_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlertDescriptor

// optional .mtm.Uuid type_id = 1;
bool AlertDescriptor::has_type_id() const {
  return !_is_default_instance_ && type_id_ != NULL;
}
void AlertDescriptor::clear_type_id() {
  if (GetArenaNoVirtual() == NULL && type_id_ != NULL) delete type_id_;
  type_id_ = NULL;
}
const ::mtm::Uuid& AlertDescriptor::type_id() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.type_id)
  return type_id_ != NULL ? *type_id_ : *default_instance_->type_id_;
}
::mtm::Uuid* AlertDescriptor::mutable_type_id() {
  
  if (type_id_ == NULL) {
    type_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.type_id)
  return type_id_;
}
::mtm::Uuid* AlertDescriptor::release_type_id() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.type_id)
  
  ::mtm::Uuid* temp = type_id_;
  type_id_ = NULL;
  return temp;
}
void AlertDescriptor::set_allocated_type_id(::mtm::Uuid* type_id) {
  delete type_id_;
  type_id_ = type_id;
  if (type_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.type_id)
}

// optional string display_name = 2;
void AlertDescriptor::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AlertDescriptor::display_name() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.display_name)
  return display_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AlertDescriptor::set_display_name(const ::std::string& value) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.display_name)
}
 void AlertDescriptor::set_display_name(const char* value) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.alert.model.AlertDescriptor.display_name)
}
 void AlertDescriptor::set_display_name(const char* value, size_t size) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.alert.model.AlertDescriptor.display_name)
}
 ::std::string* AlertDescriptor::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AlertDescriptor::release_display_name() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.display_name)
  
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AlertDescriptor::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.display_name)
}

// optional string format_string = 3;
void AlertDescriptor::clear_format_string() {
  format_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AlertDescriptor::format_string() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.format_string)
  return format_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AlertDescriptor::set_format_string(const ::std::string& value) {
  
  format_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.format_string)
}
 void AlertDescriptor::set_format_string(const char* value) {
  
  format_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.alert.model.AlertDescriptor.format_string)
}
 void AlertDescriptor::set_format_string(const char* value, size_t size) {
  
  format_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.alert.model.AlertDescriptor.format_string)
}
 ::std::string* AlertDescriptor::mutable_format_string() {
  
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.format_string)
  return format_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AlertDescriptor::release_format_string() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.format_string)
  
  return format_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AlertDescriptor::set_allocated_format_string(::std::string* format_string) {
  if (format_string != NULL) {
    
  } else {
    
  }
  format_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format_string);
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.format_string)
}

// optional bool auto_remove = 4;
void AlertDescriptor::clear_auto_remove() {
  auto_remove_ = false;
}
 bool AlertDescriptor::auto_remove() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.auto_remove)
  return auto_remove_;
}
 void AlertDescriptor::set_auto_remove(bool value) {
  
  auto_remove_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.auto_remove)
}

// optional .google.protobuf.Duration auto_remove_timeSpan = 5;
bool AlertDescriptor::has_auto_remove_timespan() const {
  return !_is_default_instance_ && auto_remove_timespan_ != NULL;
}
void AlertDescriptor::clear_auto_remove_timespan() {
  if (GetArenaNoVirtual() == NULL && auto_remove_timespan_ != NULL) delete auto_remove_timespan_;
  auto_remove_timespan_ = NULL;
}
const ::google::protobuf::Duration& AlertDescriptor::auto_remove_timespan() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.auto_remove_timeSpan)
  return auto_remove_timespan_ != NULL ? *auto_remove_timespan_ : *default_instance_->auto_remove_timespan_;
}
::google::protobuf::Duration* AlertDescriptor::mutable_auto_remove_timespan() {
  
  if (auto_remove_timespan_ == NULL) {
    auto_remove_timespan_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.auto_remove_timeSpan)
  return auto_remove_timespan_;
}
::google::protobuf::Duration* AlertDescriptor::release_auto_remove_timespan() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.auto_remove_timeSpan)
  
  ::google::protobuf::Duration* temp = auto_remove_timespan_;
  auto_remove_timespan_ = NULL;
  return temp;
}
void AlertDescriptor::set_allocated_auto_remove_timespan(::google::protobuf::Duration* auto_remove_timespan) {
  delete auto_remove_timespan_;
  auto_remove_timespan_ = auto_remove_timespan;
  if (auto_remove_timespan) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.auto_remove_timeSpan)
}

// optional uint32 version = 6;
void AlertDescriptor::clear_version() {
  version_ = 0u;
}
 ::google::protobuf::uint32 AlertDescriptor::version() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.version)
  return version_;
}
 void AlertDescriptor::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.version)
}

// optional bool removed = 7;
void AlertDescriptor::clear_removed() {
  removed_ = false;
}
 bool AlertDescriptor::removed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.removed)
  return removed_;
}
 void AlertDescriptor::set_removed(bool value) {
  
  removed_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.removed)
}

// repeated .mtm.event.ArgumentDescriptor arguments = 8;
int AlertDescriptor::arguments_size() const {
  return arguments_.size();
}
void AlertDescriptor::clear_arguments() {
  arguments_.Clear();
}
const ::mtm::event::ArgumentDescriptor& AlertDescriptor::arguments(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.arguments)
  return arguments_.Get(index);
}
::mtm::event::ArgumentDescriptor* AlertDescriptor::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.arguments)
  return arguments_.Mutable(index);
}
::mtm::event::ArgumentDescriptor* AlertDescriptor::add_arguments() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertDescriptor.arguments)
  return arguments_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >*
AlertDescriptor::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertDescriptor.arguments)
  return &arguments_;
}
const ::google::protobuf::RepeatedPtrField< ::mtm::event::ArgumentDescriptor >&
AlertDescriptor::arguments() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertDescriptor.arguments)
  return arguments_;
}

// optional .google.protobuf.Timestamp message_time = 9;
bool AlertDescriptor::has_message_time() const {
  return !_is_default_instance_ && message_time_ != NULL;
}
void AlertDescriptor::clear_message_time() {
  if (GetArenaNoVirtual() == NULL && message_time_ != NULL) delete message_time_;
  message_time_ = NULL;
}
const ::google::protobuf::Timestamp& AlertDescriptor::message_time() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.message_time)
  return message_time_ != NULL ? *message_time_ : *default_instance_->message_time_;
}
::google::protobuf::Timestamp* AlertDescriptor::mutable_message_time() {
  
  if (message_time_ == NULL) {
    message_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.message_time)
  return message_time_;
}
::google::protobuf::Timestamp* AlertDescriptor::release_message_time() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.message_time)
  
  ::google::protobuf::Timestamp* temp = message_time_;
  message_time_ = NULL;
  return temp;
}
void AlertDescriptor::set_allocated_message_time(::google::protobuf::Timestamp* message_time) {
  delete message_time_;
  if (message_time != NULL && message_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_message_time = new ::google::protobuf::Timestamp;
    new_message_time->CopyFrom(*message_time);
    message_time = new_message_time;
  }
  message_time_ = message_time;
  if (message_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.message_time)
}

// optional uint32 alert_server_id = 10;
void AlertDescriptor::clear_alert_server_id() {
  alert_server_id_ = 0u;
}
 ::google::protobuf::uint32 AlertDescriptor::alert_server_id() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.alert_server_id)
  return alert_server_id_;
}
 void AlertDescriptor::set_alert_server_id(::google::protobuf::uint32 value) {
  
  alert_server_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.alert_server_id)
}

// map<uint32, uint32> roles_acknowledge_limit = 11;
int AlertDescriptor::roles_acknowledge_limit_size() const {
  return roles_acknowledge_limit_.size();
}
void AlertDescriptor::clear_roles_acknowledge_limit() {
  roles_acknowledge_limit_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AlertDescriptor::roles_acknowledge_limit() const {
  // @@protoc_insertion_point(field_map:mtm.alert.model.AlertDescriptor.roles_acknowledge_limit)
  return roles_acknowledge_limit_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AlertDescriptor::mutable_roles_acknowledge_limit() {
  // @@protoc_insertion_point(field_mutable_map:mtm.alert.model.AlertDescriptor.roles_acknowledge_limit)
  return roles_acknowledge_limit_.MutableMap();
}

// optional bool auto_created = 12;
void AlertDescriptor::clear_auto_created() {
  auto_created_ = false;
}
 bool AlertDescriptor::auto_created() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.auto_created)
  return auto_created_;
}
 void AlertDescriptor::set_auto_created(bool value) {
  
  auto_created_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.auto_created)
}

// repeated uint32 read_access_groups = 13;
int AlertDescriptor::read_access_groups_size() const {
  return read_access_groups_.size();
}
void AlertDescriptor::clear_read_access_groups() {
  read_access_groups_.Clear();
}
 ::google::protobuf::uint32 AlertDescriptor::read_access_groups(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.read_access_groups)
  return read_access_groups_.Get(index);
}
 void AlertDescriptor::set_read_access_groups(int index, ::google::protobuf::uint32 value) {
  read_access_groups_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.read_access_groups)
}
 void AlertDescriptor::add_read_access_groups(::google::protobuf::uint32 value) {
  read_access_groups_.Add(value);
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertDescriptor.read_access_groups)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AlertDescriptor::read_access_groups() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertDescriptor.read_access_groups)
  return read_access_groups_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AlertDescriptor::mutable_read_access_groups() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertDescriptor.read_access_groups)
  return &read_access_groups_;
}

// repeated uint32 write_access_groups = 14;
int AlertDescriptor::write_access_groups_size() const {
  return write_access_groups_.size();
}
void AlertDescriptor::clear_write_access_groups() {
  write_access_groups_.Clear();
}
 ::google::protobuf::uint32 AlertDescriptor::write_access_groups(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.write_access_groups)
  return write_access_groups_.Get(index);
}
 void AlertDescriptor::set_write_access_groups(int index, ::google::protobuf::uint32 value) {
  write_access_groups_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.write_access_groups)
}
 void AlertDescriptor::add_write_access_groups(::google::protobuf::uint32 value) {
  write_access_groups_.Add(value);
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertDescriptor.write_access_groups)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AlertDescriptor::write_access_groups() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertDescriptor.write_access_groups)
  return write_access_groups_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AlertDescriptor::mutable_write_access_groups() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertDescriptor.write_access_groups)
  return &write_access_groups_;
}

// repeated uint32 execute_access_groups = 15;
int AlertDescriptor::execute_access_groups_size() const {
  return execute_access_groups_.size();
}
void AlertDescriptor::clear_execute_access_groups() {
  execute_access_groups_.Clear();
}
 ::google::protobuf::uint32 AlertDescriptor::execute_access_groups(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.execute_access_groups)
  return execute_access_groups_.Get(index);
}
 void AlertDescriptor::set_execute_access_groups(int index, ::google::protobuf::uint32 value) {
  execute_access_groups_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertDescriptor.execute_access_groups)
}
 void AlertDescriptor::add_execute_access_groups(::google::protobuf::uint32 value) {
  execute_access_groups_.Add(value);
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertDescriptor.execute_access_groups)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AlertDescriptor::execute_access_groups() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertDescriptor.execute_access_groups)
  return execute_access_groups_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AlertDescriptor::mutable_execute_access_groups() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertDescriptor.execute_access_groups)
  return &execute_access_groups_;
}

// optional .mtm.Uuid category = 16;
bool AlertDescriptor::has_category() const {
  return !_is_default_instance_ && category_ != NULL;
}
void AlertDescriptor::clear_category() {
  if (GetArenaNoVirtual() == NULL && category_ != NULL) delete category_;
  category_ = NULL;
}
const ::mtm::Uuid& AlertDescriptor::category() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptor.category)
  return category_ != NULL ? *category_ : *default_instance_->category_;
}
::mtm::Uuid* AlertDescriptor::mutable_category() {
  
  if (category_ == NULL) {
    category_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptor.category)
  return category_;
}
::mtm::Uuid* AlertDescriptor::release_category() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertDescriptor.category)
  
  ::mtm::Uuid* temp = category_;
  category_ = NULL;
  return temp;
}
void AlertDescriptor::set_allocated_category(::mtm::Uuid* category) {
  delete category_;
  category_ = category;
  if (category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertDescriptor.category)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertDescriptorList::kAlertDescriptorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertDescriptorList::AlertDescriptorList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.alert.model.AlertDescriptorList)
}

void AlertDescriptorList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AlertDescriptorList::AlertDescriptorList(const AlertDescriptorList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.alert.model.AlertDescriptorList)
}

void AlertDescriptorList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

AlertDescriptorList::~AlertDescriptorList() {
  // @@protoc_insertion_point(destructor:mtm.alert.model.AlertDescriptorList)
  SharedDtor();
}

void AlertDescriptorList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AlertDescriptorList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlertDescriptorList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlertDescriptorList_descriptor_;
}

const AlertDescriptorList& AlertDescriptorList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5fdescriptor_2eproto();
  return *default_instance_;
}

AlertDescriptorList* AlertDescriptorList::default_instance_ = NULL;

AlertDescriptorList* AlertDescriptorList::New(::google::protobuf::Arena* arena) const {
  AlertDescriptorList* n = new AlertDescriptorList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlertDescriptorList::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.alert.model.AlertDescriptorList)
  alert_descriptors_.Clear();
}

bool AlertDescriptorList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.alert.model.AlertDescriptorList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mtm.alert.model.AlertDescriptor alert_descriptors = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_alert_descriptors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_alert_descriptors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_alert_descriptors;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.alert.model.AlertDescriptorList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.alert.model.AlertDescriptorList)
  return false;
#undef DO_
}

void AlertDescriptorList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.alert.model.AlertDescriptorList)
  // repeated .mtm.alert.model.AlertDescriptor alert_descriptors = 1;
  for (unsigned int i = 0, n = this->alert_descriptors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->alert_descriptors(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.alert.model.AlertDescriptorList)
}

::google::protobuf::uint8* AlertDescriptorList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.alert.model.AlertDescriptorList)
  // repeated .mtm.alert.model.AlertDescriptor alert_descriptors = 1;
  for (unsigned int i = 0, n = this->alert_descriptors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->alert_descriptors(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.alert.model.AlertDescriptorList)
  return target;
}

int AlertDescriptorList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.alert.model.AlertDescriptorList)
  int total_size = 0;

  // repeated .mtm.alert.model.AlertDescriptor alert_descriptors = 1;
  total_size += 1 * this->alert_descriptors_size();
  for (int i = 0; i < this->alert_descriptors_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->alert_descriptors(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlertDescriptorList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.alert.model.AlertDescriptorList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AlertDescriptorList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertDescriptorList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.alert.model.AlertDescriptorList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.alert.model.AlertDescriptorList)
    MergeFrom(*source);
  }
}

void AlertDescriptorList::MergeFrom(const AlertDescriptorList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.alert.model.AlertDescriptorList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  alert_descriptors_.MergeFrom(from.alert_descriptors_);
}

void AlertDescriptorList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.alert.model.AlertDescriptorList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertDescriptorList::CopyFrom(const AlertDescriptorList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.alert.model.AlertDescriptorList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertDescriptorList::IsInitialized() const {

  return true;
}

void AlertDescriptorList::Swap(AlertDescriptorList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertDescriptorList::InternalSwap(AlertDescriptorList* other) {
  alert_descriptors_.UnsafeArenaSwap(&other->alert_descriptors_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlertDescriptorList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlertDescriptorList_descriptor_;
  metadata.reflection = AlertDescriptorList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlertDescriptorList

// repeated .mtm.alert.model.AlertDescriptor alert_descriptors = 1;
int AlertDescriptorList::alert_descriptors_size() const {
  return alert_descriptors_.size();
}
void AlertDescriptorList::clear_alert_descriptors() {
  alert_descriptors_.Clear();
}
const ::mtm::alert::model::AlertDescriptor& AlertDescriptorList::alert_descriptors(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertDescriptorList.alert_descriptors)
  return alert_descriptors_.Get(index);
}
::mtm::alert::model::AlertDescriptor* AlertDescriptorList::mutable_alert_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertDescriptorList.alert_descriptors)
  return alert_descriptors_.Mutable(index);
}
::mtm::alert::model::AlertDescriptor* AlertDescriptorList::add_alert_descriptors() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertDescriptorList.alert_descriptors)
  return alert_descriptors_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertDescriptor >*
AlertDescriptorList::mutable_alert_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertDescriptorList.alert_descriptors)
  return &alert_descriptors_;
}
const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertDescriptor >&
AlertDescriptorList::alert_descriptors() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertDescriptorList.alert_descriptors)
  return alert_descriptors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace alert
}  // namespace mtm

// @@protoc_insertion_point(global_scope)
