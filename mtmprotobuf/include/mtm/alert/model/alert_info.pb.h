// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/alert/model/alert_info.proto

#ifndef PROTOBUF_mtm_2falert_2fmodel_2falert_5finfo_2eproto__INCLUDED
#define PROTOBUF_mtm_2falert_2fmodel_2falert_5finfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include "mtm/event/argument.pb.h"
#include "mtm/common_types.pb.h"
// @@protoc_insertion_point(includes)

namespace mtm {
namespace alert {
namespace model {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

class Acknowledged;
class Activated;
class AlertInfo;
class AlertInfoHistory;
class AlertInfoList;
class AlertLevelValue;
class AutoRemoveDisabled;
class AutoRemoveEnabled;
class CommentAdded;
class Deactivated;
class Removed;
class StateChanged;
class Unacknowledged;

enum AlertLevel {
  ALERT_LEVEL_UNSPECIFIED = 0,
  ALERT_LEVEL_INFO = 1,
  ALERT_LEVEL_WARNING = 2,
  ALERT_LEVEL_ALARM = 3,
  AlertLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AlertLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AlertLevel_IsValid(int value);
const AlertLevel AlertLevel_MIN = ALERT_LEVEL_UNSPECIFIED;
const AlertLevel AlertLevel_MAX = ALERT_LEVEL_ALARM;
const int AlertLevel_ARRAYSIZE = AlertLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlertLevel_descriptor();
inline const ::std::string& AlertLevel_Name(AlertLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlertLevel_descriptor(), value);
}
inline bool AlertLevel_Parse(
    const ::std::string& name, AlertLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlertLevel>(
    AlertLevel_descriptor(), name, value);
}
// ===================================================================

class AlertInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AlertInfo) */ {
 public:
  AlertInfo();
  virtual ~AlertInfo();

  AlertInfo(const AlertInfo& from);

  inline AlertInfo& operator=(const AlertInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlertInfo& default_instance();

  void Swap(AlertInfo* other);

  // implements Message ----------------------------------------------

  inline AlertInfo* New() const { return New(NULL); }

  AlertInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlertInfo& from);
  void MergeFrom(const AlertInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AlertInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional uint32 source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // optional .mtm.alert.model.AlertLevel alert_level = 2;
  void clear_alert_level();
  static const int kAlertLevelFieldNumber = 2;
  ::mtm::alert::model::AlertLevel alert_level() const;
  void set_alert_level(::mtm::alert::model::AlertLevel value);

  // optional .mtm.Uuid alert_descriptor_type_id = 3;
  bool has_alert_descriptor_type_id() const;
  void clear_alert_descriptor_type_id();
  static const int kAlertDescriptorTypeIdFieldNumber = 3;
  const ::mtm::Uuid& alert_descriptor_type_id() const;
  ::mtm::Uuid* mutable_alert_descriptor_type_id();
  ::mtm::Uuid* release_alert_descriptor_type_id();
  void set_allocated_alert_descriptor_type_id(::mtm::Uuid* alert_descriptor_type_id);

  // optional .mtm.Uuid instance_id = 4;
  bool has_instance_id() const;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 4;
  const ::mtm::Uuid& instance_id() const;
  ::mtm::Uuid* mutable_instance_id();
  ::mtm::Uuid* release_instance_id();
  void set_allocated_instance_id(::mtm::Uuid* instance_id);

  // optional bool acknowledged = 5;
  void clear_acknowledged();
  static const int kAcknowledgedFieldNumber = 5;
  bool acknowledged() const;
  void set_acknowledged(bool value);

  // optional bool active = 6;
  void clear_active();
  static const int kActiveFieldNumber = 6;
  bool active() const;
  void set_active(bool value);

  // optional bool auto_remove = 7;
  void clear_auto_remove();
  static const int kAutoRemoveFieldNumber = 7;
  bool auto_remove() const;
  void set_auto_remove(bool value);

  // optional uint32 version = 8;
  void clear_version();
  static const int kVersionFieldNumber = 8;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional .google.protobuf.Timestamp last_update = 9;
  bool has_last_update() const;
  void clear_last_update();
  static const int kLastUpdateFieldNumber = 9;
  const ::google::protobuf::Timestamp& last_update() const;
  ::google::protobuf::Timestamp* mutable_last_update();
  ::google::protobuf::Timestamp* release_last_update();
  void set_allocated_last_update(::google::protobuf::Timestamp* last_update);

  // optional bool removed = 10;
  void clear_removed();
  static const int kRemovedFieldNumber = 10;
  bool removed() const;
  void set_removed(bool value);

  // repeated .mtm.event.Argument arguments = 11;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 11;
  const ::mtm::event::Argument& arguments(int index) const;
  ::mtm::event::Argument* mutable_arguments(int index);
  ::mtm::event::Argument* add_arguments();
  ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument >*
      mutable_arguments();
  const ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument >&
      arguments() const;

  // repeated .mtm.alert.model.AlertInfoHistory history = 12;
  int history_size() const;
  void clear_history();
  static const int kHistoryFieldNumber = 12;
  const ::mtm::alert::model::AlertInfoHistory& history(int index) const;
  ::mtm::alert::model::AlertInfoHistory* mutable_history(int index);
  ::mtm::alert::model::AlertInfoHistory* add_history();
  ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory >*
      mutable_history();
  const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory >&
      history() const;

  // map<uint32, uint32> roles_acknowledged_count = 13;
  int roles_acknowledged_count_size() const;
  void clear_roles_acknowledged_count();
  static const int kRolesAcknowledgedCountFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      roles_acknowledged_count() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_roles_acknowledged_count();

  // repeated uint32 accounts_acknowledged = 14;
  int accounts_acknowledged_size() const;
  void clear_accounts_acknowledged();
  static const int kAccountsAcknowledgedFieldNumber = 14;
  ::google::protobuf::uint32 accounts_acknowledged(int index) const;
  void set_accounts_acknowledged(int index, ::google::protobuf::uint32 value);
  void add_accounts_acknowledged(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      accounts_acknowledged() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_accounts_acknowledged();

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AlertInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 source_;
  int alert_level_;
  ::mtm::Uuid* alert_descriptor_type_id_;
  ::mtm::Uuid* instance_id_;
  bool acknowledged_;
  bool active_;
  bool auto_remove_;
  bool removed_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::Timestamp* last_update_;
  ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument > arguments_;
  ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory > history_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 >
      AlertInfo_RolesAcknowledgedCountEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > roles_acknowledged_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > accounts_acknowledged_;
  mutable int _accounts_acknowledged_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static AlertInfo* default_instance_;
};
// -------------------------------------------------------------------

class AlertLevelValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AlertLevelValue) */ {
 public:
  AlertLevelValue();
  virtual ~AlertLevelValue();

  AlertLevelValue(const AlertLevelValue& from);

  inline AlertLevelValue& operator=(const AlertLevelValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlertLevelValue& default_instance();

  void Swap(AlertLevelValue* other);

  // implements Message ----------------------------------------------

  inline AlertLevelValue* New() const { return New(NULL); }

  AlertLevelValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlertLevelValue& from);
  void MergeFrom(const AlertLevelValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AlertLevelValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mtm.alert.model.AlertLevel value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::mtm::alert::model::AlertLevel value() const;
  void set_value(::mtm::alert::model::AlertLevel value);

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AlertLevelValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static AlertLevelValue* default_instance_;
};
// -------------------------------------------------------------------

class AlertInfoList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AlertInfoList) */ {
 public:
  AlertInfoList();
  virtual ~AlertInfoList();

  AlertInfoList(const AlertInfoList& from);

  inline AlertInfoList& operator=(const AlertInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlertInfoList& default_instance();

  void Swap(AlertInfoList* other);

  // implements Message ----------------------------------------------

  inline AlertInfoList* New() const { return New(NULL); }

  AlertInfoList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlertInfoList& from);
  void MergeFrom(const AlertInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AlertInfoList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtm.alert.model.AlertInfo alert_infos = 1;
  int alert_infos_size() const;
  void clear_alert_infos();
  static const int kAlertInfosFieldNumber = 1;
  const ::mtm::alert::model::AlertInfo& alert_infos(int index) const;
  ::mtm::alert::model::AlertInfo* mutable_alert_infos(int index);
  ::mtm::alert::model::AlertInfo* add_alert_infos();
  ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo >*
      mutable_alert_infos();
  const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo >&
      alert_infos() const;

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AlertInfoList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo > alert_infos_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static AlertInfoList* default_instance_;
};
// -------------------------------------------------------------------

class AlertInfoHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AlertInfoHistory) */ {
 public:
  AlertInfoHistory();
  virtual ~AlertInfoHistory();

  AlertInfoHistory(const AlertInfoHistory& from);

  inline AlertInfoHistory& operator=(const AlertInfoHistory& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlertInfoHistory& default_instance();

  enum MsgCase {
    kActivated = 10,
    kDeactivated = 11,
    kStateChanged = 12,
    kAcknowledged = 13,
    kUnacknowledged = 14,
    kCommentAdded = 15,
    kAutoRemoveEnabled = 16,
    kAutoRemoveDisabled = 17,
    kRemoved = 18,
    MSG_NOT_SET = 0,
  };

  void Swap(AlertInfoHistory* other);

  // implements Message ----------------------------------------------

  inline AlertInfoHistory* New() const { return New(NULL); }

  AlertInfoHistory* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlertInfoHistory& from);
  void MergeFrom(const AlertInfoHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AlertInfoHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.Timestamp timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* mutable_timestamp();
  ::google::protobuf::Timestamp* release_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // optional uint32 account_id = 2;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional .mtm.alert.model.Activated activated = 10;
  bool has_activated() const;
  void clear_activated();
  static const int kActivatedFieldNumber = 10;
  const ::mtm::alert::model::Activated& activated() const;
  ::mtm::alert::model::Activated* mutable_activated();
  ::mtm::alert::model::Activated* release_activated();
  void set_allocated_activated(::mtm::alert::model::Activated* activated);

  // optional .mtm.alert.model.Deactivated deactivated = 11;
  bool has_deactivated() const;
  void clear_deactivated();
  static const int kDeactivatedFieldNumber = 11;
  const ::mtm::alert::model::Deactivated& deactivated() const;
  ::mtm::alert::model::Deactivated* mutable_deactivated();
  ::mtm::alert::model::Deactivated* release_deactivated();
  void set_allocated_deactivated(::mtm::alert::model::Deactivated* deactivated);

  // optional .mtm.alert.model.StateChanged state_changed = 12;
  bool has_state_changed() const;
  void clear_state_changed();
  static const int kStateChangedFieldNumber = 12;
  const ::mtm::alert::model::StateChanged& state_changed() const;
  ::mtm::alert::model::StateChanged* mutable_state_changed();
  ::mtm::alert::model::StateChanged* release_state_changed();
  void set_allocated_state_changed(::mtm::alert::model::StateChanged* state_changed);

  // optional .mtm.alert.model.Acknowledged acknowledged = 13;
  bool has_acknowledged() const;
  void clear_acknowledged();
  static const int kAcknowledgedFieldNumber = 13;
  const ::mtm::alert::model::Acknowledged& acknowledged() const;
  ::mtm::alert::model::Acknowledged* mutable_acknowledged();
  ::mtm::alert::model::Acknowledged* release_acknowledged();
  void set_allocated_acknowledged(::mtm::alert::model::Acknowledged* acknowledged);

  // optional .mtm.alert.model.Unacknowledged unacknowledged = 14;
  bool has_unacknowledged() const;
  void clear_unacknowledged();
  static const int kUnacknowledgedFieldNumber = 14;
  const ::mtm::alert::model::Unacknowledged& unacknowledged() const;
  ::mtm::alert::model::Unacknowledged* mutable_unacknowledged();
  ::mtm::alert::model::Unacknowledged* release_unacknowledged();
  void set_allocated_unacknowledged(::mtm::alert::model::Unacknowledged* unacknowledged);

  // optional .mtm.alert.model.CommentAdded comment_added = 15;
  bool has_comment_added() const;
  void clear_comment_added();
  static const int kCommentAddedFieldNumber = 15;
  const ::mtm::alert::model::CommentAdded& comment_added() const;
  ::mtm::alert::model::CommentAdded* mutable_comment_added();
  ::mtm::alert::model::CommentAdded* release_comment_added();
  void set_allocated_comment_added(::mtm::alert::model::CommentAdded* comment_added);

  // optional .mtm.alert.model.AutoRemoveEnabled auto_remove_enabled = 16;
  bool has_auto_remove_enabled() const;
  void clear_auto_remove_enabled();
  static const int kAutoRemoveEnabledFieldNumber = 16;
  const ::mtm::alert::model::AutoRemoveEnabled& auto_remove_enabled() const;
  ::mtm::alert::model::AutoRemoveEnabled* mutable_auto_remove_enabled();
  ::mtm::alert::model::AutoRemoveEnabled* release_auto_remove_enabled();
  void set_allocated_auto_remove_enabled(::mtm::alert::model::AutoRemoveEnabled* auto_remove_enabled);

  // optional .mtm.alert.model.AutoRemoveDisabled auto_remove_disabled = 17;
  bool has_auto_remove_disabled() const;
  void clear_auto_remove_disabled();
  static const int kAutoRemoveDisabledFieldNumber = 17;
  const ::mtm::alert::model::AutoRemoveDisabled& auto_remove_disabled() const;
  ::mtm::alert::model::AutoRemoveDisabled* mutable_auto_remove_disabled();
  ::mtm::alert::model::AutoRemoveDisabled* release_auto_remove_disabled();
  void set_allocated_auto_remove_disabled(::mtm::alert::model::AutoRemoveDisabled* auto_remove_disabled);

  // optional .mtm.alert.model.Removed removed = 18;
  bool has_removed() const;
  void clear_removed();
  static const int kRemovedFieldNumber = 18;
  const ::mtm::alert::model::Removed& removed() const;
  ::mtm::alert::model::Removed* mutable_removed();
  ::mtm::alert::model::Removed* release_removed();
  void set_allocated_removed(::mtm::alert::model::Removed* removed);

  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:mtm.alert.model.AlertInfoHistory)
 private:
  inline void set_has_activated();
  inline void set_has_deactivated();
  inline void set_has_state_changed();
  inline void set_has_acknowledged();
  inline void set_has_unacknowledged();
  inline void set_has_comment_added();
  inline void set_has_auto_remove_enabled();
  inline void set_has_auto_remove_disabled();
  inline void set_has_removed();

  inline bool has_msg() const;
  void clear_msg();
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::Timestamp* timestamp_;
  ::google::protobuf::uint32 account_id_;
  union MsgUnion {
    MsgUnion() {}
    ::mtm::alert::model::Activated* activated_;
    ::mtm::alert::model::Deactivated* deactivated_;
    ::mtm::alert::model::StateChanged* state_changed_;
    ::mtm::alert::model::Acknowledged* acknowledged_;
    ::mtm::alert::model::Unacknowledged* unacknowledged_;
    ::mtm::alert::model::CommentAdded* comment_added_;
    ::mtm::alert::model::AutoRemoveEnabled* auto_remove_enabled_;
    ::mtm::alert::model::AutoRemoveDisabled* auto_remove_disabled_;
    ::mtm::alert::model::Removed* removed_;
  } msg_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static AlertInfoHistory* default_instance_;
};
// -------------------------------------------------------------------

class Activated : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.Activated) */ {
 public:
  Activated();
  virtual ~Activated();

  Activated(const Activated& from);

  inline Activated& operator=(const Activated& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Activated& default_instance();

  void Swap(Activated* other);

  // implements Message ----------------------------------------------

  inline Activated* New() const { return New(NULL); }

  Activated* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activated& from);
  void MergeFrom(const Activated& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Activated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.Activated)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static Activated* default_instance_;
};
// -------------------------------------------------------------------

class Deactivated : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.Deactivated) */ {
 public:
  Deactivated();
  virtual ~Deactivated();

  Deactivated(const Deactivated& from);

  inline Deactivated& operator=(const Deactivated& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Deactivated& default_instance();

  void Swap(Deactivated* other);

  // implements Message ----------------------------------------------

  inline Deactivated* New() const { return New(NULL); }

  Deactivated* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Deactivated& from);
  void MergeFrom(const Deactivated& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Deactivated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.Deactivated)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static Deactivated* default_instance_;
};
// -------------------------------------------------------------------

class StateChanged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.StateChanged) */ {
 public:
  StateChanged();
  virtual ~StateChanged();

  StateChanged(const StateChanged& from);

  inline StateChanged& operator=(const StateChanged& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StateChanged& default_instance();

  void Swap(StateChanged* other);

  // implements Message ----------------------------------------------

  inline StateChanged* New() const { return New(NULL); }

  StateChanged* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StateChanged& from);
  void MergeFrom(const StateChanged& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mtm.alert.model.AlertLevel new_level = 1;
  void clear_new_level();
  static const int kNewLevelFieldNumber = 1;
  ::mtm::alert::model::AlertLevel new_level() const;
  void set_new_level(::mtm::alert::model::AlertLevel value);

  // @@protoc_insertion_point(class_scope:mtm.alert.model.StateChanged)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int new_level_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static StateChanged* default_instance_;
};
// -------------------------------------------------------------------

class Acknowledged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.Acknowledged) */ {
 public:
  Acknowledged();
  virtual ~Acknowledged();

  Acknowledged(const Acknowledged& from);

  inline Acknowledged& operator=(const Acknowledged& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Acknowledged& default_instance();

  void Swap(Acknowledged* other);

  // implements Message ----------------------------------------------

  inline Acknowledged* New() const { return New(NULL); }

  Acknowledged* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Acknowledged& from);
  void MergeFrom(const Acknowledged& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Acknowledged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.Acknowledged)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static Acknowledged* default_instance_;
};
// -------------------------------------------------------------------

class Unacknowledged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.Unacknowledged) */ {
 public:
  Unacknowledged();
  virtual ~Unacknowledged();

  Unacknowledged(const Unacknowledged& from);

  inline Unacknowledged& operator=(const Unacknowledged& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Unacknowledged& default_instance();

  void Swap(Unacknowledged* other);

  // implements Message ----------------------------------------------

  inline Unacknowledged* New() const { return New(NULL); }

  Unacknowledged* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Unacknowledged& from);
  void MergeFrom(const Unacknowledged& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Unacknowledged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.Unacknowledged)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static Unacknowledged* default_instance_;
};
// -------------------------------------------------------------------

class CommentAdded : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.CommentAdded) */ {
 public:
  CommentAdded();
  virtual ~CommentAdded();

  CommentAdded(const CommentAdded& from);

  inline CommentAdded& operator=(const CommentAdded& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommentAdded& default_instance();

  void Swap(CommentAdded* other);

  // implements Message ----------------------------------------------

  inline CommentAdded* New() const { return New(NULL); }

  CommentAdded* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommentAdded& from);
  void MergeFrom(const CommentAdded& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CommentAdded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string comment = 1;
  void clear_comment();
  static const int kCommentFieldNumber = 1;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:mtm.alert.model.CommentAdded)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static CommentAdded* default_instance_;
};
// -------------------------------------------------------------------

class AutoRemoveEnabled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AutoRemoveEnabled) */ {
 public:
  AutoRemoveEnabled();
  virtual ~AutoRemoveEnabled();

  AutoRemoveEnabled(const AutoRemoveEnabled& from);

  inline AutoRemoveEnabled& operator=(const AutoRemoveEnabled& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoRemoveEnabled& default_instance();

  void Swap(AutoRemoveEnabled* other);

  // implements Message ----------------------------------------------

  inline AutoRemoveEnabled* New() const { return New(NULL); }

  AutoRemoveEnabled* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutoRemoveEnabled& from);
  void MergeFrom(const AutoRemoveEnabled& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutoRemoveEnabled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AutoRemoveEnabled)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static AutoRemoveEnabled* default_instance_;
};
// -------------------------------------------------------------------

class AutoRemoveDisabled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AutoRemoveDisabled) */ {
 public:
  AutoRemoveDisabled();
  virtual ~AutoRemoveDisabled();

  AutoRemoveDisabled(const AutoRemoveDisabled& from);

  inline AutoRemoveDisabled& operator=(const AutoRemoveDisabled& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoRemoveDisabled& default_instance();

  void Swap(AutoRemoveDisabled* other);

  // implements Message ----------------------------------------------

  inline AutoRemoveDisabled* New() const { return New(NULL); }

  AutoRemoveDisabled* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutoRemoveDisabled& from);
  void MergeFrom(const AutoRemoveDisabled& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutoRemoveDisabled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AutoRemoveDisabled)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static AutoRemoveDisabled* default_instance_;
};
// -------------------------------------------------------------------

class Removed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.Removed) */ {
 public:
  Removed();
  virtual ~Removed();

  Removed(const Removed& from);

  inline Removed& operator=(const Removed& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Removed& default_instance();

  void Swap(Removed* other);

  // implements Message ----------------------------------------------

  inline Removed* New() const { return New(NULL); }

  Removed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Removed& from);
  void MergeFrom(const Removed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Removed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.Removed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_AssignDesc_mtm_2falert_2fmodel_2falert_5finfo_2eproto();
  friend void protobuf_ShutdownFile_mtm_2falert_2fmodel_2falert_5finfo_2eproto();

  void InitAsDefaultInstance();
  static Removed* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AlertInfo

// optional uint32 source = 1;
inline void AlertInfo::clear_source() {
  source_ = 0u;
}
inline ::google::protobuf::uint32 AlertInfo::source() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.source)
  return source_;
}
inline void AlertInfo::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.source)
}

// optional .mtm.alert.model.AlertLevel alert_level = 2;
inline void AlertInfo::clear_alert_level() {
  alert_level_ = 0;
}
inline ::mtm::alert::model::AlertLevel AlertInfo::alert_level() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.alert_level)
  return static_cast< ::mtm::alert::model::AlertLevel >(alert_level_);
}
inline void AlertInfo::set_alert_level(::mtm::alert::model::AlertLevel value) {
  
  alert_level_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.alert_level)
}

// optional .mtm.Uuid alert_descriptor_type_id = 3;
inline bool AlertInfo::has_alert_descriptor_type_id() const {
  return !_is_default_instance_ && alert_descriptor_type_id_ != NULL;
}
inline void AlertInfo::clear_alert_descriptor_type_id() {
  if (GetArenaNoVirtual() == NULL && alert_descriptor_type_id_ != NULL) delete alert_descriptor_type_id_;
  alert_descriptor_type_id_ = NULL;
}
inline const ::mtm::Uuid& AlertInfo::alert_descriptor_type_id() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
  return alert_descriptor_type_id_ != NULL ? *alert_descriptor_type_id_ : *default_instance_->alert_descriptor_type_id_;
}
inline ::mtm::Uuid* AlertInfo::mutable_alert_descriptor_type_id() {
  
  if (alert_descriptor_type_id_ == NULL) {
    alert_descriptor_type_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
  return alert_descriptor_type_id_;
}
inline ::mtm::Uuid* AlertInfo::release_alert_descriptor_type_id() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
  
  ::mtm::Uuid* temp = alert_descriptor_type_id_;
  alert_descriptor_type_id_ = NULL;
  return temp;
}
inline void AlertInfo::set_allocated_alert_descriptor_type_id(::mtm::Uuid* alert_descriptor_type_id) {
  delete alert_descriptor_type_id_;
  alert_descriptor_type_id_ = alert_descriptor_type_id;
  if (alert_descriptor_type_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
}

// optional .mtm.Uuid instance_id = 4;
inline bool AlertInfo::has_instance_id() const {
  return !_is_default_instance_ && instance_id_ != NULL;
}
inline void AlertInfo::clear_instance_id() {
  if (GetArenaNoVirtual() == NULL && instance_id_ != NULL) delete instance_id_;
  instance_id_ = NULL;
}
inline const ::mtm::Uuid& AlertInfo::instance_id() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.instance_id)
  return instance_id_ != NULL ? *instance_id_ : *default_instance_->instance_id_;
}
inline ::mtm::Uuid* AlertInfo::mutable_instance_id() {
  
  if (instance_id_ == NULL) {
    instance_id_ = new ::mtm::Uuid;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.instance_id)
  return instance_id_;
}
inline ::mtm::Uuid* AlertInfo::release_instance_id() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfo.instance_id)
  
  ::mtm::Uuid* temp = instance_id_;
  instance_id_ = NULL;
  return temp;
}
inline void AlertInfo::set_allocated_instance_id(::mtm::Uuid* instance_id) {
  delete instance_id_;
  instance_id_ = instance_id;
  if (instance_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfo.instance_id)
}

// optional bool acknowledged = 5;
inline void AlertInfo::clear_acknowledged() {
  acknowledged_ = false;
}
inline bool AlertInfo::acknowledged() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.acknowledged)
  return acknowledged_;
}
inline void AlertInfo::set_acknowledged(bool value) {
  
  acknowledged_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.acknowledged)
}

// optional bool active = 6;
inline void AlertInfo::clear_active() {
  active_ = false;
}
inline bool AlertInfo::active() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.active)
  return active_;
}
inline void AlertInfo::set_active(bool value) {
  
  active_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.active)
}

// optional bool auto_remove = 7;
inline void AlertInfo::clear_auto_remove() {
  auto_remove_ = false;
}
inline bool AlertInfo::auto_remove() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.auto_remove)
  return auto_remove_;
}
inline void AlertInfo::set_auto_remove(bool value) {
  
  auto_remove_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.auto_remove)
}

// optional uint32 version = 8;
inline void AlertInfo::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 AlertInfo::version() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.version)
  return version_;
}
inline void AlertInfo::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.version)
}

// optional .google.protobuf.Timestamp last_update = 9;
inline bool AlertInfo::has_last_update() const {
  return !_is_default_instance_ && last_update_ != NULL;
}
inline void AlertInfo::clear_last_update() {
  if (GetArenaNoVirtual() == NULL && last_update_ != NULL) delete last_update_;
  last_update_ = NULL;
}
inline const ::google::protobuf::Timestamp& AlertInfo::last_update() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.last_update)
  return last_update_ != NULL ? *last_update_ : *default_instance_->last_update_;
}
inline ::google::protobuf::Timestamp* AlertInfo::mutable_last_update() {
  
  if (last_update_ == NULL) {
    last_update_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.last_update)
  return last_update_;
}
inline ::google::protobuf::Timestamp* AlertInfo::release_last_update() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfo.last_update)
  
  ::google::protobuf::Timestamp* temp = last_update_;
  last_update_ = NULL;
  return temp;
}
inline void AlertInfo::set_allocated_last_update(::google::protobuf::Timestamp* last_update) {
  delete last_update_;
  if (last_update != NULL && last_update->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_last_update = new ::google::protobuf::Timestamp;
    new_last_update->CopyFrom(*last_update);
    last_update = new_last_update;
  }
  last_update_ = last_update;
  if (last_update) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfo.last_update)
}

// optional bool removed = 10;
inline void AlertInfo::clear_removed() {
  removed_ = false;
}
inline bool AlertInfo::removed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.removed)
  return removed_;
}
inline void AlertInfo::set_removed(bool value) {
  
  removed_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.removed)
}

// repeated .mtm.event.Argument arguments = 11;
inline int AlertInfo::arguments_size() const {
  return arguments_.size();
}
inline void AlertInfo::clear_arguments() {
  arguments_.Clear();
}
inline const ::mtm::event::Argument& AlertInfo::arguments(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.arguments)
  return arguments_.Get(index);
}
inline ::mtm::event::Argument* AlertInfo::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.arguments)
  return arguments_.Mutable(index);
}
inline ::mtm::event::Argument* AlertInfo::add_arguments() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfo.arguments)
  return arguments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument >*
AlertInfo::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfo.arguments)
  return &arguments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument >&
AlertInfo::arguments() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfo.arguments)
  return arguments_;
}

// repeated .mtm.alert.model.AlertInfoHistory history = 12;
inline int AlertInfo::history_size() const {
  return history_.size();
}
inline void AlertInfo::clear_history() {
  history_.Clear();
}
inline const ::mtm::alert::model::AlertInfoHistory& AlertInfo::history(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.history)
  return history_.Get(index);
}
inline ::mtm::alert::model::AlertInfoHistory* AlertInfo::mutable_history(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.history)
  return history_.Mutable(index);
}
inline ::mtm::alert::model::AlertInfoHistory* AlertInfo::add_history() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfo.history)
  return history_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory >*
AlertInfo::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfo.history)
  return &history_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory >&
AlertInfo::history() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfo.history)
  return history_;
}

// map<uint32, uint32> roles_acknowledged_count = 13;
inline int AlertInfo::roles_acknowledged_count_size() const {
  return roles_acknowledged_count_.size();
}
inline void AlertInfo::clear_roles_acknowledged_count() {
  roles_acknowledged_count_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AlertInfo::roles_acknowledged_count() const {
  // @@protoc_insertion_point(field_map:mtm.alert.model.AlertInfo.roles_acknowledged_count)
  return roles_acknowledged_count_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AlertInfo::mutable_roles_acknowledged_count() {
  // @@protoc_insertion_point(field_mutable_map:mtm.alert.model.AlertInfo.roles_acknowledged_count)
  return roles_acknowledged_count_.MutableMap();
}

// repeated uint32 accounts_acknowledged = 14;
inline int AlertInfo::accounts_acknowledged_size() const {
  return accounts_acknowledged_.size();
}
inline void AlertInfo::clear_accounts_acknowledged() {
  accounts_acknowledged_.Clear();
}
inline ::google::protobuf::uint32 AlertInfo::accounts_acknowledged(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.accounts_acknowledged)
  return accounts_acknowledged_.Get(index);
}
inline void AlertInfo::set_accounts_acknowledged(int index, ::google::protobuf::uint32 value) {
  accounts_acknowledged_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.accounts_acknowledged)
}
inline void AlertInfo::add_accounts_acknowledged(::google::protobuf::uint32 value) {
  accounts_acknowledged_.Add(value);
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfo.accounts_acknowledged)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AlertInfo::accounts_acknowledged() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfo.accounts_acknowledged)
  return accounts_acknowledged_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AlertInfo::mutable_accounts_acknowledged() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfo.accounts_acknowledged)
  return &accounts_acknowledged_;
}

// -------------------------------------------------------------------

// AlertLevelValue

// optional .mtm.alert.model.AlertLevel value = 1;
inline void AlertLevelValue::clear_value() {
  value_ = 0;
}
inline ::mtm::alert::model::AlertLevel AlertLevelValue::value() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertLevelValue.value)
  return static_cast< ::mtm::alert::model::AlertLevel >(value_);
}
inline void AlertLevelValue::set_value(::mtm::alert::model::AlertLevel value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertLevelValue.value)
}

// -------------------------------------------------------------------

// AlertInfoList

// repeated .mtm.alert.model.AlertInfo alert_infos = 1;
inline int AlertInfoList::alert_infos_size() const {
  return alert_infos_.size();
}
inline void AlertInfoList::clear_alert_infos() {
  alert_infos_.Clear();
}
inline const ::mtm::alert::model::AlertInfo& AlertInfoList::alert_infos(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_.Get(index);
}
inline ::mtm::alert::model::AlertInfo* AlertInfoList::mutable_alert_infos(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_.Mutable(index);
}
inline ::mtm::alert::model::AlertInfo* AlertInfoList::add_alert_infos() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo >*
AlertInfoList::mutable_alert_infos() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfoList.alert_infos)
  return &alert_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo >&
AlertInfoList::alert_infos() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_;
}

// -------------------------------------------------------------------

// AlertInfoHistory

// optional .google.protobuf.Timestamp timestamp = 1;
inline bool AlertInfoHistory::has_timestamp() const {
  return !_is_default_instance_ && timestamp_ != NULL;
}
inline void AlertInfoHistory::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
inline const ::google::protobuf::Timestamp& AlertInfoHistory::timestamp() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.timestamp)
  return timestamp_ != NULL ? *timestamp_ : *default_instance_->timestamp_;
}
inline ::google::protobuf::Timestamp* AlertInfoHistory::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.timestamp)
  return timestamp_;
}
inline ::google::protobuf::Timestamp* AlertInfoHistory::release_timestamp() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void AlertInfoHistory::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  delete timestamp_;
  if (timestamp != NULL && timestamp->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_timestamp = new ::google::protobuf::Timestamp;
    new_timestamp->CopyFrom(*timestamp);
    timestamp = new_timestamp;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.timestamp)
}

// optional uint32 account_id = 2;
inline void AlertInfoHistory::clear_account_id() {
  account_id_ = 0u;
}
inline ::google::protobuf::uint32 AlertInfoHistory::account_id() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.account_id)
  return account_id_;
}
inline void AlertInfoHistory::set_account_id(::google::protobuf::uint32 value) {
  
  account_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfoHistory.account_id)
}

// optional .mtm.alert.model.Activated activated = 10;
inline bool AlertInfoHistory::has_activated() const {
  return msg_case() == kActivated;
}
inline void AlertInfoHistory::set_has_activated() {
  _oneof_case_[0] = kActivated;
}
inline void AlertInfoHistory::clear_activated() {
  if (has_activated()) {
    delete msg_.activated_;
    clear_has_msg();
  }
}
inline  const ::mtm::alert::model::Activated& AlertInfoHistory::activated() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.activated)
  return has_activated()
      ? *msg_.activated_
      : ::mtm::alert::model::Activated::default_instance();
}
inline ::mtm::alert::model::Activated* AlertInfoHistory::mutable_activated() {
  if (!has_activated()) {
    clear_msg();
    set_has_activated();
    msg_.activated_ = new ::mtm::alert::model::Activated;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.activated)
  return msg_.activated_;
}
inline ::mtm::alert::model::Activated* AlertInfoHistory::release_activated() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.activated)
  if (has_activated()) {
    clear_has_msg();
    ::mtm::alert::model::Activated* temp = msg_.activated_;
    msg_.activated_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AlertInfoHistory::set_allocated_activated(::mtm::alert::model::Activated* activated) {
  clear_msg();
  if (activated) {
    set_has_activated();
    msg_.activated_ = activated;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.activated)
}

// optional .mtm.alert.model.Deactivated deactivated = 11;
inline bool AlertInfoHistory::has_deactivated() const {
  return msg_case() == kDeactivated;
}
inline void AlertInfoHistory::set_has_deactivated() {
  _oneof_case_[0] = kDeactivated;
}
inline void AlertInfoHistory::clear_deactivated() {
  if (has_deactivated()) {
    delete msg_.deactivated_;
    clear_has_msg();
  }
}
inline  const ::mtm::alert::model::Deactivated& AlertInfoHistory::deactivated() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.deactivated)
  return has_deactivated()
      ? *msg_.deactivated_
      : ::mtm::alert::model::Deactivated::default_instance();
}
inline ::mtm::alert::model::Deactivated* AlertInfoHistory::mutable_deactivated() {
  if (!has_deactivated()) {
    clear_msg();
    set_has_deactivated();
    msg_.deactivated_ = new ::mtm::alert::model::Deactivated;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.deactivated)
  return msg_.deactivated_;
}
inline ::mtm::alert::model::Deactivated* AlertInfoHistory::release_deactivated() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.deactivated)
  if (has_deactivated()) {
    clear_has_msg();
    ::mtm::alert::model::Deactivated* temp = msg_.deactivated_;
    msg_.deactivated_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AlertInfoHistory::set_allocated_deactivated(::mtm::alert::model::Deactivated* deactivated) {
  clear_msg();
  if (deactivated) {
    set_has_deactivated();
    msg_.deactivated_ = deactivated;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.deactivated)
}

// optional .mtm.alert.model.StateChanged state_changed = 12;
inline bool AlertInfoHistory::has_state_changed() const {
  return msg_case() == kStateChanged;
}
inline void AlertInfoHistory::set_has_state_changed() {
  _oneof_case_[0] = kStateChanged;
}
inline void AlertInfoHistory::clear_state_changed() {
  if (has_state_changed()) {
    delete msg_.state_changed_;
    clear_has_msg();
  }
}
inline  const ::mtm::alert::model::StateChanged& AlertInfoHistory::state_changed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.state_changed)
  return has_state_changed()
      ? *msg_.state_changed_
      : ::mtm::alert::model::StateChanged::default_instance();
}
inline ::mtm::alert::model::StateChanged* AlertInfoHistory::mutable_state_changed() {
  if (!has_state_changed()) {
    clear_msg();
    set_has_state_changed();
    msg_.state_changed_ = new ::mtm::alert::model::StateChanged;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.state_changed)
  return msg_.state_changed_;
}
inline ::mtm::alert::model::StateChanged* AlertInfoHistory::release_state_changed() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.state_changed)
  if (has_state_changed()) {
    clear_has_msg();
    ::mtm::alert::model::StateChanged* temp = msg_.state_changed_;
    msg_.state_changed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AlertInfoHistory::set_allocated_state_changed(::mtm::alert::model::StateChanged* state_changed) {
  clear_msg();
  if (state_changed) {
    set_has_state_changed();
    msg_.state_changed_ = state_changed;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.state_changed)
}

// optional .mtm.alert.model.Acknowledged acknowledged = 13;
inline bool AlertInfoHistory::has_acknowledged() const {
  return msg_case() == kAcknowledged;
}
inline void AlertInfoHistory::set_has_acknowledged() {
  _oneof_case_[0] = kAcknowledged;
}
inline void AlertInfoHistory::clear_acknowledged() {
  if (has_acknowledged()) {
    delete msg_.acknowledged_;
    clear_has_msg();
  }
}
inline  const ::mtm::alert::model::Acknowledged& AlertInfoHistory::acknowledged() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.acknowledged)
  return has_acknowledged()
      ? *msg_.acknowledged_
      : ::mtm::alert::model::Acknowledged::default_instance();
}
inline ::mtm::alert::model::Acknowledged* AlertInfoHistory::mutable_acknowledged() {
  if (!has_acknowledged()) {
    clear_msg();
    set_has_acknowledged();
    msg_.acknowledged_ = new ::mtm::alert::model::Acknowledged;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.acknowledged)
  return msg_.acknowledged_;
}
inline ::mtm::alert::model::Acknowledged* AlertInfoHistory::release_acknowledged() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.acknowledged)
  if (has_acknowledged()) {
    clear_has_msg();
    ::mtm::alert::model::Acknowledged* temp = msg_.acknowledged_;
    msg_.acknowledged_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AlertInfoHistory::set_allocated_acknowledged(::mtm::alert::model::Acknowledged* acknowledged) {
  clear_msg();
  if (acknowledged) {
    set_has_acknowledged();
    msg_.acknowledged_ = acknowledged;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.acknowledged)
}

// optional .mtm.alert.model.Unacknowledged unacknowledged = 14;
inline bool AlertInfoHistory::has_unacknowledged() const {
  return msg_case() == kUnacknowledged;
}
inline void AlertInfoHistory::set_has_unacknowledged() {
  _oneof_case_[0] = kUnacknowledged;
}
inline void AlertInfoHistory::clear_unacknowledged() {
  if (has_unacknowledged()) {
    delete msg_.unacknowledged_;
    clear_has_msg();
  }
}
inline  const ::mtm::alert::model::Unacknowledged& AlertInfoHistory::unacknowledged() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.unacknowledged)
  return has_unacknowledged()
      ? *msg_.unacknowledged_
      : ::mtm::alert::model::Unacknowledged::default_instance();
}
inline ::mtm::alert::model::Unacknowledged* AlertInfoHistory::mutable_unacknowledged() {
  if (!has_unacknowledged()) {
    clear_msg();
    set_has_unacknowledged();
    msg_.unacknowledged_ = new ::mtm::alert::model::Unacknowledged;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.unacknowledged)
  return msg_.unacknowledged_;
}
inline ::mtm::alert::model::Unacknowledged* AlertInfoHistory::release_unacknowledged() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.unacknowledged)
  if (has_unacknowledged()) {
    clear_has_msg();
    ::mtm::alert::model::Unacknowledged* temp = msg_.unacknowledged_;
    msg_.unacknowledged_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AlertInfoHistory::set_allocated_unacknowledged(::mtm::alert::model::Unacknowledged* unacknowledged) {
  clear_msg();
  if (unacknowledged) {
    set_has_unacknowledged();
    msg_.unacknowledged_ = unacknowledged;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.unacknowledged)
}

// optional .mtm.alert.model.CommentAdded comment_added = 15;
inline bool AlertInfoHistory::has_comment_added() const {
  return msg_case() == kCommentAdded;
}
inline void AlertInfoHistory::set_has_comment_added() {
  _oneof_case_[0] = kCommentAdded;
}
inline void AlertInfoHistory::clear_comment_added() {
  if (has_comment_added()) {
    delete msg_.comment_added_;
    clear_has_msg();
  }
}
inline  const ::mtm::alert::model::CommentAdded& AlertInfoHistory::comment_added() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.comment_added)
  return has_comment_added()
      ? *msg_.comment_added_
      : ::mtm::alert::model::CommentAdded::default_instance();
}
inline ::mtm::alert::model::CommentAdded* AlertInfoHistory::mutable_comment_added() {
  if (!has_comment_added()) {
    clear_msg();
    set_has_comment_added();
    msg_.comment_added_ = new ::mtm::alert::model::CommentAdded;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.comment_added)
  return msg_.comment_added_;
}
inline ::mtm::alert::model::CommentAdded* AlertInfoHistory::release_comment_added() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.comment_added)
  if (has_comment_added()) {
    clear_has_msg();
    ::mtm::alert::model::CommentAdded* temp = msg_.comment_added_;
    msg_.comment_added_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AlertInfoHistory::set_allocated_comment_added(::mtm::alert::model::CommentAdded* comment_added) {
  clear_msg();
  if (comment_added) {
    set_has_comment_added();
    msg_.comment_added_ = comment_added;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.comment_added)
}

// optional .mtm.alert.model.AutoRemoveEnabled auto_remove_enabled = 16;
inline bool AlertInfoHistory::has_auto_remove_enabled() const {
  return msg_case() == kAutoRemoveEnabled;
}
inline void AlertInfoHistory::set_has_auto_remove_enabled() {
  _oneof_case_[0] = kAutoRemoveEnabled;
}
inline void AlertInfoHistory::clear_auto_remove_enabled() {
  if (has_auto_remove_enabled()) {
    delete msg_.auto_remove_enabled_;
    clear_has_msg();
  }
}
inline  const ::mtm::alert::model::AutoRemoveEnabled& AlertInfoHistory::auto_remove_enabled() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
  return has_auto_remove_enabled()
      ? *msg_.auto_remove_enabled_
      : ::mtm::alert::model::AutoRemoveEnabled::default_instance();
}
inline ::mtm::alert::model::AutoRemoveEnabled* AlertInfoHistory::mutable_auto_remove_enabled() {
  if (!has_auto_remove_enabled()) {
    clear_msg();
    set_has_auto_remove_enabled();
    msg_.auto_remove_enabled_ = new ::mtm::alert::model::AutoRemoveEnabled;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
  return msg_.auto_remove_enabled_;
}
inline ::mtm::alert::model::AutoRemoveEnabled* AlertInfoHistory::release_auto_remove_enabled() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
  if (has_auto_remove_enabled()) {
    clear_has_msg();
    ::mtm::alert::model::AutoRemoveEnabled* temp = msg_.auto_remove_enabled_;
    msg_.auto_remove_enabled_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AlertInfoHistory::set_allocated_auto_remove_enabled(::mtm::alert::model::AutoRemoveEnabled* auto_remove_enabled) {
  clear_msg();
  if (auto_remove_enabled) {
    set_has_auto_remove_enabled();
    msg_.auto_remove_enabled_ = auto_remove_enabled;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
}

// optional .mtm.alert.model.AutoRemoveDisabled auto_remove_disabled = 17;
inline bool AlertInfoHistory::has_auto_remove_disabled() const {
  return msg_case() == kAutoRemoveDisabled;
}
inline void AlertInfoHistory::set_has_auto_remove_disabled() {
  _oneof_case_[0] = kAutoRemoveDisabled;
}
inline void AlertInfoHistory::clear_auto_remove_disabled() {
  if (has_auto_remove_disabled()) {
    delete msg_.auto_remove_disabled_;
    clear_has_msg();
  }
}
inline  const ::mtm::alert::model::AutoRemoveDisabled& AlertInfoHistory::auto_remove_disabled() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
  return has_auto_remove_disabled()
      ? *msg_.auto_remove_disabled_
      : ::mtm::alert::model::AutoRemoveDisabled::default_instance();
}
inline ::mtm::alert::model::AutoRemoveDisabled* AlertInfoHistory::mutable_auto_remove_disabled() {
  if (!has_auto_remove_disabled()) {
    clear_msg();
    set_has_auto_remove_disabled();
    msg_.auto_remove_disabled_ = new ::mtm::alert::model::AutoRemoveDisabled;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
  return msg_.auto_remove_disabled_;
}
inline ::mtm::alert::model::AutoRemoveDisabled* AlertInfoHistory::release_auto_remove_disabled() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
  if (has_auto_remove_disabled()) {
    clear_has_msg();
    ::mtm::alert::model::AutoRemoveDisabled* temp = msg_.auto_remove_disabled_;
    msg_.auto_remove_disabled_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AlertInfoHistory::set_allocated_auto_remove_disabled(::mtm::alert::model::AutoRemoveDisabled* auto_remove_disabled) {
  clear_msg();
  if (auto_remove_disabled) {
    set_has_auto_remove_disabled();
    msg_.auto_remove_disabled_ = auto_remove_disabled;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
}

// optional .mtm.alert.model.Removed removed = 18;
inline bool AlertInfoHistory::has_removed() const {
  return msg_case() == kRemoved;
}
inline void AlertInfoHistory::set_has_removed() {
  _oneof_case_[0] = kRemoved;
}
inline void AlertInfoHistory::clear_removed() {
  if (has_removed()) {
    delete msg_.removed_;
    clear_has_msg();
  }
}
inline  const ::mtm::alert::model::Removed& AlertInfoHistory::removed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.removed)
  return has_removed()
      ? *msg_.removed_
      : ::mtm::alert::model::Removed::default_instance();
}
inline ::mtm::alert::model::Removed* AlertInfoHistory::mutable_removed() {
  if (!has_removed()) {
    clear_msg();
    set_has_removed();
    msg_.removed_ = new ::mtm::alert::model::Removed;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.removed)
  return msg_.removed_;
}
inline ::mtm::alert::model::Removed* AlertInfoHistory::release_removed() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.removed)
  if (has_removed()) {
    clear_has_msg();
    ::mtm::alert::model::Removed* temp = msg_.removed_;
    msg_.removed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AlertInfoHistory::set_allocated_removed(::mtm::alert::model::Removed* removed) {
  clear_msg();
  if (removed) {
    set_has_removed();
    msg_.removed_ = removed;
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.removed)
}

inline bool AlertInfoHistory::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void AlertInfoHistory::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
inline AlertInfoHistory::MsgCase AlertInfoHistory::msg_case() const {
  return AlertInfoHistory::MsgCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Activated

// -------------------------------------------------------------------

// Deactivated

// -------------------------------------------------------------------

// StateChanged

// optional .mtm.alert.model.AlertLevel new_level = 1;
inline void StateChanged::clear_new_level() {
  new_level_ = 0;
}
inline ::mtm::alert::model::AlertLevel StateChanged::new_level() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.StateChanged.new_level)
  return static_cast< ::mtm::alert::model::AlertLevel >(new_level_);
}
inline void StateChanged::set_new_level(::mtm::alert::model::AlertLevel value) {
  
  new_level_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.StateChanged.new_level)
}

// -------------------------------------------------------------------

// Acknowledged

// -------------------------------------------------------------------

// Unacknowledged

// -------------------------------------------------------------------

// CommentAdded

// optional string comment = 1;
inline void CommentAdded::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommentAdded::comment() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.CommentAdded.comment)
  return comment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommentAdded::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.CommentAdded.comment)
}
inline void CommentAdded::set_comment(const char* value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.alert.model.CommentAdded.comment)
}
inline void CommentAdded::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.alert.model.CommentAdded.comment)
}
inline ::std::string* CommentAdded::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.CommentAdded.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommentAdded::release_comment() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.CommentAdded.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommentAdded::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.CommentAdded.comment)
}

// -------------------------------------------------------------------

// AutoRemoveEnabled

// -------------------------------------------------------------------

// AutoRemoveDisabled

// -------------------------------------------------------------------

// Removed

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace alert
}  // namespace mtm

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mtm::alert::model::AlertLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mtm::alert::model::AlertLevel>() {
  return ::mtm::alert::model::AlertLevel_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mtm_2falert_2fmodel_2falert_5finfo_2eproto__INCLUDED
