// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/alert/model/alert_info.proto

#ifndef PROTOBUF_INCLUDED_mtm_2falert_2fmodel_2falert_5finfo_2eproto
#define PROTOBUF_INCLUDED_mtm_2falert_2fmodel_2falert_5finfo_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include "mtm/event/argument.pb.h"
#include "mtm/common_types.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto 

namespace protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto
namespace mtm {
namespace alert {
namespace model {
class Acknowledged;
class AcknowledgedDefaultTypeInternal;
extern AcknowledgedDefaultTypeInternal _Acknowledged_default_instance_;
class Activated;
class ActivatedDefaultTypeInternal;
extern ActivatedDefaultTypeInternal _Activated_default_instance_;
class AlertInfo;
class AlertInfoDefaultTypeInternal;
extern AlertInfoDefaultTypeInternal _AlertInfo_default_instance_;
class AlertInfoHistory;
class AlertInfoHistoryDefaultTypeInternal;
extern AlertInfoHistoryDefaultTypeInternal _AlertInfoHistory_default_instance_;
class AlertInfoList;
class AlertInfoListDefaultTypeInternal;
extern AlertInfoListDefaultTypeInternal _AlertInfoList_default_instance_;
class AlertInfo_RolesAcknowledgedCountEntry_DoNotUse;
class AlertInfo_RolesAcknowledgedCountEntry_DoNotUseDefaultTypeInternal;
extern AlertInfo_RolesAcknowledgedCountEntry_DoNotUseDefaultTypeInternal _AlertInfo_RolesAcknowledgedCountEntry_DoNotUse_default_instance_;
class AlertLevelValue;
class AlertLevelValueDefaultTypeInternal;
extern AlertLevelValueDefaultTypeInternal _AlertLevelValue_default_instance_;
class AutoRemoveDisabled;
class AutoRemoveDisabledDefaultTypeInternal;
extern AutoRemoveDisabledDefaultTypeInternal _AutoRemoveDisabled_default_instance_;
class AutoRemoveEnabled;
class AutoRemoveEnabledDefaultTypeInternal;
extern AutoRemoveEnabledDefaultTypeInternal _AutoRemoveEnabled_default_instance_;
class CommentAdded;
class CommentAddedDefaultTypeInternal;
extern CommentAddedDefaultTypeInternal _CommentAdded_default_instance_;
class Deactivated;
class DeactivatedDefaultTypeInternal;
extern DeactivatedDefaultTypeInternal _Deactivated_default_instance_;
class Removed;
class RemovedDefaultTypeInternal;
extern RemovedDefaultTypeInternal _Removed_default_instance_;
class StateChanged;
class StateChangedDefaultTypeInternal;
extern StateChangedDefaultTypeInternal _StateChanged_default_instance_;
class Unacknowledged;
class UnacknowledgedDefaultTypeInternal;
extern UnacknowledgedDefaultTypeInternal _Unacknowledged_default_instance_;
}  // namespace model
}  // namespace alert
}  // namespace mtm
namespace google {
namespace protobuf {
template<> ::mtm::alert::model::Acknowledged* Arena::CreateMaybeMessage<::mtm::alert::model::Acknowledged>(Arena*);
template<> ::mtm::alert::model::Activated* Arena::CreateMaybeMessage<::mtm::alert::model::Activated>(Arena*);
template<> ::mtm::alert::model::AlertInfo* Arena::CreateMaybeMessage<::mtm::alert::model::AlertInfo>(Arena*);
template<> ::mtm::alert::model::AlertInfoHistory* Arena::CreateMaybeMessage<::mtm::alert::model::AlertInfoHistory>(Arena*);
template<> ::mtm::alert::model::AlertInfoList* Arena::CreateMaybeMessage<::mtm::alert::model::AlertInfoList>(Arena*);
template<> ::mtm::alert::model::AlertInfo_RolesAcknowledgedCountEntry_DoNotUse* Arena::CreateMaybeMessage<::mtm::alert::model::AlertInfo_RolesAcknowledgedCountEntry_DoNotUse>(Arena*);
template<> ::mtm::alert::model::AlertLevelValue* Arena::CreateMaybeMessage<::mtm::alert::model::AlertLevelValue>(Arena*);
template<> ::mtm::alert::model::AutoRemoveDisabled* Arena::CreateMaybeMessage<::mtm::alert::model::AutoRemoveDisabled>(Arena*);
template<> ::mtm::alert::model::AutoRemoveEnabled* Arena::CreateMaybeMessage<::mtm::alert::model::AutoRemoveEnabled>(Arena*);
template<> ::mtm::alert::model::CommentAdded* Arena::CreateMaybeMessage<::mtm::alert::model::CommentAdded>(Arena*);
template<> ::mtm::alert::model::Deactivated* Arena::CreateMaybeMessage<::mtm::alert::model::Deactivated>(Arena*);
template<> ::mtm::alert::model::Removed* Arena::CreateMaybeMessage<::mtm::alert::model::Removed>(Arena*);
template<> ::mtm::alert::model::StateChanged* Arena::CreateMaybeMessage<::mtm::alert::model::StateChanged>(Arena*);
template<> ::mtm::alert::model::Unacknowledged* Arena::CreateMaybeMessage<::mtm::alert::model::Unacknowledged>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mtm {
namespace alert {
namespace model {

enum AlertLevel {
  ALERT_LEVEL_UNSPECIFIED = 0,
  ALERT_LEVEL_INFO = 1,
  ALERT_LEVEL_WARNING = 2,
  ALERT_LEVEL_ALARM = 3,
  AlertLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AlertLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AlertLevel_IsValid(int value);
const AlertLevel AlertLevel_MIN = ALERT_LEVEL_UNSPECIFIED;
const AlertLevel AlertLevel_MAX = ALERT_LEVEL_ALARM;
const int AlertLevel_ARRAYSIZE = AlertLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlertLevel_descriptor();
inline const ::std::string& AlertLevel_Name(AlertLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlertLevel_descriptor(), value);
}
inline bool AlertLevel_Parse(
    const ::std::string& name, AlertLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlertLevel>(
    AlertLevel_descriptor(), name, value);
}
// ===================================================================

class AlertInfo_RolesAcknowledgedCountEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<AlertInfo_RolesAcknowledgedCountEntry_DoNotUse, 
    ::google::protobuf::uint32, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<AlertInfo_RolesAcknowledgedCountEntry_DoNotUse, 
    ::google::protobuf::uint32, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > SuperType;
  AlertInfo_RolesAcknowledgedCountEntry_DoNotUse();
  AlertInfo_RolesAcknowledgedCountEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const AlertInfo_RolesAcknowledgedCountEntry_DoNotUse& other);
  static const AlertInfo_RolesAcknowledgedCountEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AlertInfo_RolesAcknowledgedCountEntry_DoNotUse*>(&_AlertInfo_RolesAcknowledgedCountEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class AlertInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AlertInfo) */ {
 public:
  AlertInfo();
  virtual ~AlertInfo();

  AlertInfo(const AlertInfo& from);

  inline AlertInfo& operator=(const AlertInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlertInfo(AlertInfo&& from) noexcept
    : AlertInfo() {
    *this = ::std::move(from);
  }

  inline AlertInfo& operator=(AlertInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlertInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlertInfo* internal_default_instance() {
    return reinterpret_cast<const AlertInfo*>(
               &_AlertInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AlertInfo* other);
  friend void swap(AlertInfo& a, AlertInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlertInfo* New() const final {
    return CreateMaybeMessage<AlertInfo>(NULL);
  }

  AlertInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlertInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlertInfo& from);
  void MergeFrom(const AlertInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlertInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .mtm.event.Argument arguments = 11;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 11;
  ::mtm::event::Argument* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument >*
      mutable_arguments();
  const ::mtm::event::Argument& arguments(int index) const;
  ::mtm::event::Argument* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument >&
      arguments() const;

  // repeated .mtm.alert.model.AlertInfoHistory history = 12;
  int history_size() const;
  void clear_history();
  static const int kHistoryFieldNumber = 12;
  ::mtm::alert::model::AlertInfoHistory* mutable_history(int index);
  ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory >*
      mutable_history();
  const ::mtm::alert::model::AlertInfoHistory& history(int index) const;
  ::mtm::alert::model::AlertInfoHistory* add_history();
  const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory >&
      history() const;

  // map<uint32, uint32> roles_acknowledged_count = 13;
  int roles_acknowledged_count_size() const;
  void clear_roles_acknowledged_count();
  static const int kRolesAcknowledgedCountFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      roles_acknowledged_count() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_roles_acknowledged_count();

  // repeated uint32 accounts_acknowledged = 14;
  int accounts_acknowledged_size() const;
  void clear_accounts_acknowledged();
  static const int kAccountsAcknowledgedFieldNumber = 14;
  ::google::protobuf::uint32 accounts_acknowledged(int index) const;
  void set_accounts_acknowledged(int index, ::google::protobuf::uint32 value);
  void add_accounts_acknowledged(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      accounts_acknowledged() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_accounts_acknowledged();

  // .mtm.Uuid alert_descriptor_type_id = 3;
  bool has_alert_descriptor_type_id() const;
  void clear_alert_descriptor_type_id();
  static const int kAlertDescriptorTypeIdFieldNumber = 3;
  private:
  const ::mtm::Uuid& _internal_alert_descriptor_type_id() const;
  public:
  const ::mtm::Uuid& alert_descriptor_type_id() const;
  ::mtm::Uuid* release_alert_descriptor_type_id();
  ::mtm::Uuid* mutable_alert_descriptor_type_id();
  void set_allocated_alert_descriptor_type_id(::mtm::Uuid* alert_descriptor_type_id);

  // .mtm.Uuid instance_id = 4;
  bool has_instance_id() const;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 4;
  private:
  const ::mtm::Uuid& _internal_instance_id() const;
  public:
  const ::mtm::Uuid& instance_id() const;
  ::mtm::Uuid* release_instance_id();
  ::mtm::Uuid* mutable_instance_id();
  void set_allocated_instance_id(::mtm::Uuid* instance_id);

  // .google.protobuf.Timestamp last_update = 9;
  bool has_last_update() const;
  void clear_last_update();
  static const int kLastUpdateFieldNumber = 9;
  private:
  const ::google::protobuf::Timestamp& _internal_last_update() const;
  public:
  const ::google::protobuf::Timestamp& last_update() const;
  ::google::protobuf::Timestamp* release_last_update();
  ::google::protobuf::Timestamp* mutable_last_update();
  void set_allocated_last_update(::google::protobuf::Timestamp* last_update);

  // uint32 source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // .mtm.alert.model.AlertLevel alert_level = 2;
  void clear_alert_level();
  static const int kAlertLevelFieldNumber = 2;
  ::mtm::alert::model::AlertLevel alert_level() const;
  void set_alert_level(::mtm::alert::model::AlertLevel value);

  // bool acknowledged = 5;
  void clear_acknowledged();
  static const int kAcknowledgedFieldNumber = 5;
  bool acknowledged() const;
  void set_acknowledged(bool value);

  // bool active = 6;
  void clear_active();
  static const int kActiveFieldNumber = 6;
  bool active() const;
  void set_active(bool value);

  // bool auto_remove = 7;
  void clear_auto_remove();
  static const int kAutoRemoveFieldNumber = 7;
  bool auto_remove() const;
  void set_auto_remove(bool value);

  // bool removed = 10;
  void clear_removed();
  static const int kRemovedFieldNumber = 10;
  bool removed() const;
  void set_removed(bool value);

  // uint32 version = 8;
  void clear_version();
  static const int kVersionFieldNumber = 8;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AlertInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument > arguments_;
  ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory > history_;
  ::google::protobuf::internal::MapField<
      AlertInfo_RolesAcknowledgedCountEntry_DoNotUse,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > roles_acknowledged_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > accounts_acknowledged_;
  mutable int _accounts_acknowledged_cached_byte_size_;
  ::mtm::Uuid* alert_descriptor_type_id_;
  ::mtm::Uuid* instance_id_;
  ::google::protobuf::Timestamp* last_update_;
  ::google::protobuf::uint32 source_;
  int alert_level_;
  bool acknowledged_;
  bool active_;
  bool auto_remove_;
  bool removed_;
  ::google::protobuf::uint32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlertLevelValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AlertLevelValue) */ {
 public:
  AlertLevelValue();
  virtual ~AlertLevelValue();

  AlertLevelValue(const AlertLevelValue& from);

  inline AlertLevelValue& operator=(const AlertLevelValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlertLevelValue(AlertLevelValue&& from) noexcept
    : AlertLevelValue() {
    *this = ::std::move(from);
  }

  inline AlertLevelValue& operator=(AlertLevelValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlertLevelValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlertLevelValue* internal_default_instance() {
    return reinterpret_cast<const AlertLevelValue*>(
               &_AlertLevelValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AlertLevelValue* other);
  friend void swap(AlertLevelValue& a, AlertLevelValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlertLevelValue* New() const final {
    return CreateMaybeMessage<AlertLevelValue>(NULL);
  }

  AlertLevelValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlertLevelValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlertLevelValue& from);
  void MergeFrom(const AlertLevelValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlertLevelValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtm.alert.model.AlertLevel value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::mtm::alert::model::AlertLevel value() const;
  void set_value(::mtm::alert::model::AlertLevel value);

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AlertLevelValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlertInfoList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AlertInfoList) */ {
 public:
  AlertInfoList();
  virtual ~AlertInfoList();

  AlertInfoList(const AlertInfoList& from);

  inline AlertInfoList& operator=(const AlertInfoList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlertInfoList(AlertInfoList&& from) noexcept
    : AlertInfoList() {
    *this = ::std::move(from);
  }

  inline AlertInfoList& operator=(AlertInfoList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlertInfoList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlertInfoList* internal_default_instance() {
    return reinterpret_cast<const AlertInfoList*>(
               &_AlertInfoList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AlertInfoList* other);
  friend void swap(AlertInfoList& a, AlertInfoList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlertInfoList* New() const final {
    return CreateMaybeMessage<AlertInfoList>(NULL);
  }

  AlertInfoList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlertInfoList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlertInfoList& from);
  void MergeFrom(const AlertInfoList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlertInfoList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtm.alert.model.AlertInfo alert_infos = 1;
  int alert_infos_size() const;
  void clear_alert_infos();
  static const int kAlertInfosFieldNumber = 1;
  ::mtm::alert::model::AlertInfo* mutable_alert_infos(int index);
  ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo >*
      mutable_alert_infos();
  const ::mtm::alert::model::AlertInfo& alert_infos(int index) const;
  ::mtm::alert::model::AlertInfo* add_alert_infos();
  const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo >&
      alert_infos() const;

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AlertInfoList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo > alert_infos_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlertInfoHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AlertInfoHistory) */ {
 public:
  AlertInfoHistory();
  virtual ~AlertInfoHistory();

  AlertInfoHistory(const AlertInfoHistory& from);

  inline AlertInfoHistory& operator=(const AlertInfoHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlertInfoHistory(AlertInfoHistory&& from) noexcept
    : AlertInfoHistory() {
    *this = ::std::move(from);
  }

  inline AlertInfoHistory& operator=(AlertInfoHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlertInfoHistory& default_instance();

  enum MsgCase {
    kActivated = 10,
    kDeactivated = 11,
    kStateChanged = 12,
    kAcknowledged = 13,
    kUnacknowledged = 14,
    kCommentAdded = 15,
    kAutoRemoveEnabled = 16,
    kAutoRemoveDisabled = 17,
    kRemoved = 18,
    MSG_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlertInfoHistory* internal_default_instance() {
    return reinterpret_cast<const AlertInfoHistory*>(
               &_AlertInfoHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AlertInfoHistory* other);
  friend void swap(AlertInfoHistory& a, AlertInfoHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlertInfoHistory* New() const final {
    return CreateMaybeMessage<AlertInfoHistory>(NULL);
  }

  AlertInfoHistory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlertInfoHistory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlertInfoHistory& from);
  void MergeFrom(const AlertInfoHistory& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlertInfoHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  public:
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // uint32 account_id = 2;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // .mtm.alert.model.Activated activated = 10;
  bool has_activated() const;
  void clear_activated();
  static const int kActivatedFieldNumber = 10;
  private:
  const ::mtm::alert::model::Activated& _internal_activated() const;
  public:
  const ::mtm::alert::model::Activated& activated() const;
  ::mtm::alert::model::Activated* release_activated();
  ::mtm::alert::model::Activated* mutable_activated();
  void set_allocated_activated(::mtm::alert::model::Activated* activated);

  // .mtm.alert.model.Deactivated deactivated = 11;
  bool has_deactivated() const;
  void clear_deactivated();
  static const int kDeactivatedFieldNumber = 11;
  private:
  const ::mtm::alert::model::Deactivated& _internal_deactivated() const;
  public:
  const ::mtm::alert::model::Deactivated& deactivated() const;
  ::mtm::alert::model::Deactivated* release_deactivated();
  ::mtm::alert::model::Deactivated* mutable_deactivated();
  void set_allocated_deactivated(::mtm::alert::model::Deactivated* deactivated);

  // .mtm.alert.model.StateChanged state_changed = 12;
  bool has_state_changed() const;
  void clear_state_changed();
  static const int kStateChangedFieldNumber = 12;
  private:
  const ::mtm::alert::model::StateChanged& _internal_state_changed() const;
  public:
  const ::mtm::alert::model::StateChanged& state_changed() const;
  ::mtm::alert::model::StateChanged* release_state_changed();
  ::mtm::alert::model::StateChanged* mutable_state_changed();
  void set_allocated_state_changed(::mtm::alert::model::StateChanged* state_changed);

  // .mtm.alert.model.Acknowledged acknowledged = 13;
  bool has_acknowledged() const;
  void clear_acknowledged();
  static const int kAcknowledgedFieldNumber = 13;
  private:
  const ::mtm::alert::model::Acknowledged& _internal_acknowledged() const;
  public:
  const ::mtm::alert::model::Acknowledged& acknowledged() const;
  ::mtm::alert::model::Acknowledged* release_acknowledged();
  ::mtm::alert::model::Acknowledged* mutable_acknowledged();
  void set_allocated_acknowledged(::mtm::alert::model::Acknowledged* acknowledged);

  // .mtm.alert.model.Unacknowledged unacknowledged = 14;
  bool has_unacknowledged() const;
  void clear_unacknowledged();
  static const int kUnacknowledgedFieldNumber = 14;
  private:
  const ::mtm::alert::model::Unacknowledged& _internal_unacknowledged() const;
  public:
  const ::mtm::alert::model::Unacknowledged& unacknowledged() const;
  ::mtm::alert::model::Unacknowledged* release_unacknowledged();
  ::mtm::alert::model::Unacknowledged* mutable_unacknowledged();
  void set_allocated_unacknowledged(::mtm::alert::model::Unacknowledged* unacknowledged);

  // .mtm.alert.model.CommentAdded comment_added = 15;
  bool has_comment_added() const;
  void clear_comment_added();
  static const int kCommentAddedFieldNumber = 15;
  private:
  const ::mtm::alert::model::CommentAdded& _internal_comment_added() const;
  public:
  const ::mtm::alert::model::CommentAdded& comment_added() const;
  ::mtm::alert::model::CommentAdded* release_comment_added();
  ::mtm::alert::model::CommentAdded* mutable_comment_added();
  void set_allocated_comment_added(::mtm::alert::model::CommentAdded* comment_added);

  // .mtm.alert.model.AutoRemoveEnabled auto_remove_enabled = 16;
  bool has_auto_remove_enabled() const;
  void clear_auto_remove_enabled();
  static const int kAutoRemoveEnabledFieldNumber = 16;
  private:
  const ::mtm::alert::model::AutoRemoveEnabled& _internal_auto_remove_enabled() const;
  public:
  const ::mtm::alert::model::AutoRemoveEnabled& auto_remove_enabled() const;
  ::mtm::alert::model::AutoRemoveEnabled* release_auto_remove_enabled();
  ::mtm::alert::model::AutoRemoveEnabled* mutable_auto_remove_enabled();
  void set_allocated_auto_remove_enabled(::mtm::alert::model::AutoRemoveEnabled* auto_remove_enabled);

  // .mtm.alert.model.AutoRemoveDisabled auto_remove_disabled = 17;
  bool has_auto_remove_disabled() const;
  void clear_auto_remove_disabled();
  static const int kAutoRemoveDisabledFieldNumber = 17;
  private:
  const ::mtm::alert::model::AutoRemoveDisabled& _internal_auto_remove_disabled() const;
  public:
  const ::mtm::alert::model::AutoRemoveDisabled& auto_remove_disabled() const;
  ::mtm::alert::model::AutoRemoveDisabled* release_auto_remove_disabled();
  ::mtm::alert::model::AutoRemoveDisabled* mutable_auto_remove_disabled();
  void set_allocated_auto_remove_disabled(::mtm::alert::model::AutoRemoveDisabled* auto_remove_disabled);

  // .mtm.alert.model.Removed removed = 18;
  bool has_removed() const;
  void clear_removed();
  static const int kRemovedFieldNumber = 18;
  private:
  const ::mtm::alert::model::Removed& _internal_removed() const;
  public:
  const ::mtm::alert::model::Removed& removed() const;
  ::mtm::alert::model::Removed* release_removed();
  ::mtm::alert::model::Removed* mutable_removed();
  void set_allocated_removed(::mtm::alert::model::Removed* removed);

  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:mtm.alert.model.AlertInfoHistory)
 private:
  void set_has_activated();
  void set_has_deactivated();
  void set_has_state_changed();
  void set_has_acknowledged();
  void set_has_unacknowledged();
  void set_has_comment_added();
  void set_has_auto_remove_enabled();
  void set_has_auto_remove_disabled();
  void set_has_removed();

  inline bool has_msg() const;
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* timestamp_;
  ::google::protobuf::uint32 account_id_;
  union MsgUnion {
    MsgUnion() {}
    ::mtm::alert::model::Activated* activated_;
    ::mtm::alert::model::Deactivated* deactivated_;
    ::mtm::alert::model::StateChanged* state_changed_;
    ::mtm::alert::model::Acknowledged* acknowledged_;
    ::mtm::alert::model::Unacknowledged* unacknowledged_;
    ::mtm::alert::model::CommentAdded* comment_added_;
    ::mtm::alert::model::AutoRemoveEnabled* auto_remove_enabled_;
    ::mtm::alert::model::AutoRemoveDisabled* auto_remove_disabled_;
    ::mtm::alert::model::Removed* removed_;
  } msg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Activated : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.Activated) */ {
 public:
  Activated();
  virtual ~Activated();

  Activated(const Activated& from);

  inline Activated& operator=(const Activated& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Activated(Activated&& from) noexcept
    : Activated() {
    *this = ::std::move(from);
  }

  inline Activated& operator=(Activated&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Activated& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Activated* internal_default_instance() {
    return reinterpret_cast<const Activated*>(
               &_Activated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Activated* other);
  friend void swap(Activated& a, Activated& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Activated* New() const final {
    return CreateMaybeMessage<Activated>(NULL);
  }

  Activated* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Activated>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Activated& from);
  void MergeFrom(const Activated& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Activated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.Activated)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Deactivated : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.Deactivated) */ {
 public:
  Deactivated();
  virtual ~Deactivated();

  Deactivated(const Deactivated& from);

  inline Deactivated& operator=(const Deactivated& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Deactivated(Deactivated&& from) noexcept
    : Deactivated() {
    *this = ::std::move(from);
  }

  inline Deactivated& operator=(Deactivated&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Deactivated& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Deactivated* internal_default_instance() {
    return reinterpret_cast<const Deactivated*>(
               &_Deactivated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Deactivated* other);
  friend void swap(Deactivated& a, Deactivated& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Deactivated* New() const final {
    return CreateMaybeMessage<Deactivated>(NULL);
  }

  Deactivated* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Deactivated>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Deactivated& from);
  void MergeFrom(const Deactivated& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Deactivated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.Deactivated)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StateChanged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.StateChanged) */ {
 public:
  StateChanged();
  virtual ~StateChanged();

  StateChanged(const StateChanged& from);

  inline StateChanged& operator=(const StateChanged& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StateChanged(StateChanged&& from) noexcept
    : StateChanged() {
    *this = ::std::move(from);
  }

  inline StateChanged& operator=(StateChanged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StateChanged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateChanged* internal_default_instance() {
    return reinterpret_cast<const StateChanged*>(
               &_StateChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(StateChanged* other);
  friend void swap(StateChanged& a, StateChanged& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateChanged* New() const final {
    return CreateMaybeMessage<StateChanged>(NULL);
  }

  StateChanged* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StateChanged>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StateChanged& from);
  void MergeFrom(const StateChanged& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StateChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtm.alert.model.AlertLevel new_level = 1;
  void clear_new_level();
  static const int kNewLevelFieldNumber = 1;
  ::mtm::alert::model::AlertLevel new_level() const;
  void set_new_level(::mtm::alert::model::AlertLevel value);

  // @@protoc_insertion_point(class_scope:mtm.alert.model.StateChanged)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int new_level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Acknowledged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.Acknowledged) */ {
 public:
  Acknowledged();
  virtual ~Acknowledged();

  Acknowledged(const Acknowledged& from);

  inline Acknowledged& operator=(const Acknowledged& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Acknowledged(Acknowledged&& from) noexcept
    : Acknowledged() {
    *this = ::std::move(from);
  }

  inline Acknowledged& operator=(Acknowledged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Acknowledged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Acknowledged* internal_default_instance() {
    return reinterpret_cast<const Acknowledged*>(
               &_Acknowledged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Acknowledged* other);
  friend void swap(Acknowledged& a, Acknowledged& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Acknowledged* New() const final {
    return CreateMaybeMessage<Acknowledged>(NULL);
  }

  Acknowledged* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Acknowledged>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Acknowledged& from);
  void MergeFrom(const Acknowledged& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Acknowledged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.Acknowledged)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Unacknowledged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.Unacknowledged) */ {
 public:
  Unacknowledged();
  virtual ~Unacknowledged();

  Unacknowledged(const Unacknowledged& from);

  inline Unacknowledged& operator=(const Unacknowledged& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Unacknowledged(Unacknowledged&& from) noexcept
    : Unacknowledged() {
    *this = ::std::move(from);
  }

  inline Unacknowledged& operator=(Unacknowledged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Unacknowledged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Unacknowledged* internal_default_instance() {
    return reinterpret_cast<const Unacknowledged*>(
               &_Unacknowledged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Unacknowledged* other);
  friend void swap(Unacknowledged& a, Unacknowledged& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Unacknowledged* New() const final {
    return CreateMaybeMessage<Unacknowledged>(NULL);
  }

  Unacknowledged* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Unacknowledged>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Unacknowledged& from);
  void MergeFrom(const Unacknowledged& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Unacknowledged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.Unacknowledged)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommentAdded : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.CommentAdded) */ {
 public:
  CommentAdded();
  virtual ~CommentAdded();

  CommentAdded(const CommentAdded& from);

  inline CommentAdded& operator=(const CommentAdded& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommentAdded(CommentAdded&& from) noexcept
    : CommentAdded() {
    *this = ::std::move(from);
  }

  inline CommentAdded& operator=(CommentAdded&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommentAdded& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommentAdded* internal_default_instance() {
    return reinterpret_cast<const CommentAdded*>(
               &_CommentAdded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CommentAdded* other);
  friend void swap(CommentAdded& a, CommentAdded& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommentAdded* New() const final {
    return CreateMaybeMessage<CommentAdded>(NULL);
  }

  CommentAdded* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommentAdded>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommentAdded& from);
  void MergeFrom(const CommentAdded& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommentAdded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string comment = 1;
  void clear_comment();
  static const int kCommentFieldNumber = 1;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:mtm.alert.model.CommentAdded)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutoRemoveEnabled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AutoRemoveEnabled) */ {
 public:
  AutoRemoveEnabled();
  virtual ~AutoRemoveEnabled();

  AutoRemoveEnabled(const AutoRemoveEnabled& from);

  inline AutoRemoveEnabled& operator=(const AutoRemoveEnabled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AutoRemoveEnabled(AutoRemoveEnabled&& from) noexcept
    : AutoRemoveEnabled() {
    *this = ::std::move(from);
  }

  inline AutoRemoveEnabled& operator=(AutoRemoveEnabled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoRemoveEnabled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutoRemoveEnabled* internal_default_instance() {
    return reinterpret_cast<const AutoRemoveEnabled*>(
               &_AutoRemoveEnabled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(AutoRemoveEnabled* other);
  friend void swap(AutoRemoveEnabled& a, AutoRemoveEnabled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AutoRemoveEnabled* New() const final {
    return CreateMaybeMessage<AutoRemoveEnabled>(NULL);
  }

  AutoRemoveEnabled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AutoRemoveEnabled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AutoRemoveEnabled& from);
  void MergeFrom(const AutoRemoveEnabled& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutoRemoveEnabled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AutoRemoveEnabled)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutoRemoveDisabled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.AutoRemoveDisabled) */ {
 public:
  AutoRemoveDisabled();
  virtual ~AutoRemoveDisabled();

  AutoRemoveDisabled(const AutoRemoveDisabled& from);

  inline AutoRemoveDisabled& operator=(const AutoRemoveDisabled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AutoRemoveDisabled(AutoRemoveDisabled&& from) noexcept
    : AutoRemoveDisabled() {
    *this = ::std::move(from);
  }

  inline AutoRemoveDisabled& operator=(AutoRemoveDisabled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoRemoveDisabled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutoRemoveDisabled* internal_default_instance() {
    return reinterpret_cast<const AutoRemoveDisabled*>(
               &_AutoRemoveDisabled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(AutoRemoveDisabled* other);
  friend void swap(AutoRemoveDisabled& a, AutoRemoveDisabled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AutoRemoveDisabled* New() const final {
    return CreateMaybeMessage<AutoRemoveDisabled>(NULL);
  }

  AutoRemoveDisabled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AutoRemoveDisabled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AutoRemoveDisabled& from);
  void MergeFrom(const AutoRemoveDisabled& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutoRemoveDisabled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.AutoRemoveDisabled)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Removed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.alert.model.Removed) */ {
 public:
  Removed();
  virtual ~Removed();

  Removed(const Removed& from);

  inline Removed& operator=(const Removed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Removed(Removed&& from) noexcept
    : Removed() {
    *this = ::std::move(from);
  }

  inline Removed& operator=(Removed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Removed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Removed* internal_default_instance() {
    return reinterpret_cast<const Removed*>(
               &_Removed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(Removed* other);
  friend void swap(Removed& a, Removed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Removed* New() const final {
    return CreateMaybeMessage<Removed>(NULL);
  }

  Removed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Removed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Removed& from);
  void MergeFrom(const Removed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Removed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtm.alert.model.Removed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2falert_2fmodel_2falert_5finfo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AlertInfo

// uint32 source = 1;
inline void AlertInfo::clear_source() {
  source_ = 0u;
}
inline ::google::protobuf::uint32 AlertInfo::source() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.source)
  return source_;
}
inline void AlertInfo::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.source)
}

// .mtm.alert.model.AlertLevel alert_level = 2;
inline void AlertInfo::clear_alert_level() {
  alert_level_ = 0;
}
inline ::mtm::alert::model::AlertLevel AlertInfo::alert_level() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.alert_level)
  return static_cast< ::mtm::alert::model::AlertLevel >(alert_level_);
}
inline void AlertInfo::set_alert_level(::mtm::alert::model::AlertLevel value) {
  
  alert_level_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.alert_level)
}

// .mtm.Uuid alert_descriptor_type_id = 3;
inline bool AlertInfo::has_alert_descriptor_type_id() const {
  return this != internal_default_instance() && alert_descriptor_type_id_ != NULL;
}
inline const ::mtm::Uuid& AlertInfo::_internal_alert_descriptor_type_id() const {
  return *alert_descriptor_type_id_;
}
inline const ::mtm::Uuid& AlertInfo::alert_descriptor_type_id() const {
  const ::mtm::Uuid* p = alert_descriptor_type_id_;
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtm::Uuid*>(
      &::mtm::_Uuid_default_instance_);
}
inline ::mtm::Uuid* AlertInfo::release_alert_descriptor_type_id() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
  
  ::mtm::Uuid* temp = alert_descriptor_type_id_;
  alert_descriptor_type_id_ = NULL;
  return temp;
}
inline ::mtm::Uuid* AlertInfo::mutable_alert_descriptor_type_id() {
  
  if (alert_descriptor_type_id_ == NULL) {
    auto* p = CreateMaybeMessage<::mtm::Uuid>(GetArenaNoVirtual());
    alert_descriptor_type_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
  return alert_descriptor_type_id_;
}
inline void AlertInfo::set_allocated_alert_descriptor_type_id(::mtm::Uuid* alert_descriptor_type_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(alert_descriptor_type_id_);
  }
  if (alert_descriptor_type_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alert_descriptor_type_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alert_descriptor_type_id, submessage_arena);
    }
    
  } else {
    
  }
  alert_descriptor_type_id_ = alert_descriptor_type_id;
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfo.alert_descriptor_type_id)
}

// .mtm.Uuid instance_id = 4;
inline bool AlertInfo::has_instance_id() const {
  return this != internal_default_instance() && instance_id_ != NULL;
}
inline const ::mtm::Uuid& AlertInfo::_internal_instance_id() const {
  return *instance_id_;
}
inline const ::mtm::Uuid& AlertInfo::instance_id() const {
  const ::mtm::Uuid* p = instance_id_;
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.instance_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtm::Uuid*>(
      &::mtm::_Uuid_default_instance_);
}
inline ::mtm::Uuid* AlertInfo::release_instance_id() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfo.instance_id)
  
  ::mtm::Uuid* temp = instance_id_;
  instance_id_ = NULL;
  return temp;
}
inline ::mtm::Uuid* AlertInfo::mutable_instance_id() {
  
  if (instance_id_ == NULL) {
    auto* p = CreateMaybeMessage<::mtm::Uuid>(GetArenaNoVirtual());
    instance_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.instance_id)
  return instance_id_;
}
inline void AlertInfo::set_allocated_instance_id(::mtm::Uuid* instance_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instance_id_);
  }
  if (instance_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instance_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instance_id, submessage_arena);
    }
    
  } else {
    
  }
  instance_id_ = instance_id;
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfo.instance_id)
}

// bool acknowledged = 5;
inline void AlertInfo::clear_acknowledged() {
  acknowledged_ = false;
}
inline bool AlertInfo::acknowledged() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.acknowledged)
  return acknowledged_;
}
inline void AlertInfo::set_acknowledged(bool value) {
  
  acknowledged_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.acknowledged)
}

// bool active = 6;
inline void AlertInfo::clear_active() {
  active_ = false;
}
inline bool AlertInfo::active() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.active)
  return active_;
}
inline void AlertInfo::set_active(bool value) {
  
  active_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.active)
}

// bool auto_remove = 7;
inline void AlertInfo::clear_auto_remove() {
  auto_remove_ = false;
}
inline bool AlertInfo::auto_remove() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.auto_remove)
  return auto_remove_;
}
inline void AlertInfo::set_auto_remove(bool value) {
  
  auto_remove_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.auto_remove)
}

// uint32 version = 8;
inline void AlertInfo::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 AlertInfo::version() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.version)
  return version_;
}
inline void AlertInfo::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.version)
}

// .google.protobuf.Timestamp last_update = 9;
inline bool AlertInfo::has_last_update() const {
  return this != internal_default_instance() && last_update_ != NULL;
}
inline const ::google::protobuf::Timestamp& AlertInfo::_internal_last_update() const {
  return *last_update_;
}
inline const ::google::protobuf::Timestamp& AlertInfo::last_update() const {
  const ::google::protobuf::Timestamp* p = last_update_;
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.last_update)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* AlertInfo::release_last_update() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfo.last_update)
  
  ::google::protobuf::Timestamp* temp = last_update_;
  last_update_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* AlertInfo::mutable_last_update() {
  
  if (last_update_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    last_update_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.last_update)
  return last_update_;
}
inline void AlertInfo::set_allocated_last_update(::google::protobuf::Timestamp* last_update) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(last_update_);
  }
  if (last_update) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(last_update)->GetArena();
    if (message_arena != submessage_arena) {
      last_update = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, last_update, submessage_arena);
    }
    
  } else {
    
  }
  last_update_ = last_update;
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfo.last_update)
}

// bool removed = 10;
inline void AlertInfo::clear_removed() {
  removed_ = false;
}
inline bool AlertInfo::removed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.removed)
  return removed_;
}
inline void AlertInfo::set_removed(bool value) {
  
  removed_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.removed)
}

// repeated .mtm.event.Argument arguments = 11;
inline int AlertInfo::arguments_size() const {
  return arguments_.size();
}
inline ::mtm::event::Argument* AlertInfo::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument >*
AlertInfo::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfo.arguments)
  return &arguments_;
}
inline const ::mtm::event::Argument& AlertInfo::arguments(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.arguments)
  return arguments_.Get(index);
}
inline ::mtm::event::Argument* AlertInfo::add_arguments() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfo.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::event::Argument >&
AlertInfo::arguments() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfo.arguments)
  return arguments_;
}

// repeated .mtm.alert.model.AlertInfoHistory history = 12;
inline int AlertInfo::history_size() const {
  return history_.size();
}
inline void AlertInfo::clear_history() {
  history_.Clear();
}
inline ::mtm::alert::model::AlertInfoHistory* AlertInfo::mutable_history(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfo.history)
  return history_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory >*
AlertInfo::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfo.history)
  return &history_;
}
inline const ::mtm::alert::model::AlertInfoHistory& AlertInfo::history(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.history)
  return history_.Get(index);
}
inline ::mtm::alert::model::AlertInfoHistory* AlertInfo::add_history() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfo.history)
  return history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfoHistory >&
AlertInfo::history() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfo.history)
  return history_;
}

// map<uint32, uint32> roles_acknowledged_count = 13;
inline int AlertInfo::roles_acknowledged_count_size() const {
  return roles_acknowledged_count_.size();
}
inline void AlertInfo::clear_roles_acknowledged_count() {
  roles_acknowledged_count_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AlertInfo::roles_acknowledged_count() const {
  // @@protoc_insertion_point(field_map:mtm.alert.model.AlertInfo.roles_acknowledged_count)
  return roles_acknowledged_count_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AlertInfo::mutable_roles_acknowledged_count() {
  // @@protoc_insertion_point(field_mutable_map:mtm.alert.model.AlertInfo.roles_acknowledged_count)
  return roles_acknowledged_count_.MutableMap();
}

// repeated uint32 accounts_acknowledged = 14;
inline int AlertInfo::accounts_acknowledged_size() const {
  return accounts_acknowledged_.size();
}
inline void AlertInfo::clear_accounts_acknowledged() {
  accounts_acknowledged_.Clear();
}
inline ::google::protobuf::uint32 AlertInfo::accounts_acknowledged(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfo.accounts_acknowledged)
  return accounts_acknowledged_.Get(index);
}
inline void AlertInfo::set_accounts_acknowledged(int index, ::google::protobuf::uint32 value) {
  accounts_acknowledged_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfo.accounts_acknowledged)
}
inline void AlertInfo::add_accounts_acknowledged(::google::protobuf::uint32 value) {
  accounts_acknowledged_.Add(value);
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfo.accounts_acknowledged)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AlertInfo::accounts_acknowledged() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfo.accounts_acknowledged)
  return accounts_acknowledged_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AlertInfo::mutable_accounts_acknowledged() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfo.accounts_acknowledged)
  return &accounts_acknowledged_;
}

// -------------------------------------------------------------------

// AlertLevelValue

// .mtm.alert.model.AlertLevel value = 1;
inline void AlertLevelValue::clear_value() {
  value_ = 0;
}
inline ::mtm::alert::model::AlertLevel AlertLevelValue::value() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertLevelValue.value)
  return static_cast< ::mtm::alert::model::AlertLevel >(value_);
}
inline void AlertLevelValue::set_value(::mtm::alert::model::AlertLevel value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertLevelValue.value)
}

// -------------------------------------------------------------------

// AlertInfoList

// repeated .mtm.alert.model.AlertInfo alert_infos = 1;
inline int AlertInfoList::alert_infos_size() const {
  return alert_infos_.size();
}
inline void AlertInfoList::clear_alert_infos() {
  alert_infos_.Clear();
}
inline ::mtm::alert::model::AlertInfo* AlertInfoList::mutable_alert_infos(int index) {
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo >*
AlertInfoList::mutable_alert_infos() {
  // @@protoc_insertion_point(field_mutable_list:mtm.alert.model.AlertInfoList.alert_infos)
  return &alert_infos_;
}
inline const ::mtm::alert::model::AlertInfo& AlertInfoList::alert_infos(int index) const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_.Get(index);
}
inline ::mtm::alert::model::AlertInfo* AlertInfoList::add_alert_infos() {
  // @@protoc_insertion_point(field_add:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mtm::alert::model::AlertInfo >&
AlertInfoList::alert_infos() const {
  // @@protoc_insertion_point(field_list:mtm.alert.model.AlertInfoList.alert_infos)
  return alert_infos_;
}

// -------------------------------------------------------------------

// AlertInfoHistory

// .google.protobuf.Timestamp timestamp = 1;
inline bool AlertInfoHistory::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline const ::google::protobuf::Timestamp& AlertInfoHistory::_internal_timestamp() const {
  return *timestamp_;
}
inline const ::google::protobuf::Timestamp& AlertInfoHistory::timestamp() const {
  const ::google::protobuf::Timestamp* p = timestamp_;
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* AlertInfoHistory::release_timestamp() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* AlertInfoHistory::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.timestamp)
  return timestamp_;
}
inline void AlertInfoHistory::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.AlertInfoHistory.timestamp)
}

// uint32 account_id = 2;
inline void AlertInfoHistory::clear_account_id() {
  account_id_ = 0u;
}
inline ::google::protobuf::uint32 AlertInfoHistory::account_id() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.account_id)
  return account_id_;
}
inline void AlertInfoHistory::set_account_id(::google::protobuf::uint32 value) {
  
  account_id_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.AlertInfoHistory.account_id)
}

// .mtm.alert.model.Activated activated = 10;
inline bool AlertInfoHistory::has_activated() const {
  return msg_case() == kActivated;
}
inline void AlertInfoHistory::set_has_activated() {
  _oneof_case_[0] = kActivated;
}
inline void AlertInfoHistory::clear_activated() {
  if (has_activated()) {
    delete msg_.activated_;
    clear_has_msg();
  }
}
inline const ::mtm::alert::model::Activated& AlertInfoHistory::_internal_activated() const {
  return *msg_.activated_;
}
inline ::mtm::alert::model::Activated* AlertInfoHistory::release_activated() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.activated)
  if (has_activated()) {
    clear_has_msg();
      ::mtm::alert::model::Activated* temp = msg_.activated_;
    msg_.activated_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::mtm::alert::model::Activated& AlertInfoHistory::activated() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.activated)
  return has_activated()
      ? *msg_.activated_
      : *reinterpret_cast< ::mtm::alert::model::Activated*>(&::mtm::alert::model::_Activated_default_instance_);
}
inline ::mtm::alert::model::Activated* AlertInfoHistory::mutable_activated() {
  if (!has_activated()) {
    clear_msg();
    set_has_activated();
    msg_.activated_ = CreateMaybeMessage< ::mtm::alert::model::Activated >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.activated)
  return msg_.activated_;
}

// .mtm.alert.model.Deactivated deactivated = 11;
inline bool AlertInfoHistory::has_deactivated() const {
  return msg_case() == kDeactivated;
}
inline void AlertInfoHistory::set_has_deactivated() {
  _oneof_case_[0] = kDeactivated;
}
inline void AlertInfoHistory::clear_deactivated() {
  if (has_deactivated()) {
    delete msg_.deactivated_;
    clear_has_msg();
  }
}
inline const ::mtm::alert::model::Deactivated& AlertInfoHistory::_internal_deactivated() const {
  return *msg_.deactivated_;
}
inline ::mtm::alert::model::Deactivated* AlertInfoHistory::release_deactivated() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.deactivated)
  if (has_deactivated()) {
    clear_has_msg();
      ::mtm::alert::model::Deactivated* temp = msg_.deactivated_;
    msg_.deactivated_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::mtm::alert::model::Deactivated& AlertInfoHistory::deactivated() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.deactivated)
  return has_deactivated()
      ? *msg_.deactivated_
      : *reinterpret_cast< ::mtm::alert::model::Deactivated*>(&::mtm::alert::model::_Deactivated_default_instance_);
}
inline ::mtm::alert::model::Deactivated* AlertInfoHistory::mutable_deactivated() {
  if (!has_deactivated()) {
    clear_msg();
    set_has_deactivated();
    msg_.deactivated_ = CreateMaybeMessage< ::mtm::alert::model::Deactivated >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.deactivated)
  return msg_.deactivated_;
}

// .mtm.alert.model.StateChanged state_changed = 12;
inline bool AlertInfoHistory::has_state_changed() const {
  return msg_case() == kStateChanged;
}
inline void AlertInfoHistory::set_has_state_changed() {
  _oneof_case_[0] = kStateChanged;
}
inline void AlertInfoHistory::clear_state_changed() {
  if (has_state_changed()) {
    delete msg_.state_changed_;
    clear_has_msg();
  }
}
inline const ::mtm::alert::model::StateChanged& AlertInfoHistory::_internal_state_changed() const {
  return *msg_.state_changed_;
}
inline ::mtm::alert::model::StateChanged* AlertInfoHistory::release_state_changed() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.state_changed)
  if (has_state_changed()) {
    clear_has_msg();
      ::mtm::alert::model::StateChanged* temp = msg_.state_changed_;
    msg_.state_changed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::mtm::alert::model::StateChanged& AlertInfoHistory::state_changed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.state_changed)
  return has_state_changed()
      ? *msg_.state_changed_
      : *reinterpret_cast< ::mtm::alert::model::StateChanged*>(&::mtm::alert::model::_StateChanged_default_instance_);
}
inline ::mtm::alert::model::StateChanged* AlertInfoHistory::mutable_state_changed() {
  if (!has_state_changed()) {
    clear_msg();
    set_has_state_changed();
    msg_.state_changed_ = CreateMaybeMessage< ::mtm::alert::model::StateChanged >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.state_changed)
  return msg_.state_changed_;
}

// .mtm.alert.model.Acknowledged acknowledged = 13;
inline bool AlertInfoHistory::has_acknowledged() const {
  return msg_case() == kAcknowledged;
}
inline void AlertInfoHistory::set_has_acknowledged() {
  _oneof_case_[0] = kAcknowledged;
}
inline void AlertInfoHistory::clear_acknowledged() {
  if (has_acknowledged()) {
    delete msg_.acknowledged_;
    clear_has_msg();
  }
}
inline const ::mtm::alert::model::Acknowledged& AlertInfoHistory::_internal_acknowledged() const {
  return *msg_.acknowledged_;
}
inline ::mtm::alert::model::Acknowledged* AlertInfoHistory::release_acknowledged() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.acknowledged)
  if (has_acknowledged()) {
    clear_has_msg();
      ::mtm::alert::model::Acknowledged* temp = msg_.acknowledged_;
    msg_.acknowledged_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::mtm::alert::model::Acknowledged& AlertInfoHistory::acknowledged() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.acknowledged)
  return has_acknowledged()
      ? *msg_.acknowledged_
      : *reinterpret_cast< ::mtm::alert::model::Acknowledged*>(&::mtm::alert::model::_Acknowledged_default_instance_);
}
inline ::mtm::alert::model::Acknowledged* AlertInfoHistory::mutable_acknowledged() {
  if (!has_acknowledged()) {
    clear_msg();
    set_has_acknowledged();
    msg_.acknowledged_ = CreateMaybeMessage< ::mtm::alert::model::Acknowledged >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.acknowledged)
  return msg_.acknowledged_;
}

// .mtm.alert.model.Unacknowledged unacknowledged = 14;
inline bool AlertInfoHistory::has_unacknowledged() const {
  return msg_case() == kUnacknowledged;
}
inline void AlertInfoHistory::set_has_unacknowledged() {
  _oneof_case_[0] = kUnacknowledged;
}
inline void AlertInfoHistory::clear_unacknowledged() {
  if (has_unacknowledged()) {
    delete msg_.unacknowledged_;
    clear_has_msg();
  }
}
inline const ::mtm::alert::model::Unacknowledged& AlertInfoHistory::_internal_unacknowledged() const {
  return *msg_.unacknowledged_;
}
inline ::mtm::alert::model::Unacknowledged* AlertInfoHistory::release_unacknowledged() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.unacknowledged)
  if (has_unacknowledged()) {
    clear_has_msg();
      ::mtm::alert::model::Unacknowledged* temp = msg_.unacknowledged_;
    msg_.unacknowledged_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::mtm::alert::model::Unacknowledged& AlertInfoHistory::unacknowledged() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.unacknowledged)
  return has_unacknowledged()
      ? *msg_.unacknowledged_
      : *reinterpret_cast< ::mtm::alert::model::Unacknowledged*>(&::mtm::alert::model::_Unacknowledged_default_instance_);
}
inline ::mtm::alert::model::Unacknowledged* AlertInfoHistory::mutable_unacknowledged() {
  if (!has_unacknowledged()) {
    clear_msg();
    set_has_unacknowledged();
    msg_.unacknowledged_ = CreateMaybeMessage< ::mtm::alert::model::Unacknowledged >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.unacknowledged)
  return msg_.unacknowledged_;
}

// .mtm.alert.model.CommentAdded comment_added = 15;
inline bool AlertInfoHistory::has_comment_added() const {
  return msg_case() == kCommentAdded;
}
inline void AlertInfoHistory::set_has_comment_added() {
  _oneof_case_[0] = kCommentAdded;
}
inline void AlertInfoHistory::clear_comment_added() {
  if (has_comment_added()) {
    delete msg_.comment_added_;
    clear_has_msg();
  }
}
inline const ::mtm::alert::model::CommentAdded& AlertInfoHistory::_internal_comment_added() const {
  return *msg_.comment_added_;
}
inline ::mtm::alert::model::CommentAdded* AlertInfoHistory::release_comment_added() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.comment_added)
  if (has_comment_added()) {
    clear_has_msg();
      ::mtm::alert::model::CommentAdded* temp = msg_.comment_added_;
    msg_.comment_added_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::mtm::alert::model::CommentAdded& AlertInfoHistory::comment_added() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.comment_added)
  return has_comment_added()
      ? *msg_.comment_added_
      : *reinterpret_cast< ::mtm::alert::model::CommentAdded*>(&::mtm::alert::model::_CommentAdded_default_instance_);
}
inline ::mtm::alert::model::CommentAdded* AlertInfoHistory::mutable_comment_added() {
  if (!has_comment_added()) {
    clear_msg();
    set_has_comment_added();
    msg_.comment_added_ = CreateMaybeMessage< ::mtm::alert::model::CommentAdded >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.comment_added)
  return msg_.comment_added_;
}

// .mtm.alert.model.AutoRemoveEnabled auto_remove_enabled = 16;
inline bool AlertInfoHistory::has_auto_remove_enabled() const {
  return msg_case() == kAutoRemoveEnabled;
}
inline void AlertInfoHistory::set_has_auto_remove_enabled() {
  _oneof_case_[0] = kAutoRemoveEnabled;
}
inline void AlertInfoHistory::clear_auto_remove_enabled() {
  if (has_auto_remove_enabled()) {
    delete msg_.auto_remove_enabled_;
    clear_has_msg();
  }
}
inline const ::mtm::alert::model::AutoRemoveEnabled& AlertInfoHistory::_internal_auto_remove_enabled() const {
  return *msg_.auto_remove_enabled_;
}
inline ::mtm::alert::model::AutoRemoveEnabled* AlertInfoHistory::release_auto_remove_enabled() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
  if (has_auto_remove_enabled()) {
    clear_has_msg();
      ::mtm::alert::model::AutoRemoveEnabled* temp = msg_.auto_remove_enabled_;
    msg_.auto_remove_enabled_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::mtm::alert::model::AutoRemoveEnabled& AlertInfoHistory::auto_remove_enabled() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
  return has_auto_remove_enabled()
      ? *msg_.auto_remove_enabled_
      : *reinterpret_cast< ::mtm::alert::model::AutoRemoveEnabled*>(&::mtm::alert::model::_AutoRemoveEnabled_default_instance_);
}
inline ::mtm::alert::model::AutoRemoveEnabled* AlertInfoHistory::mutable_auto_remove_enabled() {
  if (!has_auto_remove_enabled()) {
    clear_msg();
    set_has_auto_remove_enabled();
    msg_.auto_remove_enabled_ = CreateMaybeMessage< ::mtm::alert::model::AutoRemoveEnabled >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.auto_remove_enabled)
  return msg_.auto_remove_enabled_;
}

// .mtm.alert.model.AutoRemoveDisabled auto_remove_disabled = 17;
inline bool AlertInfoHistory::has_auto_remove_disabled() const {
  return msg_case() == kAutoRemoveDisabled;
}
inline void AlertInfoHistory::set_has_auto_remove_disabled() {
  _oneof_case_[0] = kAutoRemoveDisabled;
}
inline void AlertInfoHistory::clear_auto_remove_disabled() {
  if (has_auto_remove_disabled()) {
    delete msg_.auto_remove_disabled_;
    clear_has_msg();
  }
}
inline const ::mtm::alert::model::AutoRemoveDisabled& AlertInfoHistory::_internal_auto_remove_disabled() const {
  return *msg_.auto_remove_disabled_;
}
inline ::mtm::alert::model::AutoRemoveDisabled* AlertInfoHistory::release_auto_remove_disabled() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
  if (has_auto_remove_disabled()) {
    clear_has_msg();
      ::mtm::alert::model::AutoRemoveDisabled* temp = msg_.auto_remove_disabled_;
    msg_.auto_remove_disabled_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::mtm::alert::model::AutoRemoveDisabled& AlertInfoHistory::auto_remove_disabled() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
  return has_auto_remove_disabled()
      ? *msg_.auto_remove_disabled_
      : *reinterpret_cast< ::mtm::alert::model::AutoRemoveDisabled*>(&::mtm::alert::model::_AutoRemoveDisabled_default_instance_);
}
inline ::mtm::alert::model::AutoRemoveDisabled* AlertInfoHistory::mutable_auto_remove_disabled() {
  if (!has_auto_remove_disabled()) {
    clear_msg();
    set_has_auto_remove_disabled();
    msg_.auto_remove_disabled_ = CreateMaybeMessage< ::mtm::alert::model::AutoRemoveDisabled >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.auto_remove_disabled)
  return msg_.auto_remove_disabled_;
}

// .mtm.alert.model.Removed removed = 18;
inline bool AlertInfoHistory::has_removed() const {
  return msg_case() == kRemoved;
}
inline void AlertInfoHistory::set_has_removed() {
  _oneof_case_[0] = kRemoved;
}
inline void AlertInfoHistory::clear_removed() {
  if (has_removed()) {
    delete msg_.removed_;
    clear_has_msg();
  }
}
inline const ::mtm::alert::model::Removed& AlertInfoHistory::_internal_removed() const {
  return *msg_.removed_;
}
inline ::mtm::alert::model::Removed* AlertInfoHistory::release_removed() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.AlertInfoHistory.removed)
  if (has_removed()) {
    clear_has_msg();
      ::mtm::alert::model::Removed* temp = msg_.removed_;
    msg_.removed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::mtm::alert::model::Removed& AlertInfoHistory::removed() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.AlertInfoHistory.removed)
  return has_removed()
      ? *msg_.removed_
      : *reinterpret_cast< ::mtm::alert::model::Removed*>(&::mtm::alert::model::_Removed_default_instance_);
}
inline ::mtm::alert::model::Removed* AlertInfoHistory::mutable_removed() {
  if (!has_removed()) {
    clear_msg();
    set_has_removed();
    msg_.removed_ = CreateMaybeMessage< ::mtm::alert::model::Removed >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.AlertInfoHistory.removed)
  return msg_.removed_;
}

inline bool AlertInfoHistory::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void AlertInfoHistory::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
inline AlertInfoHistory::MsgCase AlertInfoHistory::msg_case() const {
  return AlertInfoHistory::MsgCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Activated

// -------------------------------------------------------------------

// Deactivated

// -------------------------------------------------------------------

// StateChanged

// .mtm.alert.model.AlertLevel new_level = 1;
inline void StateChanged::clear_new_level() {
  new_level_ = 0;
}
inline ::mtm::alert::model::AlertLevel StateChanged::new_level() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.StateChanged.new_level)
  return static_cast< ::mtm::alert::model::AlertLevel >(new_level_);
}
inline void StateChanged::set_new_level(::mtm::alert::model::AlertLevel value) {
  
  new_level_ = value;
  // @@protoc_insertion_point(field_set:mtm.alert.model.StateChanged.new_level)
}

// -------------------------------------------------------------------

// Acknowledged

// -------------------------------------------------------------------

// Unacknowledged

// -------------------------------------------------------------------

// CommentAdded

// string comment = 1;
inline void CommentAdded::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommentAdded::comment() const {
  // @@protoc_insertion_point(field_get:mtm.alert.model.CommentAdded.comment)
  return comment_.GetNoArena();
}
inline void CommentAdded::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.alert.model.CommentAdded.comment)
}
#if LANG_CXX11
inline void CommentAdded::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtm.alert.model.CommentAdded.comment)
}
#endif
inline void CommentAdded::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.alert.model.CommentAdded.comment)
}
inline void CommentAdded::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.alert.model.CommentAdded.comment)
}
inline ::std::string* CommentAdded::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:mtm.alert.model.CommentAdded.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommentAdded::release_comment() {
  // @@protoc_insertion_point(field_release:mtm.alert.model.CommentAdded.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommentAdded::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:mtm.alert.model.CommentAdded.comment)
}

// -------------------------------------------------------------------

// AutoRemoveEnabled

// -------------------------------------------------------------------

// AutoRemoveDisabled

// -------------------------------------------------------------------

// Removed

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace alert
}  // namespace mtm

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mtm::alert::model::AlertLevel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mtm::alert::model::AlertLevel>() {
  return ::mtm::alert::model::AlertLevel_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_mtm_2falert_2fmodel_2falert_5finfo_2eproto
