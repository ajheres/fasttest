// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/common_types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mtm/common_types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mtm {

namespace {

const ::google::protobuf::Descriptor* Uuid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Uuid_reflection_ = NULL;
const ::google::protobuf::Descriptor* SocketAddress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SocketAddress_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SocketAddress_AddressFamily_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TypeUrl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeUrl_reflection_ = NULL;
const ::google::protobuf::Descriptor* Location_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Location_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mtm_2fcommon_5ftypes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mtm_2fcommon_5ftypes_2eproto() {
  protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mtm/common_types.proto");
  GOOGLE_CHECK(file != NULL);
  Uuid_descriptor_ = file->message_type(0);
  static const int Uuid_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uuid, value_),
  };
  Uuid_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Uuid_descriptor_,
      Uuid::default_instance_,
      Uuid_offsets_,
      -1,
      -1,
      -1,
      sizeof(Uuid),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uuid, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uuid, _is_default_instance_));
  SocketAddress_descriptor_ = file->message_type(1);
  static const int SocketAddress_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocketAddress, data_),
  };
  SocketAddress_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SocketAddress_descriptor_,
      SocketAddress::default_instance_,
      SocketAddress_offsets_,
      -1,
      -1,
      -1,
      sizeof(SocketAddress),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocketAddress, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocketAddress, _is_default_instance_));
  SocketAddress_AddressFamily_descriptor_ = SocketAddress_descriptor_->enum_type(0);
  TypeUrl_descriptor_ = file->message_type(2);
  static const int TypeUrl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeUrl, value_),
  };
  TypeUrl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeUrl_descriptor_,
      TypeUrl::default_instance_,
      TypeUrl_offsets_,
      -1,
      -1,
      -1,
      sizeof(TypeUrl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeUrl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeUrl, _is_default_instance_));
  Location_descriptor_ = file->message_type(3);
  static const int Location_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, altitude_),
  };
  Location_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Location_descriptor_,
      Location::default_instance_,
      Location_offsets_,
      -1,
      -1,
      -1,
      sizeof(Location),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mtm_2fcommon_5ftypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Uuid_descriptor_, &Uuid::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SocketAddress_descriptor_, &SocketAddress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeUrl_descriptor_, &TypeUrl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Location_descriptor_, &Location::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mtm_2fcommon_5ftypes_2eproto() {
  delete Uuid::default_instance_;
  delete Uuid_reflection_;
  delete SocketAddress::default_instance_;
  delete SocketAddress_reflection_;
  delete TypeUrl::default_instance_;
  delete TypeUrl_reflection_;
  delete Location::default_instance_;
  delete Location_reflection_;
}

void protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026mtm/common_types.proto\022\003mtm\032\036google/pr"
    "otobuf/wrappers.proto\"\025\n\004Uuid\022\r\n\005value\030\001"
    " \001(\014\"\364\006\n\rSocketAddress\022\014\n\004data\030\002 \001(\014\"\324\006\n"
    "\rAddressFamily\022\035\n\031ADDRESSFAMILY_UNSPECIF"
    "IED\020\000\022\"\n\025ADDRESSFAMILY_UNKNOWN\020\377\377\377\377\377\377\377\377\377"
    "\001\022\026\n\022ADDRESSFAMILY_UNIX\020\001\022\037\n\033ADDRESSFAMI"
    "LY_INTER_NETWORK\020\002\022\031\n\025ADDRESSFAMILY_IMPL"
    "INK\020\003\022\025\n\021ADDRESSFAMILY_PUP\020\004\022\027\n\023ADDRESSF"
    "AMILY_CHAOS\020\005\022\025\n\021ADDRESSFAMILY_IPX\020\006\022\024\n\020"
    "ADDRESSFAMILY_NS\020\006\022\025\n\021ADDRESSFAMILY_ISO\020"
    "\007\022\025\n\021ADDRESSFAMILY_OSI\020\007\022\026\n\022ADDRESSFAMIL"
    "Y_ECMA\020\010\022\031\n\025ADDRESSFAMILY_DATAKIT\020\t\022\027\n\023A"
    "DDRESSFAMILY_CCITT\020\n\022\025\n\021ADDRESSFAMILY_SN"
    "A\020\013\022\030\n\024ADDRESSFAMILY_DECNET\020\014\022\032\n\026ADDRESS"
    "FAMILY_DATALINK\020\r\022\025\n\021ADDRESSFAMILY_LAT\020\016"
    "\022\036\n\032ADDRESSFAMILY_HYPERCHANNEL\020\017\022\033\n\027ADDR"
    "ESSFAMILY_APPLETALK\020\020\022\031\n\025ADDRESSFAMILY_N"
    "ETBIOS\020\021\022\033\n\027ADDRESSFAMILY_VOICEVIEW\020\022\022\031\n"
    "\025ADDRESSFAMILY_FIREFOX\020\023\022\030\n\024ADDRESSFAMIL"
    "Y_BANYAN\020\025\022\025\n\021ADDRESSFAMILY_ATM\020\026\022!\n\035ADD"
    "RESSFAMILY_INTER_NETWORKV6\020\027\022\031\n\025ADDRESSF"
    "AMILY_CLUSTER\020\030\022\033\n\027ADDRESSFAMILY_IEEE128"
    "44\020\031\022\026\n\022ADDRESSFAMILY_IRDA\020\032\022\"\n\036ADDRESSF"
    "AMILY_NETWORKDESIGNERS\020\034\022\025\n\021ADDRESSFAMIL"
    "Y_MAX\020\035\032\002\020\001\"\030\n\007TypeUrl\022\r\n\005value\030\001 \001(\t\"\233\001"
    "\n\010Location\022.\n\010latitude\030\001 \001(\0132\034.google.pr"
    "otobuf.DoubleValue\022/\n\tlongitude\030\002 \001(\0132\034."
    "google.protobuf.DoubleValue\022.\n\010altitude\030"
    "\003 \001(\0132\034.google.protobuf.DoubleValueb\006pro"
    "to3", 1163);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mtm/common_types.proto", &protobuf_RegisterTypes);
  Uuid::default_instance_ = new Uuid();
  SocketAddress::default_instance_ = new SocketAddress();
  TypeUrl::default_instance_ = new TypeUrl();
  Location::default_instance_ = new Location();
  Uuid::default_instance_->InitAsDefaultInstance();
  SocketAddress::default_instance_->InitAsDefaultInstance();
  TypeUrl::default_instance_->InitAsDefaultInstance();
  Location::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mtm_2fcommon_5ftypes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mtm_2fcommon_5ftypes_2eproto {
  StaticDescriptorInitializer_mtm_2fcommon_5ftypes_2eproto() {
    protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto();
  }
} static_descriptor_initializer_mtm_2fcommon_5ftypes_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uuid::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uuid::Uuid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.Uuid)
}

void Uuid::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Uuid::Uuid(const Uuid& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.Uuid)
}

void Uuid::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Uuid::~Uuid() {
  // @@protoc_insertion_point(destructor:mtm.Uuid)
  SharedDtor();
}

void Uuid::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Uuid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uuid::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Uuid_descriptor_;
}

const Uuid& Uuid::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto();
  return *default_instance_;
}

Uuid* Uuid::default_instance_ = NULL;

Uuid* Uuid::New(::google::protobuf::Arena* arena) const {
  Uuid* n = new Uuid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Uuid::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.Uuid)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Uuid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.Uuid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.Uuid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.Uuid)
  return false;
#undef DO_
}

void Uuid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.Uuid)
  // optional bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.Uuid)
}

::google::protobuf::uint8* Uuid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.Uuid)
  // optional bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.Uuid)
  return target;
}

int Uuid::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.Uuid)
  int total_size = 0;

  // optional bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uuid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.Uuid)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Uuid* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Uuid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.Uuid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.Uuid)
    MergeFrom(*source);
  }
}

void Uuid::MergeFrom(const Uuid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.Uuid)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Uuid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.Uuid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uuid::CopyFrom(const Uuid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.Uuid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uuid::IsInitialized() const {

  return true;
}

void Uuid::Swap(Uuid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uuid::InternalSwap(Uuid* other) {
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Uuid::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Uuid_descriptor_;
  metadata.reflection = Uuid_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Uuid

// optional bytes value = 1;
void Uuid::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Uuid::value() const {
  // @@protoc_insertion_point(field_get:mtm.Uuid.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Uuid::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.Uuid.value)
}
 void Uuid::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.Uuid.value)
}
 void Uuid::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.Uuid.value)
}
 ::std::string* Uuid::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:mtm.Uuid.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Uuid::release_value() {
  // @@protoc_insertion_point(field_release:mtm.Uuid.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Uuid::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:mtm.Uuid.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* SocketAddress_AddressFamily_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SocketAddress_AddressFamily_descriptor_;
}
bool SocketAddress_AddressFamily_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 28:
    case 29:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_UNSPECIFIED;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_UNKNOWN;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_UNIX;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_INTER_NETWORK;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_IMPLINK;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_PUP;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_CHAOS;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_IPX;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_NS;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_ISO;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_OSI;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_ECMA;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_DATAKIT;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_CCITT;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_SNA;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_DECNET;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_DATALINK;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_LAT;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_HYPERCHANNEL;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_APPLETALK;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_NETBIOS;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_VOICEVIEW;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_FIREFOX;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_BANYAN;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_ATM;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_INTER_NETWORKV6;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_CLUSTER;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_IEEE12844;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_IRDA;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_NETWORKDESIGNERS;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_MAX;
const SocketAddress_AddressFamily SocketAddress::AddressFamily_MIN;
const SocketAddress_AddressFamily SocketAddress::AddressFamily_MAX;
const int SocketAddress::AddressFamily_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SocketAddress::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SocketAddress::SocketAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.SocketAddress)
}

void SocketAddress::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SocketAddress::SocketAddress(const SocketAddress& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.SocketAddress)
}

void SocketAddress::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SocketAddress::~SocketAddress() {
  // @@protoc_insertion_point(destructor:mtm.SocketAddress)
  SharedDtor();
}

void SocketAddress::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SocketAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SocketAddress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SocketAddress_descriptor_;
}

const SocketAddress& SocketAddress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto();
  return *default_instance_;
}

SocketAddress* SocketAddress::default_instance_ = NULL;

SocketAddress* SocketAddress::New(::google::protobuf::Arena* arena) const {
  SocketAddress* n = new SocketAddress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SocketAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.SocketAddress)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SocketAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.SocketAddress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.SocketAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.SocketAddress)
  return false;
#undef DO_
}

void SocketAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.SocketAddress)
  // optional bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.SocketAddress)
}

::google::protobuf::uint8* SocketAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.SocketAddress)
  // optional bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.SocketAddress)
  return target;
}

int SocketAddress::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.SocketAddress)
  int total_size = 0;

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SocketAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.SocketAddress)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SocketAddress* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SocketAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.SocketAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.SocketAddress)
    MergeFrom(*source);
  }
}

void SocketAddress::MergeFrom(const SocketAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.SocketAddress)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void SocketAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.SocketAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SocketAddress::CopyFrom(const SocketAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.SocketAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SocketAddress::IsInitialized() const {

  return true;
}

void SocketAddress::Swap(SocketAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SocketAddress::InternalSwap(SocketAddress* other) {
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SocketAddress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SocketAddress_descriptor_;
  metadata.reflection = SocketAddress_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SocketAddress

// optional bytes data = 2;
void SocketAddress::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SocketAddress::data() const {
  // @@protoc_insertion_point(field_get:mtm.SocketAddress.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SocketAddress::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.SocketAddress.data)
}
 void SocketAddress::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.SocketAddress.data)
}
 void SocketAddress::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.SocketAddress.data)
}
 ::std::string* SocketAddress::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mtm.SocketAddress.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SocketAddress::release_data() {
  // @@protoc_insertion_point(field_release:mtm.SocketAddress.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SocketAddress::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mtm.SocketAddress.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeUrl::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeUrl::TypeUrl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.TypeUrl)
}

void TypeUrl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TypeUrl::TypeUrl(const TypeUrl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.TypeUrl)
}

void TypeUrl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TypeUrl::~TypeUrl() {
  // @@protoc_insertion_point(destructor:mtm.TypeUrl)
  SharedDtor();
}

void TypeUrl::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TypeUrl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeUrl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeUrl_descriptor_;
}

const TypeUrl& TypeUrl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto();
  return *default_instance_;
}

TypeUrl* TypeUrl::default_instance_ = NULL;

TypeUrl* TypeUrl::New(::google::protobuf::Arena* arena) const {
  TypeUrl* n = new TypeUrl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeUrl::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.TypeUrl)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TypeUrl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.TypeUrl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mtm.TypeUrl.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.TypeUrl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.TypeUrl)
  return false;
#undef DO_
}

void TypeUrl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.TypeUrl)
  // optional string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.TypeUrl.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.TypeUrl)
}

::google::protobuf::uint8* TypeUrl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.TypeUrl)
  // optional string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.TypeUrl.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.TypeUrl)
  return target;
}

int TypeUrl::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.TypeUrl)
  int total_size = 0;

  // optional string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeUrl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.TypeUrl)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TypeUrl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeUrl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.TypeUrl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.TypeUrl)
    MergeFrom(*source);
  }
}

void TypeUrl::MergeFrom(const TypeUrl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.TypeUrl)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void TypeUrl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.TypeUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeUrl::CopyFrom(const TypeUrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.TypeUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeUrl::IsInitialized() const {

  return true;
}

void TypeUrl::Swap(TypeUrl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeUrl::InternalSwap(TypeUrl* other) {
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeUrl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeUrl_descriptor_;
  metadata.reflection = TypeUrl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TypeUrl

// optional string value = 1;
void TypeUrl::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TypeUrl::value() const {
  // @@protoc_insertion_point(field_get:mtm.TypeUrl.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TypeUrl::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.TypeUrl.value)
}
 void TypeUrl::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.TypeUrl.value)
}
 void TypeUrl::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.TypeUrl.value)
}
 ::std::string* TypeUrl::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:mtm.TypeUrl.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TypeUrl::release_value() {
  // @@protoc_insertion_point(field_release:mtm.TypeUrl.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TypeUrl::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:mtm.TypeUrl.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location::kLatitudeFieldNumber;
const int Location::kLongitudeFieldNumber;
const int Location::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location::Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.Location)
}

void Location::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  latitude_ = const_cast< ::google::protobuf::DoubleValue*>(&::google::protobuf::DoubleValue::default_instance());
  longitude_ = const_cast< ::google::protobuf::DoubleValue*>(&::google::protobuf::DoubleValue::default_instance());
  altitude_ = const_cast< ::google::protobuf::DoubleValue*>(&::google::protobuf::DoubleValue::default_instance());
}

Location::Location(const Location& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mtm.Location)
}

void Location::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  latitude_ = NULL;
  longitude_ = NULL;
  altitude_ = NULL;
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:mtm.Location)
  SharedDtor();
}

void Location::SharedDtor() {
  if (this != default_instance_) {
    delete latitude_;
    delete longitude_;
    delete altitude_;
  }
}

void Location::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Location::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Location_descriptor_;
}

const Location& Location::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mtm_2fcommon_5ftypes_2eproto();
  return *default_instance_;
}

Location* Location::default_instance_ = NULL;

Location* Location::New(::google::protobuf::Arena* arena) const {
  Location* n = new Location;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.Location)
  if (GetArenaNoVirtual() == NULL && latitude_ != NULL) delete latitude_;
  latitude_ = NULL;
  if (GetArenaNoVirtual() == NULL && longitude_ != NULL) delete longitude_;
  longitude_ = NULL;
  if (GetArenaNoVirtual() == NULL && altitude_ != NULL) delete altitude_;
  altitude_ = NULL;
}

bool Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.Location)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.DoubleValue latitude = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_latitude()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_longitude;
        break;
      }

      // optional .google.protobuf.DoubleValue longitude = 2;
      case 2: {
        if (tag == 18) {
         parse_longitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_longitude()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_altitude;
        break;
      }

      // optional .google.protobuf.DoubleValue altitude = 3;
      case 3: {
        if (tag == 26) {
         parse_altitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_altitude()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.Location)
  return false;
#undef DO_
}

void Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.Location)
  // optional .google.protobuf.DoubleValue latitude = 1;
  if (this->has_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->latitude_, output);
  }

  // optional .google.protobuf.DoubleValue longitude = 2;
  if (this->has_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->longitude_, output);
  }

  // optional .google.protobuf.DoubleValue altitude = 3;
  if (this->has_altitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->altitude_, output);
  }

  // @@protoc_insertion_point(serialize_end:mtm.Location)
}

::google::protobuf::uint8* Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mtm.Location)
  // optional .google.protobuf.DoubleValue latitude = 1;
  if (this->has_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->latitude_, false, target);
  }

  // optional .google.protobuf.DoubleValue longitude = 2;
  if (this->has_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->longitude_, false, target);
  }

  // optional .google.protobuf.DoubleValue altitude = 3;
  if (this->has_altitude()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->altitude_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mtm.Location)
  return target;
}

int Location::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.Location)
  int total_size = 0;

  // optional .google.protobuf.DoubleValue latitude = 1;
  if (this->has_latitude()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->latitude_);
  }

  // optional .google.protobuf.DoubleValue longitude = 2;
  if (this->has_longitude()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->longitude_);
  }

  // optional .google.protobuf.DoubleValue altitude = 3;
  if (this->has_altitude()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->altitude_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.Location)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Location* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.Location)
    MergeFrom(*source);
  }
}

void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.Location)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_latitude()) {
    mutable_latitude()->::google::protobuf::DoubleValue::MergeFrom(from.latitude());
  }
  if (from.has_longitude()) {
    mutable_longitude()->::google::protobuf::DoubleValue::MergeFrom(from.longitude());
  }
  if (from.has_altitude()) {
    mutable_altitude()->::google::protobuf::DoubleValue::MergeFrom(from.altitude());
  }
}

void Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {

  return true;
}

void Location::Swap(Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location::InternalSwap(Location* other) {
  std::swap(latitude_, other->latitude_);
  std::swap(longitude_, other->longitude_);
  std::swap(altitude_, other->altitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Location_descriptor_;
  metadata.reflection = Location_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Location

// optional .google.protobuf.DoubleValue latitude = 1;
bool Location::has_latitude() const {
  return !_is_default_instance_ && latitude_ != NULL;
}
void Location::clear_latitude() {
  if (GetArenaNoVirtual() == NULL && latitude_ != NULL) delete latitude_;
  latitude_ = NULL;
}
const ::google::protobuf::DoubleValue& Location::latitude() const {
  // @@protoc_insertion_point(field_get:mtm.Location.latitude)
  return latitude_ != NULL ? *latitude_ : *default_instance_->latitude_;
}
::google::protobuf::DoubleValue* Location::mutable_latitude() {
  
  if (latitude_ == NULL) {
    latitude_ = new ::google::protobuf::DoubleValue;
  }
  // @@protoc_insertion_point(field_mutable:mtm.Location.latitude)
  return latitude_;
}
::google::protobuf::DoubleValue* Location::release_latitude() {
  // @@protoc_insertion_point(field_release:mtm.Location.latitude)
  
  ::google::protobuf::DoubleValue* temp = latitude_;
  latitude_ = NULL;
  return temp;
}
void Location::set_allocated_latitude(::google::protobuf::DoubleValue* latitude) {
  delete latitude_;
  if (latitude != NULL && latitude->GetArena() != NULL) {
    ::google::protobuf::DoubleValue* new_latitude = new ::google::protobuf::DoubleValue;
    new_latitude->CopyFrom(*latitude);
    latitude = new_latitude;
  }
  latitude_ = latitude;
  if (latitude) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.Location.latitude)
}

// optional .google.protobuf.DoubleValue longitude = 2;
bool Location::has_longitude() const {
  return !_is_default_instance_ && longitude_ != NULL;
}
void Location::clear_longitude() {
  if (GetArenaNoVirtual() == NULL && longitude_ != NULL) delete longitude_;
  longitude_ = NULL;
}
const ::google::protobuf::DoubleValue& Location::longitude() const {
  // @@protoc_insertion_point(field_get:mtm.Location.longitude)
  return longitude_ != NULL ? *longitude_ : *default_instance_->longitude_;
}
::google::protobuf::DoubleValue* Location::mutable_longitude() {
  
  if (longitude_ == NULL) {
    longitude_ = new ::google::protobuf::DoubleValue;
  }
  // @@protoc_insertion_point(field_mutable:mtm.Location.longitude)
  return longitude_;
}
::google::protobuf::DoubleValue* Location::release_longitude() {
  // @@protoc_insertion_point(field_release:mtm.Location.longitude)
  
  ::google::protobuf::DoubleValue* temp = longitude_;
  longitude_ = NULL;
  return temp;
}
void Location::set_allocated_longitude(::google::protobuf::DoubleValue* longitude) {
  delete longitude_;
  if (longitude != NULL && longitude->GetArena() != NULL) {
    ::google::protobuf::DoubleValue* new_longitude = new ::google::protobuf::DoubleValue;
    new_longitude->CopyFrom(*longitude);
    longitude = new_longitude;
  }
  longitude_ = longitude;
  if (longitude) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.Location.longitude)
}

// optional .google.protobuf.DoubleValue altitude = 3;
bool Location::has_altitude() const {
  return !_is_default_instance_ && altitude_ != NULL;
}
void Location::clear_altitude() {
  if (GetArenaNoVirtual() == NULL && altitude_ != NULL) delete altitude_;
  altitude_ = NULL;
}
const ::google::protobuf::DoubleValue& Location::altitude() const {
  // @@protoc_insertion_point(field_get:mtm.Location.altitude)
  return altitude_ != NULL ? *altitude_ : *default_instance_->altitude_;
}
::google::protobuf::DoubleValue* Location::mutable_altitude() {
  
  if (altitude_ == NULL) {
    altitude_ = new ::google::protobuf::DoubleValue;
  }
  // @@protoc_insertion_point(field_mutable:mtm.Location.altitude)
  return altitude_;
}
::google::protobuf::DoubleValue* Location::release_altitude() {
  // @@protoc_insertion_point(field_release:mtm.Location.altitude)
  
  ::google::protobuf::DoubleValue* temp = altitude_;
  altitude_ = NULL;
  return temp;
}
void Location::set_allocated_altitude(::google::protobuf::DoubleValue* altitude) {
  delete altitude_;
  if (altitude != NULL && altitude->GetArena() != NULL) {
    ::google::protobuf::DoubleValue* new_altitude = new ::google::protobuf::DoubleValue;
    new_altitude->CopyFrom(*altitude);
    altitude = new_altitude;
  }
  altitude_ = altitude;
  if (altitude) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtm.Location.altitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace mtm

// @@protoc_insertion_point(global_scope)
