// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/common_types.proto

#include "mtm/common_types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace mtm {
class UuidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uuid>
      _instance;
} _Uuid_default_instance_;
class SocketAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SocketAddress>
      _instance;
} _SocketAddress_default_instance_;
class TypeUrlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TypeUrl>
      _instance;
} _TypeUrl_default_instance_;
class LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Location>
      _instance;
} _Location_default_instance_;
}  // namespace mtm
namespace protobuf_mtm_2fcommon_5ftypes_2eproto {
static void InitDefaultsUuid() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::_Uuid_default_instance_;
    new (ptr) ::mtm::Uuid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::Uuid::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Uuid =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUuid}, {}};

static void InitDefaultsSocketAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::_SocketAddress_default_instance_;
    new (ptr) ::mtm::SocketAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::SocketAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SocketAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSocketAddress}, {}};

static void InitDefaultsTypeUrl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::_TypeUrl_default_instance_;
    new (ptr) ::mtm::TypeUrl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::TypeUrl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TypeUrl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTypeUrl}, {}};

static void InitDefaultsLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mtm::_Location_default_instance_;
    new (ptr) ::mtm::Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mtm::Location::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Location =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocation}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_DoubleValue.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Uuid.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SocketAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TypeUrl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Location.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::Uuid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::Uuid, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::SocketAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::SocketAddress, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::TypeUrl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::TypeUrl, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::Location, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::Location, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mtm::Location, altitude_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mtm::Uuid)},
  { 6, -1, sizeof(::mtm::SocketAddress)},
  { 12, -1, sizeof(::mtm::TypeUrl)},
  { 18, -1, sizeof(::mtm::Location)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::_Uuid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::_SocketAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::_TypeUrl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mtm::_Location_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mtm/common_types.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026mtm/common_types.proto\022\003mtm\032\036google/pr"
      "otobuf/wrappers.proto\"\025\n\004Uuid\022\r\n\005value\030\001"
      " \001(\014\"\364\006\n\rSocketAddress\022\014\n\004data\030\002 \001(\014\"\324\006\n"
      "\rAddressFamily\022\035\n\031ADDRESSFAMILY_UNSPECIF"
      "IED\020\000\022\"\n\025ADDRESSFAMILY_UNKNOWN\020\377\377\377\377\377\377\377\377\377"
      "\001\022\026\n\022ADDRESSFAMILY_UNIX\020\001\022\037\n\033ADDRESSFAMI"
      "LY_INTER_NETWORK\020\002\022\031\n\025ADDRESSFAMILY_IMPL"
      "INK\020\003\022\025\n\021ADDRESSFAMILY_PUP\020\004\022\027\n\023ADDRESSF"
      "AMILY_CHAOS\020\005\022\025\n\021ADDRESSFAMILY_IPX\020\006\022\024\n\020"
      "ADDRESSFAMILY_NS\020\006\022\025\n\021ADDRESSFAMILY_ISO\020"
      "\007\022\025\n\021ADDRESSFAMILY_OSI\020\007\022\026\n\022ADDRESSFAMIL"
      "Y_ECMA\020\010\022\031\n\025ADDRESSFAMILY_DATAKIT\020\t\022\027\n\023A"
      "DDRESSFAMILY_CCITT\020\n\022\025\n\021ADDRESSFAMILY_SN"
      "A\020\013\022\030\n\024ADDRESSFAMILY_DECNET\020\014\022\032\n\026ADDRESS"
      "FAMILY_DATALINK\020\r\022\025\n\021ADDRESSFAMILY_LAT\020\016"
      "\022\036\n\032ADDRESSFAMILY_HYPERCHANNEL\020\017\022\033\n\027ADDR"
      "ESSFAMILY_APPLETALK\020\020\022\031\n\025ADDRESSFAMILY_N"
      "ETBIOS\020\021\022\033\n\027ADDRESSFAMILY_VOICEVIEW\020\022\022\031\n"
      "\025ADDRESSFAMILY_FIREFOX\020\023\022\030\n\024ADDRESSFAMIL"
      "Y_BANYAN\020\025\022\025\n\021ADDRESSFAMILY_ATM\020\026\022!\n\035ADD"
      "RESSFAMILY_INTER_NETWORKV6\020\027\022\031\n\025ADDRESSF"
      "AMILY_CLUSTER\020\030\022\033\n\027ADDRESSFAMILY_IEEE128"
      "44\020\031\022\026\n\022ADDRESSFAMILY_IRDA\020\032\022\"\n\036ADDRESSF"
      "AMILY_NETWORKDESIGNERS\020\034\022\025\n\021ADDRESSFAMIL"
      "Y_MAX\020\035\032\002\020\001\"\030\n\007TypeUrl\022\r\n\005value\030\001 \001(\t\"\233\001"
      "\n\010Location\022.\n\010latitude\030\001 \001(\0132\034.google.pr"
      "otobuf.DoubleValue\022/\n\tlongitude\030\002 \001(\0132\034."
      "google.protobuf.DoubleValue\022.\n\010altitude\030"
      "\003 \001(\0132\034.google.protobuf.DoubleValueb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1163);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mtm/common_types.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mtm_2fcommon_5ftypes_2eproto
namespace mtm {
const ::google::protobuf::EnumDescriptor* SocketAddress_AddressFamily_descriptor() {
  protobuf_mtm_2fcommon_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mtm_2fcommon_5ftypes_2eproto::file_level_enum_descriptors[0];
}
bool SocketAddress_AddressFamily_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 28:
    case 29:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_UNSPECIFIED;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_UNKNOWN;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_UNIX;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_INTER_NETWORK;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_IMPLINK;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_PUP;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_CHAOS;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_IPX;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_NS;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_ISO;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_OSI;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_ECMA;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_DATAKIT;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_CCITT;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_SNA;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_DECNET;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_DATALINK;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_LAT;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_HYPERCHANNEL;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_APPLETALK;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_NETBIOS;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_VOICEVIEW;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_FIREFOX;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_BANYAN;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_ATM;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_INTER_NETWORKV6;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_CLUSTER;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_IEEE12844;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_IRDA;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_NETWORKDESIGNERS;
const SocketAddress_AddressFamily SocketAddress::ADDRESSFAMILY_MAX;
const SocketAddress_AddressFamily SocketAddress::AddressFamily_MIN;
const SocketAddress_AddressFamily SocketAddress::AddressFamily_MAX;
const int SocketAddress::AddressFamily_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Uuid::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uuid::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uuid::Uuid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.Uuid)
}
Uuid::Uuid(const Uuid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:mtm.Uuid)
}

void Uuid::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Uuid::~Uuid() {
  // @@protoc_insertion_point(destructor:mtm.Uuid)
  SharedDtor();
}

void Uuid::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Uuid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Uuid::descriptor() {
  ::protobuf_mtm_2fcommon_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fcommon_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uuid& Uuid::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Uuid.base);
  return *internal_default_instance();
}


void Uuid::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.Uuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Uuid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.Uuid)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.Uuid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.Uuid)
  return false;
#undef DO_
}

void Uuid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.Uuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.Uuid)
}

::google::protobuf::uint8* Uuid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.Uuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.Uuid)
  return target;
}

size_t Uuid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.Uuid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uuid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.Uuid)
  GOOGLE_DCHECK_NE(&from, this);
  const Uuid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uuid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.Uuid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.Uuid)
    MergeFrom(*source);
  }
}

void Uuid::MergeFrom(const Uuid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.Uuid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Uuid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.Uuid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uuid::CopyFrom(const Uuid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.Uuid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uuid::IsInitialized() const {
  return true;
}

void Uuid::Swap(Uuid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uuid::InternalSwap(Uuid* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Uuid::GetMetadata() const {
  protobuf_mtm_2fcommon_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fcommon_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SocketAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SocketAddress::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SocketAddress::SocketAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_SocketAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.SocketAddress)
}
SocketAddress::SocketAddress(const SocketAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:mtm.SocketAddress)
}

void SocketAddress::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SocketAddress::~SocketAddress() {
  // @@protoc_insertion_point(destructor:mtm.SocketAddress)
  SharedDtor();
}

void SocketAddress::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SocketAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SocketAddress::descriptor() {
  ::protobuf_mtm_2fcommon_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fcommon_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SocketAddress& SocketAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_SocketAddress.base);
  return *internal_default_instance();
}


void SocketAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.SocketAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SocketAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.SocketAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.SocketAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.SocketAddress)
  return false;
#undef DO_
}

void SocketAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.SocketAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.SocketAddress)
}

::google::protobuf::uint8* SocketAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.SocketAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.SocketAddress)
  return target;
}

size_t SocketAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.SocketAddress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SocketAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.SocketAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const SocketAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SocketAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.SocketAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.SocketAddress)
    MergeFrom(*source);
  }
}

void SocketAddress::MergeFrom(const SocketAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.SocketAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void SocketAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.SocketAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SocketAddress::CopyFrom(const SocketAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.SocketAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SocketAddress::IsInitialized() const {
  return true;
}

void SocketAddress::Swap(SocketAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SocketAddress::InternalSwap(SocketAddress* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SocketAddress::GetMetadata() const {
  protobuf_mtm_2fcommon_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fcommon_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TypeUrl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeUrl::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeUrl::TypeUrl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_TypeUrl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.TypeUrl)
}
TypeUrl::TypeUrl(const TypeUrl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:mtm.TypeUrl)
}

void TypeUrl::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TypeUrl::~TypeUrl() {
  // @@protoc_insertion_point(destructor:mtm.TypeUrl)
  SharedDtor();
}

void TypeUrl::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TypeUrl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TypeUrl::descriptor() {
  ::protobuf_mtm_2fcommon_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fcommon_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TypeUrl& TypeUrl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_TypeUrl.base);
  return *internal_default_instance();
}


void TypeUrl::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.TypeUrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TypeUrl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.TypeUrl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mtm.TypeUrl.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.TypeUrl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.TypeUrl)
  return false;
#undef DO_
}

void TypeUrl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.TypeUrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.TypeUrl.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.TypeUrl)
}

::google::protobuf::uint8* TypeUrl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.TypeUrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mtm.TypeUrl.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.TypeUrl)
  return target;
}

size_t TypeUrl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.TypeUrl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TypeUrl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.TypeUrl)
  GOOGLE_DCHECK_NE(&from, this);
  const TypeUrl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeUrl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.TypeUrl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.TypeUrl)
    MergeFrom(*source);
  }
}

void TypeUrl::MergeFrom(const TypeUrl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.TypeUrl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void TypeUrl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.TypeUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeUrl::CopyFrom(const TypeUrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.TypeUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeUrl::IsInitialized() const {
  return true;
}

void TypeUrl::Swap(TypeUrl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeUrl::InternalSwap(TypeUrl* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TypeUrl::GetMetadata() const {
  protobuf_mtm_2fcommon_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fcommon_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Location::InitAsDefaultInstance() {
  ::mtm::_Location_default_instance_._instance.get_mutable()->latitude_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::mtm::_Location_default_instance_._instance.get_mutable()->longitude_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::mtm::_Location_default_instance_._instance.get_mutable()->altitude_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
}
void Location::clear_latitude() {
  if (GetArenaNoVirtual() == NULL && latitude_ != NULL) {
    delete latitude_;
  }
  latitude_ = NULL;
}
void Location::clear_longitude() {
  if (GetArenaNoVirtual() == NULL && longitude_ != NULL) {
    delete longitude_;
  }
  longitude_ = NULL;
}
void Location::clear_altitude() {
  if (GetArenaNoVirtual() == NULL && altitude_ != NULL) {
    delete altitude_;
  }
  altitude_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location::kLatitudeFieldNumber;
const int Location::kLongitudeFieldNumber;
const int Location::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location::Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Location.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtm.Location)
}
Location::Location(const Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_latitude()) {
    latitude_ = new ::google::protobuf::DoubleValue(*from.latitude_);
  } else {
    latitude_ = NULL;
  }
  if (from.has_longitude()) {
    longitude_ = new ::google::protobuf::DoubleValue(*from.longitude_);
  } else {
    longitude_ = NULL;
  }
  if (from.has_altitude()) {
    altitude_ = new ::google::protobuf::DoubleValue(*from.altitude_);
  } else {
    altitude_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtm.Location)
}

void Location::SharedCtor() {
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(altitude_));
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:mtm.Location)
  SharedDtor();
}

void Location::SharedDtor() {
  if (this != internal_default_instance()) delete latitude_;
  if (this != internal_default_instance()) delete longitude_;
  if (this != internal_default_instance()) delete altitude_;
}

void Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Location::descriptor() {
  ::protobuf_mtm_2fcommon_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fcommon_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Location& Location::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mtm_2fcommon_5ftypes_2eproto::scc_info_Location.base);
  return *internal_default_instance();
}


void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:mtm.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && latitude_ != NULL) {
    delete latitude_;
  }
  latitude_ = NULL;
  if (GetArenaNoVirtual() == NULL && longitude_ != NULL) {
    delete longitude_;
  }
  longitude_ = NULL;
  if (GetArenaNoVirtual() == NULL && altitude_ != NULL) {
    delete altitude_;
  }
  altitude_ = NULL;
  _internal_metadata_.Clear();
}

bool Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mtm.Location)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.DoubleValue latitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_latitude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_longitude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue altitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_altitude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mtm.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mtm.Location)
  return false;
#undef DO_
}

void Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mtm.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue latitude = 1;
  if (this->has_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_latitude(), output);
  }

  // .google.protobuf.DoubleValue longitude = 2;
  if (this->has_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_longitude(), output);
  }

  // .google.protobuf.DoubleValue altitude = 3;
  if (this->has_altitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_altitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mtm.Location)
}

::google::protobuf::uint8* Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mtm.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue latitude = 1;
  if (this->has_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_latitude(), deterministic, target);
  }

  // .google.protobuf.DoubleValue longitude = 2;
  if (this->has_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_longitude(), deterministic, target);
  }

  // .google.protobuf.DoubleValue altitude = 3;
  if (this->has_altitude()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_altitude(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mtm.Location)
  return target;
}

size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mtm.Location)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.DoubleValue latitude = 1;
  if (this->has_latitude()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *latitude_);
  }

  // .google.protobuf.DoubleValue longitude = 2;
  if (this->has_longitude()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *longitude_);
  }

  // .google.protobuf.DoubleValue altitude = 3;
  if (this->has_altitude()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *altitude_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mtm.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mtm.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mtm.Location)
    MergeFrom(*source);
  }
}

void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mtm.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_latitude()) {
    mutable_latitude()->::google::protobuf::DoubleValue::MergeFrom(from.latitude());
  }
  if (from.has_longitude()) {
    mutable_longitude()->::google::protobuf::DoubleValue::MergeFrom(from.longitude());
  }
  if (from.has_altitude()) {
    mutable_altitude()->::google::protobuf::DoubleValue::MergeFrom(from.altitude());
  }
}

void Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mtm.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mtm.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {
  return true;
}

void Location::Swap(Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location::InternalSwap(Location* other) {
  using std::swap;
  swap(latitude_, other->latitude_);
  swap(longitude_, other->longitude_);
  swap(altitude_, other->altitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  protobuf_mtm_2fcommon_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mtm_2fcommon_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mtm
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::Uuid* Arena::CreateMaybeMessage< ::mtm::Uuid >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::Uuid >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::SocketAddress* Arena::CreateMaybeMessage< ::mtm::SocketAddress >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::SocketAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::TypeUrl* Arena::CreateMaybeMessage< ::mtm::TypeUrl >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::TypeUrl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mtm::Location* Arena::CreateMaybeMessage< ::mtm::Location >(Arena* arena) {
  return Arena::CreateInternal< ::mtm::Location >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
