// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtm/common_types.proto

#ifndef PROTOBUF_INCLUDED_mtm_2fcommon_5ftypes_2eproto
#define PROTOBUF_INCLUDED_mtm_2fcommon_5ftypes_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_mtm_2fcommon_5ftypes_2eproto 

namespace protobuf_mtm_2fcommon_5ftypes_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_mtm_2fcommon_5ftypes_2eproto
namespace mtm {
class Location;
class LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class SocketAddress;
class SocketAddressDefaultTypeInternal;
extern SocketAddressDefaultTypeInternal _SocketAddress_default_instance_;
class TypeUrl;
class TypeUrlDefaultTypeInternal;
extern TypeUrlDefaultTypeInternal _TypeUrl_default_instance_;
class Uuid;
class UuidDefaultTypeInternal;
extern UuidDefaultTypeInternal _Uuid_default_instance_;
}  // namespace mtm
namespace google {
namespace protobuf {
template<> ::mtm::Location* Arena::CreateMaybeMessage<::mtm::Location>(Arena*);
template<> ::mtm::SocketAddress* Arena::CreateMaybeMessage<::mtm::SocketAddress>(Arena*);
template<> ::mtm::TypeUrl* Arena::CreateMaybeMessage<::mtm::TypeUrl>(Arena*);
template<> ::mtm::Uuid* Arena::CreateMaybeMessage<::mtm::Uuid>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mtm {

enum SocketAddress_AddressFamily {
  SocketAddress_AddressFamily_ADDRESSFAMILY_UNSPECIFIED = 0,
  SocketAddress_AddressFamily_ADDRESSFAMILY_UNKNOWN = -1,
  SocketAddress_AddressFamily_ADDRESSFAMILY_UNIX = 1,
  SocketAddress_AddressFamily_ADDRESSFAMILY_INTER_NETWORK = 2,
  SocketAddress_AddressFamily_ADDRESSFAMILY_IMPLINK = 3,
  SocketAddress_AddressFamily_ADDRESSFAMILY_PUP = 4,
  SocketAddress_AddressFamily_ADDRESSFAMILY_CHAOS = 5,
  SocketAddress_AddressFamily_ADDRESSFAMILY_IPX = 6,
  SocketAddress_AddressFamily_ADDRESSFAMILY_NS = 6,
  SocketAddress_AddressFamily_ADDRESSFAMILY_ISO = 7,
  SocketAddress_AddressFamily_ADDRESSFAMILY_OSI = 7,
  SocketAddress_AddressFamily_ADDRESSFAMILY_ECMA = 8,
  SocketAddress_AddressFamily_ADDRESSFAMILY_DATAKIT = 9,
  SocketAddress_AddressFamily_ADDRESSFAMILY_CCITT = 10,
  SocketAddress_AddressFamily_ADDRESSFAMILY_SNA = 11,
  SocketAddress_AddressFamily_ADDRESSFAMILY_DECNET = 12,
  SocketAddress_AddressFamily_ADDRESSFAMILY_DATALINK = 13,
  SocketAddress_AddressFamily_ADDRESSFAMILY_LAT = 14,
  SocketAddress_AddressFamily_ADDRESSFAMILY_HYPERCHANNEL = 15,
  SocketAddress_AddressFamily_ADDRESSFAMILY_APPLETALK = 16,
  SocketAddress_AddressFamily_ADDRESSFAMILY_NETBIOS = 17,
  SocketAddress_AddressFamily_ADDRESSFAMILY_VOICEVIEW = 18,
  SocketAddress_AddressFamily_ADDRESSFAMILY_FIREFOX = 19,
  SocketAddress_AddressFamily_ADDRESSFAMILY_BANYAN = 21,
  SocketAddress_AddressFamily_ADDRESSFAMILY_ATM = 22,
  SocketAddress_AddressFamily_ADDRESSFAMILY_INTER_NETWORKV6 = 23,
  SocketAddress_AddressFamily_ADDRESSFAMILY_CLUSTER = 24,
  SocketAddress_AddressFamily_ADDRESSFAMILY_IEEE12844 = 25,
  SocketAddress_AddressFamily_ADDRESSFAMILY_IRDA = 26,
  SocketAddress_AddressFamily_ADDRESSFAMILY_NETWORKDESIGNERS = 28,
  SocketAddress_AddressFamily_ADDRESSFAMILY_MAX = 29,
  SocketAddress_AddressFamily_SocketAddress_AddressFamily_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SocketAddress_AddressFamily_SocketAddress_AddressFamily_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SocketAddress_AddressFamily_IsValid(int value);
const SocketAddress_AddressFamily SocketAddress_AddressFamily_AddressFamily_MIN = SocketAddress_AddressFamily_ADDRESSFAMILY_UNKNOWN;
const SocketAddress_AddressFamily SocketAddress_AddressFamily_AddressFamily_MAX = SocketAddress_AddressFamily_ADDRESSFAMILY_MAX;
const int SocketAddress_AddressFamily_AddressFamily_ARRAYSIZE = SocketAddress_AddressFamily_AddressFamily_MAX + 1;

const ::google::protobuf::EnumDescriptor* SocketAddress_AddressFamily_descriptor();
inline const ::std::string& SocketAddress_AddressFamily_Name(SocketAddress_AddressFamily value) {
  return ::google::protobuf::internal::NameOfEnum(
    SocketAddress_AddressFamily_descriptor(), value);
}
inline bool SocketAddress_AddressFamily_Parse(
    const ::std::string& name, SocketAddress_AddressFamily* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SocketAddress_AddressFamily>(
    SocketAddress_AddressFamily_descriptor(), name, value);
}
// ===================================================================

class Uuid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.Uuid) */ {
 public:
  Uuid();
  virtual ~Uuid();

  Uuid(const Uuid& from);

  inline Uuid& operator=(const Uuid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Uuid(Uuid&& from) noexcept
    : Uuid() {
    *this = ::std::move(from);
  }

  inline Uuid& operator=(Uuid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Uuid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Uuid* internal_default_instance() {
    return reinterpret_cast<const Uuid*>(
               &_Uuid_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Uuid* other);
  friend void swap(Uuid& a, Uuid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Uuid* New() const final {
    return CreateMaybeMessage<Uuid>(NULL);
  }

  Uuid* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Uuid>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Uuid& from);
  void MergeFrom(const Uuid& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Uuid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:mtm.Uuid)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2fcommon_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SocketAddress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.SocketAddress) */ {
 public:
  SocketAddress();
  virtual ~SocketAddress();

  SocketAddress(const SocketAddress& from);

  inline SocketAddress& operator=(const SocketAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SocketAddress(SocketAddress&& from) noexcept
    : SocketAddress() {
    *this = ::std::move(from);
  }

  inline SocketAddress& operator=(SocketAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SocketAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SocketAddress* internal_default_instance() {
    return reinterpret_cast<const SocketAddress*>(
               &_SocketAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SocketAddress* other);
  friend void swap(SocketAddress& a, SocketAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SocketAddress* New() const final {
    return CreateMaybeMessage<SocketAddress>(NULL);
  }

  SocketAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SocketAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SocketAddress& from);
  void MergeFrom(const SocketAddress& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SocketAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SocketAddress_AddressFamily AddressFamily;
  static const AddressFamily ADDRESSFAMILY_UNSPECIFIED =
    SocketAddress_AddressFamily_ADDRESSFAMILY_UNSPECIFIED;
  static const AddressFamily ADDRESSFAMILY_UNKNOWN =
    SocketAddress_AddressFamily_ADDRESSFAMILY_UNKNOWN;
  static const AddressFamily ADDRESSFAMILY_UNIX =
    SocketAddress_AddressFamily_ADDRESSFAMILY_UNIX;
  static const AddressFamily ADDRESSFAMILY_INTER_NETWORK =
    SocketAddress_AddressFamily_ADDRESSFAMILY_INTER_NETWORK;
  static const AddressFamily ADDRESSFAMILY_IMPLINK =
    SocketAddress_AddressFamily_ADDRESSFAMILY_IMPLINK;
  static const AddressFamily ADDRESSFAMILY_PUP =
    SocketAddress_AddressFamily_ADDRESSFAMILY_PUP;
  static const AddressFamily ADDRESSFAMILY_CHAOS =
    SocketAddress_AddressFamily_ADDRESSFAMILY_CHAOS;
  static const AddressFamily ADDRESSFAMILY_IPX =
    SocketAddress_AddressFamily_ADDRESSFAMILY_IPX;
  static const AddressFamily ADDRESSFAMILY_NS =
    SocketAddress_AddressFamily_ADDRESSFAMILY_NS;
  static const AddressFamily ADDRESSFAMILY_ISO =
    SocketAddress_AddressFamily_ADDRESSFAMILY_ISO;
  static const AddressFamily ADDRESSFAMILY_OSI =
    SocketAddress_AddressFamily_ADDRESSFAMILY_OSI;
  static const AddressFamily ADDRESSFAMILY_ECMA =
    SocketAddress_AddressFamily_ADDRESSFAMILY_ECMA;
  static const AddressFamily ADDRESSFAMILY_DATAKIT =
    SocketAddress_AddressFamily_ADDRESSFAMILY_DATAKIT;
  static const AddressFamily ADDRESSFAMILY_CCITT =
    SocketAddress_AddressFamily_ADDRESSFAMILY_CCITT;
  static const AddressFamily ADDRESSFAMILY_SNA =
    SocketAddress_AddressFamily_ADDRESSFAMILY_SNA;
  static const AddressFamily ADDRESSFAMILY_DECNET =
    SocketAddress_AddressFamily_ADDRESSFAMILY_DECNET;
  static const AddressFamily ADDRESSFAMILY_DATALINK =
    SocketAddress_AddressFamily_ADDRESSFAMILY_DATALINK;
  static const AddressFamily ADDRESSFAMILY_LAT =
    SocketAddress_AddressFamily_ADDRESSFAMILY_LAT;
  static const AddressFamily ADDRESSFAMILY_HYPERCHANNEL =
    SocketAddress_AddressFamily_ADDRESSFAMILY_HYPERCHANNEL;
  static const AddressFamily ADDRESSFAMILY_APPLETALK =
    SocketAddress_AddressFamily_ADDRESSFAMILY_APPLETALK;
  static const AddressFamily ADDRESSFAMILY_NETBIOS =
    SocketAddress_AddressFamily_ADDRESSFAMILY_NETBIOS;
  static const AddressFamily ADDRESSFAMILY_VOICEVIEW =
    SocketAddress_AddressFamily_ADDRESSFAMILY_VOICEVIEW;
  static const AddressFamily ADDRESSFAMILY_FIREFOX =
    SocketAddress_AddressFamily_ADDRESSFAMILY_FIREFOX;
  static const AddressFamily ADDRESSFAMILY_BANYAN =
    SocketAddress_AddressFamily_ADDRESSFAMILY_BANYAN;
  static const AddressFamily ADDRESSFAMILY_ATM =
    SocketAddress_AddressFamily_ADDRESSFAMILY_ATM;
  static const AddressFamily ADDRESSFAMILY_INTER_NETWORKV6 =
    SocketAddress_AddressFamily_ADDRESSFAMILY_INTER_NETWORKV6;
  static const AddressFamily ADDRESSFAMILY_CLUSTER =
    SocketAddress_AddressFamily_ADDRESSFAMILY_CLUSTER;
  static const AddressFamily ADDRESSFAMILY_IEEE12844 =
    SocketAddress_AddressFamily_ADDRESSFAMILY_IEEE12844;
  static const AddressFamily ADDRESSFAMILY_IRDA =
    SocketAddress_AddressFamily_ADDRESSFAMILY_IRDA;
  static const AddressFamily ADDRESSFAMILY_NETWORKDESIGNERS =
    SocketAddress_AddressFamily_ADDRESSFAMILY_NETWORKDESIGNERS;
  static const AddressFamily ADDRESSFAMILY_MAX =
    SocketAddress_AddressFamily_ADDRESSFAMILY_MAX;
  static inline bool AddressFamily_IsValid(int value) {
    return SocketAddress_AddressFamily_IsValid(value);
  }
  static const AddressFamily AddressFamily_MIN =
    SocketAddress_AddressFamily_AddressFamily_MIN;
  static const AddressFamily AddressFamily_MAX =
    SocketAddress_AddressFamily_AddressFamily_MAX;
  static const int AddressFamily_ARRAYSIZE =
    SocketAddress_AddressFamily_AddressFamily_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AddressFamily_descriptor() {
    return SocketAddress_AddressFamily_descriptor();
  }
  static inline const ::std::string& AddressFamily_Name(AddressFamily value) {
    return SocketAddress_AddressFamily_Name(value);
  }
  static inline bool AddressFamily_Parse(const ::std::string& name,
      AddressFamily* value) {
    return SocketAddress_AddressFamily_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:mtm.SocketAddress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2fcommon_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TypeUrl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.TypeUrl) */ {
 public:
  TypeUrl();
  virtual ~TypeUrl();

  TypeUrl(const TypeUrl& from);

  inline TypeUrl& operator=(const TypeUrl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TypeUrl(TypeUrl&& from) noexcept
    : TypeUrl() {
    *this = ::std::move(from);
  }

  inline TypeUrl& operator=(TypeUrl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeUrl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TypeUrl* internal_default_instance() {
    return reinterpret_cast<const TypeUrl*>(
               &_TypeUrl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(TypeUrl* other);
  friend void swap(TypeUrl& a, TypeUrl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TypeUrl* New() const final {
    return CreateMaybeMessage<TypeUrl>(NULL);
  }

  TypeUrl* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TypeUrl>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TypeUrl& from);
  void MergeFrom(const TypeUrl& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TypeUrl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:mtm.TypeUrl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2fcommon_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Location : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtm.Location) */ {
 public:
  Location();
  virtual ~Location();

  Location(const Location& from);

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Location(Location&& from) noexcept
    : Location() {
    *this = ::std::move(from);
  }

  inline Location& operator=(Location&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Location& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
               &_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Location* other);
  friend void swap(Location& a, Location& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Location* New() const final {
    return CreateMaybeMessage<Location>(NULL);
  }

  Location* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Location>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Location& from);
  void MergeFrom(const Location& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.DoubleValue latitude = 1;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  private:
  const ::google::protobuf::DoubleValue& _internal_latitude() const;
  public:
  const ::google::protobuf::DoubleValue& latitude() const;
  ::google::protobuf::DoubleValue* release_latitude();
  ::google::protobuf::DoubleValue* mutable_latitude();
  void set_allocated_latitude(::google::protobuf::DoubleValue* latitude);

  // .google.protobuf.DoubleValue longitude = 2;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  private:
  const ::google::protobuf::DoubleValue& _internal_longitude() const;
  public:
  const ::google::protobuf::DoubleValue& longitude() const;
  ::google::protobuf::DoubleValue* release_longitude();
  ::google::protobuf::DoubleValue* mutable_longitude();
  void set_allocated_longitude(::google::protobuf::DoubleValue* longitude);

  // .google.protobuf.DoubleValue altitude = 3;
  bool has_altitude() const;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 3;
  private:
  const ::google::protobuf::DoubleValue& _internal_altitude() const;
  public:
  const ::google::protobuf::DoubleValue& altitude() const;
  ::google::protobuf::DoubleValue* release_altitude();
  ::google::protobuf::DoubleValue* mutable_altitude();
  void set_allocated_altitude(::google::protobuf::DoubleValue* altitude);

  // @@protoc_insertion_point(class_scope:mtm.Location)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::DoubleValue* latitude_;
  ::google::protobuf::DoubleValue* longitude_;
  ::google::protobuf::DoubleValue* altitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_mtm_2fcommon_5ftypes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Uuid

// bytes value = 1;
inline void Uuid::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Uuid::value() const {
  // @@protoc_insertion_point(field_get:mtm.Uuid.value)
  return value_.GetNoArena();
}
inline void Uuid::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.Uuid.value)
}
#if LANG_CXX11
inline void Uuid::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtm.Uuid.value)
}
#endif
inline void Uuid::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.Uuid.value)
}
inline void Uuid::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.Uuid.value)
}
inline ::std::string* Uuid::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:mtm.Uuid.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Uuid::release_value() {
  // @@protoc_insertion_point(field_release:mtm.Uuid.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Uuid::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:mtm.Uuid.value)
}

// -------------------------------------------------------------------

// SocketAddress

// bytes data = 2;
inline void SocketAddress::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SocketAddress::data() const {
  // @@protoc_insertion_point(field_get:mtm.SocketAddress.data)
  return data_.GetNoArena();
}
inline void SocketAddress::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.SocketAddress.data)
}
#if LANG_CXX11
inline void SocketAddress::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtm.SocketAddress.data)
}
#endif
inline void SocketAddress::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.SocketAddress.data)
}
inline void SocketAddress::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.SocketAddress.data)
}
inline ::std::string* SocketAddress::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mtm.SocketAddress.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SocketAddress::release_data() {
  // @@protoc_insertion_point(field_release:mtm.SocketAddress.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SocketAddress::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mtm.SocketAddress.data)
}

// -------------------------------------------------------------------

// TypeUrl

// string value = 1;
inline void TypeUrl::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TypeUrl::value() const {
  // @@protoc_insertion_point(field_get:mtm.TypeUrl.value)
  return value_.GetNoArena();
}
inline void TypeUrl::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtm.TypeUrl.value)
}
#if LANG_CXX11
inline void TypeUrl::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtm.TypeUrl.value)
}
#endif
inline void TypeUrl::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtm.TypeUrl.value)
}
inline void TypeUrl::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtm.TypeUrl.value)
}
inline ::std::string* TypeUrl::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:mtm.TypeUrl.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TypeUrl::release_value() {
  // @@protoc_insertion_point(field_release:mtm.TypeUrl.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TypeUrl::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:mtm.TypeUrl.value)
}

// -------------------------------------------------------------------

// Location

// .google.protobuf.DoubleValue latitude = 1;
inline bool Location::has_latitude() const {
  return this != internal_default_instance() && latitude_ != NULL;
}
inline const ::google::protobuf::DoubleValue& Location::_internal_latitude() const {
  return *latitude_;
}
inline const ::google::protobuf::DoubleValue& Location::latitude() const {
  const ::google::protobuf::DoubleValue* p = latitude_;
  // @@protoc_insertion_point(field_get:mtm.Location.latitude)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* Location::release_latitude() {
  // @@protoc_insertion_point(field_release:mtm.Location.latitude)
  
  ::google::protobuf::DoubleValue* temp = latitude_;
  latitude_ = NULL;
  return temp;
}
inline ::google::protobuf::DoubleValue* Location::mutable_latitude() {
  
  if (latitude_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::DoubleValue>(GetArenaNoVirtual());
    latitude_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.Location.latitude)
  return latitude_;
}
inline void Location::set_allocated_latitude(::google::protobuf::DoubleValue* latitude) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(latitude_);
  }
  if (latitude) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(latitude)->GetArena();
    if (message_arena != submessage_arena) {
      latitude = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, latitude, submessage_arena);
    }
    
  } else {
    
  }
  latitude_ = latitude;
  // @@protoc_insertion_point(field_set_allocated:mtm.Location.latitude)
}

// .google.protobuf.DoubleValue longitude = 2;
inline bool Location::has_longitude() const {
  return this != internal_default_instance() && longitude_ != NULL;
}
inline const ::google::protobuf::DoubleValue& Location::_internal_longitude() const {
  return *longitude_;
}
inline const ::google::protobuf::DoubleValue& Location::longitude() const {
  const ::google::protobuf::DoubleValue* p = longitude_;
  // @@protoc_insertion_point(field_get:mtm.Location.longitude)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* Location::release_longitude() {
  // @@protoc_insertion_point(field_release:mtm.Location.longitude)
  
  ::google::protobuf::DoubleValue* temp = longitude_;
  longitude_ = NULL;
  return temp;
}
inline ::google::protobuf::DoubleValue* Location::mutable_longitude() {
  
  if (longitude_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::DoubleValue>(GetArenaNoVirtual());
    longitude_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.Location.longitude)
  return longitude_;
}
inline void Location::set_allocated_longitude(::google::protobuf::DoubleValue* longitude) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(longitude_);
  }
  if (longitude) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(longitude)->GetArena();
    if (message_arena != submessage_arena) {
      longitude = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, longitude, submessage_arena);
    }
    
  } else {
    
  }
  longitude_ = longitude;
  // @@protoc_insertion_point(field_set_allocated:mtm.Location.longitude)
}

// .google.protobuf.DoubleValue altitude = 3;
inline bool Location::has_altitude() const {
  return this != internal_default_instance() && altitude_ != NULL;
}
inline const ::google::protobuf::DoubleValue& Location::_internal_altitude() const {
  return *altitude_;
}
inline const ::google::protobuf::DoubleValue& Location::altitude() const {
  const ::google::protobuf::DoubleValue* p = altitude_;
  // @@protoc_insertion_point(field_get:mtm.Location.altitude)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* Location::release_altitude() {
  // @@protoc_insertion_point(field_release:mtm.Location.altitude)
  
  ::google::protobuf::DoubleValue* temp = altitude_;
  altitude_ = NULL;
  return temp;
}
inline ::google::protobuf::DoubleValue* Location::mutable_altitude() {
  
  if (altitude_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::DoubleValue>(GetArenaNoVirtual());
    altitude_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mtm.Location.altitude)
  return altitude_;
}
inline void Location::set_allocated_altitude(::google::protobuf::DoubleValue* altitude) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(altitude_);
  }
  if (altitude) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(altitude)->GetArena();
    if (message_arena != submessage_arena) {
      altitude = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, altitude, submessage_arena);
    }
    
  } else {
    
  }
  altitude_ = altitude;
  // @@protoc_insertion_point(field_set_allocated:mtm.Location.altitude)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mtm

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mtm::SocketAddress_AddressFamily> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mtm::SocketAddress_AddressFamily>() {
  return ::mtm::SocketAddress_AddressFamily_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_mtm_2fcommon_5ftypes_2eproto
